<kicad>
  <try>(kicad_pcb (version </try>
  <rect>
    <try>\n    (area 91.160599</try>
    <success>\n    (thickness 1.60</success>
    <attributes>[91.1606, 61.8236, 196.621, 118.313]</attributes>
  </rect>
  <layer>
    <try>\n    (15 Dessus sign</try>
    <success>\n    (0 Dessous sign</success>
    <attributes>[15, [D, e, s, s, u, s], [s, i, g, n, a, l], 0]</attributes>
  </layer>
  <layer>
    <try>\n    (0 Dessous sign</try>
    <success>\n    (16 Dessous.Adh</success>
    <attributes>[0, [D, e, s, s, o, u, s], [s, i, g, n, a, l], 0]</attributes>
  </layer>
  <layer>
    <try>\n    (16 Dessous.Adh</try>
    <success>\n    (17 Dessus.Adhe</success>
    <attributes>[16, [D, e, s, s, o, u, s, ., A, d, h, e, s], [u, s, e, r], 0]</attributes>
  </layer>
  <layer>
    <try>\n    (17 Dessus.Adhe</try>
    <success>\n    (18 Dessous.Pat</success>
    <attributes>[17, [D, e, s, s, u, s, ., A, d, h, e, s], [u, s, e, r], 0]</attributes>
  </layer>
  <layer>
    <try>\n    (18 Dessous.Pat</try>
    <success>\n    (19 Dessus.Pate</success>
    <attributes>[18, [D, e, s, s, o, u, s, ., P, a, t, e], [u, s, e, r], 0]</attributes>
  </layer>
  <layer>
    <try>\n    (19 Dessus.Pate</try>
    <success>\n    (20 Dessous.Sil</success>
    <attributes>[19, [D, e, s, s, u, s, ., P, a, t, e], [u, s, e, r], 0]</attributes>
  </layer>
  <layer>
    <try>\n    (20 Dessous.Sil</try>
    <success>\n    (21 Dessus.Silk</success>
    <attributes>[20, [D, e, s, s, o, u, s, ., S, i, l, k, S], [u, s, e, r], 0]</attributes>
  </layer>
  <layer>
    <try>\n    (21 Dessus.Silk</try>
    <success>\n    (22 Dessous.Mas</success>
    <attributes>[21, [D, e, s, s, u, s, ., S, i, l, k, S], [u, s, e, r], 0]</attributes>
  </layer>
  <layer>
    <try>\n    (22 Dessous.Mas</try>
    <success>\n    (23 Dessus.Masq</success>
    <attributes>[22, [D, e, s, s, o, u, s, ., M, a, s, q, u, e], [u, s, e, r], 0]</attributes>
  </layer>
  <layer>
    <try>\n    (23 Dessus.Masq</try>
    <success>\n    (24 Dessin.User</success>
    <attributes>[23, [D, e, s, s, u, s, ., M, a, s, q, u, e], [u, s, e, r], 0]</attributes>
  </layer>
  <layer>
    <try>\n    (24 Dessin.User</try>
    <success>\n    (25 Cmts.User u</success>
    <attributes>[24, [D, e, s, s, i, n, ., U, s, e, r], [u, s, e, r], 0]</attributes>
  </layer>
  <layer>
    <try>\n    (25 Cmts.User u</try>
    <success>\n    (26 Eco1.User u</success>
    <attributes>[25, [C, m, t, s, ., U, s, e, r], [u, s, e, r], 0]</attributes>
  </layer>
  <layer>
    <try>\n    (26 Eco1.User u</try>
    <success>\n    (27 Eco2.User u</success>
    <attributes>[26, [E, c, o, 1, ., U, s, e, r], [u, s, e, r], 0]</attributes>
  </layer>
  <layer>
    <try>\n    (27 Eco2.User u</try>
    <success>\n    (28 Contours.Ci</success>
    <attributes>[27, [E, c, o, 2, ., U, s, e, r], [u, s, e, r], 0]</attributes>
  </layer>
  <layer>
    <try>\n    (28 Contours.Ci</try>
    <success>\n  )\n\n  (setup\n    (</success>
    <attributes>[28, [C, o, n, t, o, u, r, s, ., C, i], [u, s, e, r], 0]</attributes>
  </layer>
  <layer>
    <try>\n  )\n\n  (setup\n    (</try>
    <fail/>
  </layer>
  <component>
    <try>\n\n  (module DB25M_CI</try>
    <at_pos_rot>
      <try>\n    (at 102.87 88.9</try>
      <success>\n    (descr "Connect</success>
      <attributes>[102.87, 88.9, 90]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Connect</try>
      <quoted_string>
        <try>"Connected DB25 male</try>
        <success>)\n    (tags "CONN DB</success>
        <attributes>[C, o, n, n, e, c, t, e, d,  , D, B, 2, 5,  , m, a, l, e,  , c, o, u, c, h, e]</attributes>
      </quoted_string>
      <success>\n    (tags "CONN DB2</success>
      <attributes>[[d, e, s, c, r], [C, o, n, n, e, c, t, e, d,  , D, B, 2, 5,  , m, a, l, e,  , c, o, u, c, h, e]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags "CONN DB2</try>
      <quoted_string>
        <try>"CONN DB25")\n    (pa</try>
        <success>)\n    (path /3EBF7D0</success>
        <attributes>[C, O, N, N,  , D, B, 2, 5]</attributes>
      </quoted_string>
      <success>\n    (path /3EBF7D04</success>
      <attributes>[[t, a, g, s], [C, O, N, N,  , D, B, 2, 5]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /3EBF7D04</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[p, a, t, h], [/, 3, E, B, F, 7, D, 0, 4]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at 0 -2.667 270) (</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, -2.667, 270]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.524 1.</try>
          <bar>
            <try>font (size 1.524 1.5</try>
            <foo>
              <try>(size 1.524 1.524) (</try>
              <bar>
                <try>size 1.524 1.524) (t</try>
                <foo>
                  <try>) (thickness 0.3048)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.3048)</success>
              </bar>
              <success> (thickness 0.3048))</success>
            </foo>
            <foo>
              <try> (thickness 0.3048))</try>
              <bar>
                <try>thickness 0.3048)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [J, 1], [0, -2.667, 270], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 0 -8.763 270) (</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, -8.763, 270]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.524 1.</try>
          <bar>
            <try>font (size 1.524 1.5</try>
            <foo>
              <try>(size 1.524 1.524) (</try>
              <bar>
                <try>size 1.524 1.524) (t</try>
                <foo>
                  <try>) (thickness 0.3048)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.3048)</success>
              </bar>
              <success> (thickness 0.3048))</success>
            </foo>
            <foo>
              <try> (thickness 0.3048))</try>
              <bar>
                <try>thickness 0.3048)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [D, B, 2, 5, M, A, L, E], [0, -8.763, 270], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[15.875, -0.508, 16.891, -3.302, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[16.891, -3.302, 17.907, -0.508, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-26.67, -4.318, 26.67, -4.318, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[26.67, -5.588, -26.67, -5.588, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[26.67, -5.588, 26.67, -4.318, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-26.67, -5.588, -26.67, -4.318, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[20.32, -0.508, -20.32, -0.508, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[19.05, -0.508, 19.05, 1.143, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[19.05, 1.143, 17.78, 1.143, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-19.05, -0.508, -19.05, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-19.05, 1.016, -17.78, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-20.32, -0.508, -20.32, -4.318, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[20.32, -4.318, 20.32, -0.508, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-20.32, -5.588, -20.32, -11.303, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-20.32, -11.303, 20.32, -11.303, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 13 connect</success>
      <attributes>[20.32, -11.303, 20.32, -5.588, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 13 connect</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 13 connect rect (at</try>
        <success> connect rect (at -1</success>
        <attributes>13</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -16.51 2.667 180</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[-16.51, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Dessu</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 3 /DONE-</try>
        <success>\n    )\n    (pad 12 c</success>
        <attributes>[3, [/, D, O, N, E, -, S, E, L, E, C, T, *]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 12 connect</success>
      <attributes>[13, [[c, o, n, n, e, c, t], [r, e, c, t]], [-16.51, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, u, s], [D, e, s, s, u, s, ., M, a, s, q, u, e]], [3, [/, D, O, N, E, -, S, E, L, E, C, T, *]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 12 connect</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 12 connect rect (at</try>
        <success> connect rect (at -1</success>
        <attributes>12</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -13.716 2.667 18</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[-13.716, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Dessu</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 14 N-000</try>
        <success>\n    )\n    (pad 11 c</success>
        <attributes>[14, [N, -, 0, 0, 0, 0, 0, 8]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 11 connect</success>
      <attributes>[12, [[c, o, n, n, e, c, t], [r, e, c, t]], [-13.716, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, u, s], [D, e, s, s, u, s, ., M, a, s, q, u, e]], [14, [N, -, 0, 0, 0, 0, 0, 8]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 11 connect</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 11 connect rect (at</try>
        <success> connect rect (at -1</success>
        <attributes>11</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -11.049 2.667 18</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[-11.049, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Dessu</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 14 N-000</try>
        <success>\n    )\n    (pad 10 c</success>
        <attributes>[14, [N, -, 0, 0, 0, 0, 0, 8]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 10 connect</success>
      <attributes>[11, [[c, o, n, n, e, c, t], [r, e, c, t]], [-11.049, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, u, s], [D, e, s, s, u, s, ., M, a, s, q, u, e]], [14, [N, -, 0, 0, 0, 0, 0, 8]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 10 connect</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 10 connect rect (at</try>
        <success> connect rect (at -8</success>
        <attributes>10</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -8.255 2.667 180</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[-8.255, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Dessu</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad 9 co</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 9 connect </success>
      <attributes>[10, [[c, o, n, n, e, c, t], [r, e, c, t]], [-8.255, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, u, s], [D, e, s, s, u, s, ., M, a, s, q, u, e]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 9 connect </try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 9 connect rect (at </try>
        <success> connect rect (at -5</success>
        <attributes>9</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -5.588 2.667 180</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[-5.588, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Dessu</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad 8 co</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 8 connect </success>
      <attributes>[9, [[c, o, n, n, e, c, t], [r, e, c, t]], [-5.588, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, u, s], [D, e, s, s, u, s, ., M, a, s, q, u, e]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 8 connect </try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 8 connect rect (at </try>
        <success> connect rect (at -2</success>
        <attributes>8</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -2.794 2.667 180</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[-2.794, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Dessu</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 14 N-000</try>
        <success>\n    )\n    (pad 7 co</success>
        <attributes>[14, [N, -, 0, 0, 0, 0, 0, 8]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 7 connect </success>
      <attributes>[8, [[c, o, n, n, e, c, t], [r, e, c, t]], [-2.794, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, u, s], [D, e, s, s, u, s, ., M, a, s, q, u, e]], [14, [N, -, 0, 0, 0, 0, 0, 8]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 7 connect </try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 7 connect rect (at </try>
        <success> connect rect (at 0 </success>
        <attributes>7</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 0 2.667 180) (si</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[0, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Dessu</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad 6 co</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 6 connect </success>
      <attributes>[7, [[c, o, n, n, e, c, t], [r, e, c, t]], [0, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, u, s], [D, e, s, s, u, s, ., M, a, s, q, u, e]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 6 connect </try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 6 connect rect (at </try>
        <success> connect rect (at 2.</success>
        <attributes>6</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 2.667 2.667 180)</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[2.667, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Dessu</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 7 /TD0-P</try>
        <success>\n    )\n    (pad 5 co</success>
        <attributes>[7, [/, T, D, 0, -, P, R, O, G, -, D, 4]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 5 connect </success>
      <attributes>[6, [[c, o, n, n, e, c, t], [r, e, c, t]], [2.667, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, u, s], [D, e, s, s, u, s, ., M, a, s, q, u, e]], [7, [/, T, D, 0, -, P, R, O, G, -, D, 4]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 5 connect </try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 5 connect rect (at </try>
        <success> connect rect (at 5.</success>
        <attributes>5</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 5.461 2.667 180)</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[5.461, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Dessu</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 2 /CTRL-</try>
        <success>\n    )\n    (pad 4 co</success>
        <attributes>[2, [/, C, T, R, L, -, D, 3]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 4 connect </success>
      <attributes>[5, [[c, o, n, n, e, c, t], [r, e, c, t]], [5.461, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, u, s], [D, e, s, s, u, s, ., M, a, s, q, u, e]], [2, [/, C, T, R, L, -, D, 3]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 4 connect </try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 4 connect rect (at </try>
        <success> connect rect (at 8.</success>
        <attributes>4</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 8.128 2.667 180)</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[8.128, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Dessu</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 11 /TMS-</try>
        <success>\n    )\n    (pad 3 co</success>
        <attributes>[11, [/, T, M, S, -, P, R, O, G, -, D, 2]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 3 connect </success>
      <attributes>[4, [[c, o, n, n, e, c, t], [r, e, c, t]], [8.128, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, u, s], [D, e, s, s, u, s, ., M, a, s, q, u, e]], [11, [/, T, M, S, -, P, R, O, G, -, D, 2]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 3 connect </try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 3 connect rect (at </try>
        <success> connect rect (at 10</success>
        <attributes>3</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 10.922 2.667 180</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[10.922, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Dessu</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 1 /CLK-D</try>
        <success>\n    )\n    (pad 2 co</success>
        <attributes>[1, [/, C, L, K, -, D, 1]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 2 connect </success>
      <attributes>[3, [[c, o, n, n, e, c, t], [r, e, c, t]], [10.922, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, u, s], [D, e, s, s, u, s, ., M, a, s, q, u, e]], [1, [/, C, L, K, -, D, 1]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 2 connect </try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 connect rect (at </try>
        <success> connect rect (at 13</success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 13.716 2.667 180</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[13.716, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Dessu</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 9 /TDI-D</try>
        <success>\n    )\n    (pad 1 co</success>
        <attributes>[9, [/, T, D, I, -, D, I, N, -, D, 0]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 1 connect </success>
      <attributes>[2, [[c, o, n, n, e, c, t], [r, e, c, t]], [13.716, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, u, s], [D, e, s, s, u, s, ., M, a, s, q, u, e]], [9, [/, T, D, I, -, D, I, N, -, D, 0]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 1 connect </try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 connect rect (at </try>
        <success> connect rect (at 16</success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 16.383 2.667 180</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[16.383, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Dessu</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad 25 c</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 25 connect</success>
      <attributes>[1, [[c, o, n, n, e, c, t], [r, e, c, t]], [16.383, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, u, s], [D, e, s, s, u, s, ., M, a, s, q, u, e]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 25 connect</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 25 connect rect (at</try>
        <success> connect rect (at -1</success>
        <attributes>25</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -15.113 2.667 18</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[-15.113, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Desso</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 13 GND)\n</try>
        <success>\n    )\n    (pad 24 c</success>
        <attributes>[13, [G, N, D]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 24 connect</success>
      <attributes>[25, [[c, o, n, n, e, c, t], [r, e, c, t]], [-15.113, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, o, u, s], [D, e, s, s, o, u, s, ., M, a, s, q, u, e]], [13, [G, N, D]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 24 connect</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 24 connect rect (at</try>
        <success> connect rect (at -1</success>
        <attributes>24</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -12.446 2.667 18</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[-12.446, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Desso</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad 23 c</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 23 connect</success>
      <attributes>[24, [[c, o, n, n, e, c, t], [r, e, c, t]], [-12.446, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, o, u, s], [D, e, s, s, o, u, s, ., M, a, s, q, u, e]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 23 connect</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 23 connect rect (at</try>
        <success> connect rect (at -9</success>
        <attributes>23</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -9.652 2.667 180</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[-9.652, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Desso</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad 22 c</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 22 connect</success>
      <attributes>[23, [[c, o, n, n, e, c, t], [r, e, c, t]], [-9.652, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, o, u, s], [D, e, s, s, o, u, s, ., M, a, s, q, u, e]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 22 connect</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 22 connect rect (at</try>
        <success> connect rect (at -6</success>
        <attributes>22</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -6.858 2.667 180</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[-6.858, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Desso</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad 21 c</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 21 connect</success>
      <attributes>[22, [[c, o, n, n, e, c, t], [r, e, c, t]], [-6.858, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, o, u, s], [D, e, s, s, o, u, s, ., M, a, s, q, u, e]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 21 connect</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 21 connect rect (at</try>
        <success> connect rect (at -4</success>
        <attributes>21</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -4.191 2.667 180</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[-4.191, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Desso</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad 20 c</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 20 connect</success>
      <attributes>[21, [[c, o, n, n, e, c, t], [r, e, c, t]], [-4.191, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, o, u, s], [D, e, s, s, o, u, s, ., M, a, s, q, u, e]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 20 connect</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 20 connect rect (at</try>
        <success> connect rect (at -1</success>
        <attributes>20</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -1.397 2.667 180</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[-1.397, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Desso</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 13 GND)\n</try>
        <success>\n    )\n    (pad 19 c</success>
        <attributes>[13, [G, N, D]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 19 connect</success>
      <attributes>[20, [[c, o, n, n, e, c, t], [r, e, c, t]], [-1.397, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, o, u, s], [D, e, s, s, o, u, s, ., M, a, s, q, u, e]], [13, [G, N, D]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 19 connect</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 19 connect rect (at</try>
        <success> connect rect (at 1.</success>
        <attributes>19</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 1.27 2.667 180) </try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[1.27, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Desso</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad 18 c</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 18 connect</success>
      <attributes>[19, [[c, o, n, n, e, c, t], [r, e, c, t]], [1.27, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, o, u, s], [D, e, s, s, o, u, s, ., M, a, s, q, u, e]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 18 connect</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 18 connect rect (at</try>
        <success> connect rect (at 4.</success>
        <attributes>18</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 4.064 2.667 180)</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[4.064, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Desso</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad 17 c</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 17 connect</success>
      <attributes>[18, [[c, o, n, n, e, c, t], [r, e, c, t]], [4.064, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, o, u, s], [D, e, s, s, o, u, s, ., M, a, s, q, u, e]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 17 connect</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 17 connect rect (at</try>
        <success> connect rect (at 6.</success>
        <attributes>17</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 6.858 2.667 180)</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[6.858, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Desso</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad 16 c</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 16 connect</success>
      <attributes>[17, [[c, o, n, n, e, c, t], [r, e, c, t]], [6.858, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, o, u, s], [D, e, s, s, o, u, s, ., M, a, s, q, u, e]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 16 connect</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 16 connect rect (at</try>
        <success> connect rect (at 9.</success>
        <attributes>16</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 9.525 2.667 180)</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[9.525, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Desso</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad 15 c</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 15 connect</success>
      <attributes>[16, [[c, o, n, n, e, c, t], [r, e, c, t]], [9.525, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, o, u, s], [D, e, s, s, o, u, s, ., M, a, s, q, u, e]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 15 connect</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 15 connect rect (at</try>
        <success> connect rect (at 12</success>
        <attributes>15</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 12.319 2.667 180</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[12.319, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Desso</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 12 /VCC_</try>
        <success>\n    )\n    (pad 14 c</success>
        <attributes>[12, [/, V, C, C, _, S, E, N, S, E, -, E, R, R, O, R, *]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 14 connect</success>
      <attributes>[15, [[c, o, n, n, e, c, t], [r, e, c, t]], [12.319, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, o, u, s], [D, e, s, s, o, u, s, ., M, a, s, q, u, e]], [12, [/, V, C, C, _, S, E, N, S, E, -, E, R, R, O, R, *]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 14 connect</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 14 connect rect (at</try>
        <success> connect rect (at 14</success>
        <attributes>14</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 14.986 2.667 180</try>
        <success> (size 5.08 1.524)\n </success>
        <attributes>[14.986, 2.667, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 5.08 1.524)\n </try>
        <success>\n      (layers Desso</success>
        <attributes>[5.08, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (model co</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model conn_DBx</success>
      <attributes>[14, [[c, o, n, n, e, c, t], [r, e, c, t]], [14.986, 2.667, 180], [5.08, 1.524], 0, [[D, e, s, s, o, u, s], [D, e, s, s, o, u, s, ., M, a, s, q, u, e]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model conn_DBx</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model conn_DBx</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model conn_DBx</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model conn_DBxx/db25</try>
      <foo>
        <try>(at (xyz 0 0 -0.033)</try>
        <bar>
          <try>at (xyz 0 0 -0.033))</try>
          <foo>
            <try>(xyz 0 0 -0.033))\n  </try>
            <bar>
              <try>xyz 0 0 -0.033))\n   </try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 0</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 0</try>
        <bar>
          <try>scale (xyz 0.98 1 1)</try>
          <foo>
            <try>(xyz 0.98 1 1))\n    </try>
            <bar>
              <try>xyz 0.98 1 1))\n     </try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 90 180 0</try>
          <foo>
            <try>(xyz 90 180 0))\n    </try>
            <bar>
              <try>xyz 90 180 0))\n    )</try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module MIRE (la</success>
    <attributes>[[D, B, 2, 5, M, _, C, I], [D, e, s, s, u, s], [102.87, 88.9, 90], [[[d, e, s, c, r], [C, o, n, n, e, c, t, e, d,  , D, B, 2, 5,  , m, a, l, e,  , c, o, u, c, h, e]], [[t, a, g, s], [C, O, N, N,  , D, B, 2, 5]], [[p, a, t, h], [/, 3, E, B, F, 7, D, 0, 4]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module MIRE (la</try>
    <at_pos_rot>
      <try>\n    (at 102.87 67.3</try>
      <success>\n    (path MIRE)\n   </success>
      <attributes>[102.87, 67.31, 0]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (path MIRE)\n   </try>
      <success>\n    (fp_text refere</success>
      <attributes>[[p, a, t, h], [M, I, R, E]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at -0.127 4.572) (</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[-0.127, 4.572, 0]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.016 1.</try>
          <bar>
            <try>font (size 1.016 1.0</try>
            <foo>
              <try>(size 1.016 1.016) (</try>
              <bar>
                <try>size 1.016 1.016) (t</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [M, I, R, E], [-0.127, 4.572, 0], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 3.302 2.794) (l</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[3.302, 2.794, 0]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.524 1.</try>
          <bar>
            <try>font (size 1.524 1.5</try>
            <foo>
              <try>(size 1.524 1.524) (</try>
              <bar>
                <try>size 1.524 1.524) (t</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_ci</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_ci</success>
              </bar>
              <success>))\n    )\n    (fp_cir</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_cir</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_cir</success>
          </bar>
          <success>)\n    )\n    (fp_circ</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_circ</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_circ</success>
      </bar>
      <success>\n    (fp_circle (cen</success>
      <attributes>[[v, a, l, u, e], [*], [3.302, 2.794, 0], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_circle (cen</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_circle (cen</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_circle (cen</try>
      <fail/>
    </fp_line>
    <fp_circle>
      <try> (center 0 0) (end 2</try>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, 0, 2.54, 1.905, [D, e, s, s, u, s, ., S, i, l, k, S], 0.381]</attributes>
    </fp_circle>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole rect (</try>
        <success> thru_hole rect (at </success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -1.524 0) (size </try>
        <success> (size 2.794 0.254)\n</success>
        <attributes>[-1.524, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 2.794 0.254)\n</try>
        <success>\n      (layers *.Cu </success>
        <attributes>[2.794, 0.254]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad "" t</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [-1.524, 0, 0], [2.794, 0.254], 0, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole rect (</try>
        <success> thru_hole rect (at </success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 0 -1.524) (size </try>
        <success> (size 0.254 2.794)\n</success>
        <attributes>[0, -1.524, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 0.254 2.794)\n</try>
        <success>\n      (layers *.Cu </success>
        <attributes>[0.254, 2.794]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad "" t</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [0, -1.524, 0], [0.254, 2.794], 0, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole circle</try>
        <success> thru_hole circle (a</success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 0 0) (size 0.254</try>
        <success> (size 0.254 0.254) </success>
        <attributes>[0, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 0.254 0.254) </try>
        <success> (drill 0.0508)\n    </success>
        <attributes>[0.254, 0.254]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad "" t</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [0, 0, 0], [0.254, 0.254], 0.0508, [[*, ., C, u], [*, ., M, a, s, k]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole rect (</try>
        <success> thru_hole rect (at </success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -1.524 0) (size </try>
        <success> (size 2.286 0.254)\n</success>
        <attributes>[-1.524, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 2.286 0.254)\n</try>
        <success>\n      (layers *.Cu </success>
        <attributes>[2.286, 0.254]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad "" t</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [-1.524, 0, 0], [2.286, 0.254], 0, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole rect (</try>
        <success> thru_hole rect (at </success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 0 1.524) (size 0</try>
        <success> (size 0.254 2.794)\n</success>
        <attributes>[0, 1.524, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 0.254 2.794)\n</try>
        <success>\n      (layers *.Cu </success>
        <attributes>[0.254, 2.794]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad "" t</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [0, 1.524, 0], [0.254, 2.794], 0, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole rect (</try>
        <success> thru_hole rect (at </success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 1.524 0) (size 2</try>
        <success> (size 2.794 0.254)\n</success>
        <attributes>[1.524, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 2.794 0.254)\n</try>
        <success>\n      (layers *.Cu </success>
        <attributes>[2.794, 0.254]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n  )\n\n  (module MIRE</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [1.524, 0, 0], [2.794, 0.254], 0, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n  )\n\n  (module MIRE</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n  )\n\n  (module MIRE</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n  )\n\n  (module MIRE</try>
      <fail/>
    </fp_line>
    <success>\n\n  (module MIRE (la</success>
    <attributes>[[M, I, R, E], [D, e, s, s, u, s], [102.87, 67.31, 0], [[[p, a, t, h], [M, I, R, E]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module MIRE (la</try>
    <at_pos_rot>
      <try>\n    (at 102.87 110.</try>
      <success>\n    (path MIRE)\n   </success>
      <attributes>[102.87, 110.49, 0]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (path MIRE)\n   </try>
      <success>\n    (fp_text refere</success>
      <attributes>[[p, a, t, h], [M, I, R, E]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at -0.127 4.572) (</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[-0.127, 4.572, 0]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.016 1.</try>
          <bar>
            <try>font (size 1.016 1.0</try>
            <foo>
              <try>(size 1.016 1.016) (</try>
              <bar>
                <try>size 1.016 1.016) (t</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [M, I, R, E], [-0.127, 4.572, 0], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 3.302 2.794) (l</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[3.302, 2.794, 0]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.524 1.</try>
          <bar>
            <try>font (size 1.524 1.5</try>
            <foo>
              <try>(size 1.524 1.524) (</try>
              <bar>
                <try>size 1.524 1.524) (t</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_ci</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_ci</success>
              </bar>
              <success>))\n    )\n    (fp_cir</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_cir</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_cir</success>
          </bar>
          <success>)\n    )\n    (fp_circ</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_circ</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_circ</success>
      </bar>
      <success>\n    (fp_circle (cen</success>
      <attributes>[[v, a, l, u, e], [*], [3.302, 2.794, 0], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_circle (cen</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_circle (cen</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_circle (cen</try>
      <fail/>
    </fp_line>
    <fp_circle>
      <try> (center 0 0) (end 2</try>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, 0, 2.54, 1.905, [D, e, s, s, u, s, ., S, i, l, k, S], 0.381]</attributes>
    </fp_circle>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole rect (</try>
        <success> thru_hole rect (at </success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -1.524 0) (size </try>
        <success> (size 2.794 0.254)\n</success>
        <attributes>[-1.524, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 2.794 0.254)\n</try>
        <success>\n      (layers *.Cu </success>
        <attributes>[2.794, 0.254]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad "" t</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [-1.524, 0, 0], [2.794, 0.254], 0, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole rect (</try>
        <success> thru_hole rect (at </success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 0 -1.524) (size </try>
        <success> (size 0.254 2.794)\n</success>
        <attributes>[0, -1.524, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 0.254 2.794)\n</try>
        <success>\n      (layers *.Cu </success>
        <attributes>[0.254, 2.794]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad "" t</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [0, -1.524, 0], [0.254, 2.794], 0, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole circle</try>
        <success> thru_hole circle (a</success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 0 0) (size 0.254</try>
        <success> (size 0.254 0.254) </success>
        <attributes>[0, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 0.254 0.254) </try>
        <success> (drill 0.0508)\n    </success>
        <attributes>[0.254, 0.254]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad "" t</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [0, 0, 0], [0.254, 0.254], 0.0508, [[*, ., C, u], [*, ., M, a, s, k]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole rect (</try>
        <success> thru_hole rect (at </success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -1.524 0) (size </try>
        <success> (size 2.286 0.254)\n</success>
        <attributes>[-1.524, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 2.286 0.254)\n</try>
        <success>\n      (layers *.Cu </success>
        <attributes>[2.286, 0.254]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad "" t</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [-1.524, 0, 0], [2.286, 0.254], 0, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole rect (</try>
        <success> thru_hole rect (at </success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 0 1.524) (size 0</try>
        <success> (size 0.254 2.794)\n</success>
        <attributes>[0, 1.524, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 0.254 2.794)\n</try>
        <success>\n      (layers *.Cu </success>
        <attributes>[0.254, 2.794]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad "" t</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [0, 1.524, 0], [0.254, 2.794], 0, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole rect (</try>
        <success> thru_hole rect (at </success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 1.524 0) (size 2</try>
        <success> (size 2.794 0.254)\n</success>
        <attributes>[1.524, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 2.794 0.254)\n</try>
        <success>\n      (layers *.Cu </success>
        <attributes>[2.794, 0.254]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n  )\n\n  (module MIRE</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [1.524, 0, 0], [2.794, 0.254], 0, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n  )\n\n  (module MIRE</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n  )\n\n  (module MIRE</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n  )\n\n  (module MIRE</try>
      <fail/>
    </fp_line>
    <success>\n\n  (module MIRE (la</success>
    <attributes>[[M, I, R, E], [D, e, s, s, u, s], [102.87, 110.49, 0], [[[p, a, t, h], [M, I, R, E]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module MIRE (la</try>
    <at_pos_rot>
      <try>\n    (at 184.15 110.</try>
      <success>\n    (path MIRE)\n   </success>
      <attributes>[184.15, 110.49, 0]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (path MIRE)\n   </try>
      <success>\n    (fp_text refere</success>
      <attributes>[[p, a, t, h], [M, I, R, E]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at -0.127 4.572) (</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[-0.127, 4.572, 0]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.016 1.</try>
          <bar>
            <try>font (size 1.016 1.0</try>
            <foo>
              <try>(size 1.016 1.016) (</try>
              <bar>
                <try>size 1.016 1.016) (t</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [M, I, R, E], [-0.127, 4.572, 0], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 3.302 2.794) (l</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[3.302, 2.794, 0]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.524 1.</try>
          <bar>
            <try>font (size 1.524 1.5</try>
            <foo>
              <try>(size 1.524 1.524) (</try>
              <bar>
                <try>size 1.524 1.524) (t</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_ci</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_ci</success>
              </bar>
              <success>))\n    )\n    (fp_cir</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_cir</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_cir</success>
          </bar>
          <success>)\n    )\n    (fp_circ</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_circ</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_circ</success>
      </bar>
      <success>\n    (fp_circle (cen</success>
      <attributes>[[v, a, l, u, e], [*], [3.302, 2.794, 0], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_circle (cen</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_circle (cen</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_circle (cen</try>
      <fail/>
    </fp_line>
    <fp_circle>
      <try> (center 0 0) (end 2</try>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, 0, 2.54, 1.905, [D, e, s, s, u, s, ., S, i, l, k, S], 0.381]</attributes>
    </fp_circle>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole rect (</try>
        <success> thru_hole rect (at </success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -1.524 0) (size </try>
        <success> (size 2.794 0.254)\n</success>
        <attributes>[-1.524, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 2.794 0.254)\n</try>
        <success>\n      (layers *.Cu </success>
        <attributes>[2.794, 0.254]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad "" t</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [-1.524, 0, 0], [2.794, 0.254], 0, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole rect (</try>
        <success> thru_hole rect (at </success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 0 -1.524) (size </try>
        <success> (size 0.254 2.794)\n</success>
        <attributes>[0, -1.524, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 0.254 2.794)\n</try>
        <success>\n      (layers *.Cu </success>
        <attributes>[0.254, 2.794]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad "" t</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [0, -1.524, 0], [0.254, 2.794], 0, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole circle</try>
        <success> thru_hole circle (a</success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 0 0) (size 0.254</try>
        <success> (size 0.254 0.254) </success>
        <attributes>[0, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 0.254 0.254) </try>
        <success> (drill 0.0508)\n    </success>
        <attributes>[0.254, 0.254]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad "" t</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [0, 0, 0], [0.254, 0.254], 0.0508, [[*, ., C, u], [*, ., M, a, s, k]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole rect (</try>
        <success> thru_hole rect (at </success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -1.524 0) (size </try>
        <success> (size 2.286 0.254)\n</success>
        <attributes>[-1.524, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 2.286 0.254)\n</try>
        <success>\n      (layers *.Cu </success>
        <attributes>[2.286, 0.254]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad "" t</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [-1.524, 0, 0], [2.286, 0.254], 0, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole rect (</try>
        <success> thru_hole rect (at </success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 0 1.524) (size 0</try>
        <success> (size 0.254 2.794)\n</success>
        <attributes>[0, 1.524, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 0.254 2.794)\n</try>
        <success>\n      (layers *.Cu </success>
        <attributes>[0.254, 2.794]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad "" t</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [0, 1.524, 0], [0.254, 2.794], 0, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole rect (</try>
        <success> thru_hole rect (at </success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 1.524 0) (size 2</try>
        <success> (size 2.794 0.254)\n</success>
        <attributes>[1.524, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 2.794 0.254)\n</try>
        <success>\n      (layers *.Cu </success>
        <attributes>[2.794, 0.254]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n  )\n\n  (module MIRE</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [1.524, 0, 0], [2.794, 0.254], 0, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n  )\n\n  (module MIRE</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n  )\n\n  (module MIRE</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n  )\n\n  (module MIRE</try>
      <fail/>
    </fp_line>
    <success>\n\n  (module MIRE (la</success>
    <attributes>[[M, I, R, E], [D, e, s, s, u, s], [184.15, 110.49, 0], [[[p, a, t, h], [M, I, R, E]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module MIRE (la</try>
    <at_pos_rot>
      <try>\n    (at 184.15 67.3</try>
      <success>\n    (path MIRE)\n   </success>
      <attributes>[184.15, 67.31, 0]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (path MIRE)\n   </try>
      <success>\n    (fp_text refere</success>
      <attributes>[[p, a, t, h], [M, I, R, E]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at -0.127 4.572) (</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[-0.127, 4.572, 0]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.016 1.</try>
          <bar>
            <try>font (size 1.016 1.0</try>
            <foo>
              <try>(size 1.016 1.016) (</try>
              <bar>
                <try>size 1.016 1.016) (t</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [M, I, R, E], [-0.127, 4.572, 0], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 3.302 2.794) (l</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[3.302, 2.794, 0]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.524 1.</try>
          <bar>
            <try>font (size 1.524 1.5</try>
            <foo>
              <try>(size 1.524 1.524) (</try>
              <bar>
                <try>size 1.524 1.524) (t</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_ci</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_ci</success>
              </bar>
              <success>))\n    )\n    (fp_cir</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_cir</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_cir</success>
          </bar>
          <success>)\n    )\n    (fp_circ</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_circ</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_circ</success>
      </bar>
      <success>\n    (fp_circle (cen</success>
      <attributes>[[v, a, l, u, e], [*], [3.302, 2.794, 0], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_circle (cen</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_circle (cen</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_circle (cen</try>
      <fail/>
    </fp_line>
    <fp_circle>
      <try> (center 0 0) (end 2</try>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, 0, 2.54, 1.905, [D, e, s, s, u, s, ., S, i, l, k, S], 0.381]</attributes>
    </fp_circle>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole rect (</try>
        <success> thru_hole rect (at </success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -1.524 0) (size </try>
        <success> (size 2.794 0.254)\n</success>
        <attributes>[-1.524, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 2.794 0.254)\n</try>
        <success>\n      (layers *.Cu </success>
        <attributes>[2.794, 0.254]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad "" t</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [-1.524, 0, 0], [2.794, 0.254], 0, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole rect (</try>
        <success> thru_hole rect (at </success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 0 -1.524) (size </try>
        <success> (size 0.254 2.794)\n</success>
        <attributes>[0, -1.524, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 0.254 2.794)\n</try>
        <success>\n      (layers *.Cu </success>
        <attributes>[0.254, 2.794]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad "" t</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [0, -1.524, 0], [0.254, 2.794], 0, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole circle</try>
        <success> thru_hole circle (a</success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 0 0) (size 0.254</try>
        <success> (size 0.254 0.254) </success>
        <attributes>[0, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 0.254 0.254) </try>
        <success> (drill 0.0508)\n    </success>
        <attributes>[0.254, 0.254]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad "" t</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [0, 0, 0], [0.254, 0.254], 0.0508, [[*, ., C, u], [*, ., M, a, s, k]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole rect (</try>
        <success> thru_hole rect (at </success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -1.524 0) (size </try>
        <success> (size 2.286 0.254)\n</success>
        <attributes>[-1.524, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 2.286 0.254)\n</try>
        <success>\n      (layers *.Cu </success>
        <attributes>[2.286, 0.254]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad "" t</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [-1.524, 0, 0], [2.286, 0.254], 0, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole rect (</try>
        <success> thru_hole rect (at </success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 0 1.524) (size 0</try>
        <success> (size 0.254 2.794)\n</success>
        <attributes>[0, 1.524, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 0.254 2.794)\n</try>
        <success>\n      (layers *.Cu </success>
        <attributes>[0.254, 2.794]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad "" t</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad "" thru_ho</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [0, 1.524, 0], [0.254, 2.794], 0, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad "" thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> "" thru_hole rect (</try>
        <success> thru_hole rect (at </success>
        <attributes>0</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 1.524 0) (size 2</try>
        <success> (size 2.794 0.254)\n</success>
        <attributes>[1.524, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 2.794 0.254)\n</try>
        <success>\n      (layers *.Cu </success>
        <attributes>[2.794, 0.254]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n  )\n\n  (module born</success>
      <attributes>[0, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [1.524, 0, 0], [2.794, 0.254], 0, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n  )\n\n  (module born</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n  )\n\n  (module born</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n  )\n\n  (module born</try>
      <fail/>
    </fp_line>
    <success>\n\n  (module bornier6</success>
    <attributes>[[M, I, R, E], [D, e, s, s, u, s], [184.15, 67.31, 0], [[[p, a, t, h], [M, I, R, E]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module bornier6</try>
    <at_pos_rot>
      <try>\n    (at 170.18 88.9</try>
      <success>\n    (descr "Bornier</success>
      <attributes>[170.18, 88.9, 270]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Bornier</try>
      <quoted_string>
        <try>"Bornier d'alimentat</try>
        <success>)\n    (tags DEV)\n   </success>
        <attributes>[B, o, r, n, i, e, r,  , d, ', a, l, i, m, e, n, t, a, t, i, o, n,  , 4,  , p, i, n, s]</attributes>
      </quoted_string>
      <success>\n    (tags DEV)\n    </success>
      <attributes>[[d, e, s, c, r], [B, o, r, n, i, e, r,  , d, ', a, l, i, m, e, n, t, a, t, i, o, n,  , 4,  , p, i, n, s]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags DEV)\n    </try>
      <success>\n    (path /3EBF830C</success>
      <attributes>[[t, a, g, s], [D, E, V]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /3EBF830C</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[p, a, t, h], [/, 3, E, B, F, 8, 3, 0, C]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at 10.16 -6.35 270</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[10.16, -6.35, 270]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 2.6162 1</try>
          <bar>
            <try>font (size 2.6162 1.</try>
            <foo>
              <try>(size 2.6162 1.59766</try>
              <bar>
                <try>size 2.6162 1.59766)</try>
                <foo>
                  <try>) (thickness 0.3048)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.3048)</success>
              </bar>
              <success> (thickness 0.3048))</success>
            </foo>
            <foo>
              <try> (thickness 0.3048))</try>
              <bar>
                <try>thickness 0.3048)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [P, 1], [10.16, -6.35, 270], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at -17.78 0 360) (</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[-17.78, 0, 360]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 3.05054 </try>
          <bar>
            <try>font (size 3.05054 2</try>
            <foo>
              <try>(size 3.05054 2.0955</try>
              <bar>
                <try>size 3.05054 2.0955)</try>
                <foo>
                  <try>) (thickness 0.3048)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.3048)</success>
              </bar>
              <success> (thickness 0.3048))</success>
            </foo>
            <foo>
              <try> (thickness 0.3048))</try>
              <bar>
                <try>thickness 0.3048)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [C, O, N, N, _, 6], [-17.78, 0, 360], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-15.24, -3.81, -15.24, 3.81, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[15.24, 3.81, 15.24, -3.81, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-15.24, 2.54, 15.24, 2.54, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-15.24, -3.81, 15.24, -3.81, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 2 thru_hol</success>
      <attributes>[-15.24, 3.81, 15.24, 3.81, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 2 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -7.62 0 270) (si</try>
        <success> (size 3.81 3.81) (d</success>
        <attributes>[-7.62, 0, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 3.81 3.81) (d</try>
        <success> (drill 1.524)\n     </success>
        <attributes>[3.81, 3.81]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 13 GND)\n</try>
        <success>\n    )\n    (pad 3 th</success>
        <attributes>[13, [G, N, D]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 3 thru_hol</success>
      <attributes>[2, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [-7.62, 0, 270], [3.81, 3.81], 1.524, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [13, [G, N, D]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 3 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 3 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>3</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -2.54 0 270) (si</try>
        <success> (size 3.81 3.81) (d</success>
        <attributes>[-2.54, 0, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 3.81 3.81) (d</try>
        <success> (drill 1.524)\n     </success>
        <attributes>[3.81, 3.81]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 6 /TD0-D</try>
        <success>\n    )\n    (pad 1 th</success>
        <attributes>[6, [/, T, D, 0, -, D, O, N, E]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 1 thru_hol</success>
      <attributes>[3, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [-2.54, 0, 270], [3.81, 3.81], 1.524, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [6, [/, T, D, 0, -, D, O, N, E]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 1 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 thru_hole rect (a</try>
        <success> thru_hole rect (at </success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -12.7 0 270) (si</try>
        <success> (size 3.81 3.81) (d</success>
        <attributes>[-12.7, 0, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 3.81 3.81) (d</try>
        <success> (drill 1.524)\n     </success>
        <attributes>[3.81, 3.81]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 4 /PWR_3</try>
        <success>\n    )\n    (pad 4 th</success>
        <attributes>[4, [/, P, W, R, _, 3, ,, 3, -, 5, V]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 4 thru_hol</success>
      <attributes>[1, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [-12.7, 0, 270], [3.81, 3.81], 1.524, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [4, [/, P, W, R, _, 3, ,, 3, -, 5, V]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 4 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 4 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>4</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 2.54 0 270) (siz</try>
        <success> (size 3.81 3.81) (d</success>
        <attributes>[2.54, 0, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 3.81 3.81) (d</try>
        <success> (drill 1.524)\n     </success>
        <attributes>[3.81, 3.81]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 8 /TDI-D</try>
        <success>\n    )\n    (pad 5 th</success>
        <attributes>[8, [/, T, D, I, -, D, I, N]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 5 thru_hol</success>
      <attributes>[4, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [2.54, 0, 270], [3.81, 3.81], 1.524, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [8, [/, T, D, I, -, D, I, N]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 5 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 5 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>5</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 7.62 0 270) (siz</try>
        <success> (size 3.81 3.81) (d</success>
        <attributes>[7.62, 0, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 3.81 3.81) (d</try>
        <success> (drill 1.524)\n     </success>
        <attributes>[3.81, 3.81]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 5 /TCK-C</try>
        <success>\n    )\n    (pad 6 th</success>
        <attributes>[5, [/, T, C, K, -, C, C, L, K]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 6 thru_hol</success>
      <attributes>[5, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [7.62, 0, 270], [3.81, 3.81], 1.524, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [5, [/, T, C, K, -, C, C, L, K]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 6 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 6 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>6</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 12.7 0 270) (siz</try>
        <success> (size 3.81 3.81) (d</success>
        <attributes>[12.7, 0, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 3.81 3.81) (d</try>
        <success> (drill 1.524)\n     </success>
        <attributes>[3.81, 3.81]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 10 /TMS-</try>
        <success>\n    )\n    (model de</success>
        <attributes>[10, [/, T, M, S, -, P, R, O, G]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model device/b</success>
      <attributes>[6, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [12.7, 0, 270], [3.81, 3.81], 1.524, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [10, [/, T, M, S, -, P, R, O, G]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model device/b</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model device/b</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model device/b</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model device/bornier</try>
      <foo>
        <try>(at (xyz 0 0 0))\n   </try>
        <bar>
          <try>at (xyz 0 0 0))\n    </try>
          <foo>
            <try>(xyz 0 0 0))\n      (</try>
            <bar>
              <try>xyz 0 0 0))\n      (s</try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 1</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 1</try>
        <bar>
          <try>scale (xyz 1 1 1))\n </try>
          <foo>
            <try>(xyz 1 1 1))\n      (</try>
            <bar>
              <try>xyz 1 1 1))\n      (r</try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 0 0 0))\n</try>
          <foo>
            <try>(xyz 0 0 0))\n    )\n </try>
            <bar>
              <try>xyz 0 0 0))\n    )\n  </try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module R4 (laye</success>
    <attributes>[[b, o, r, n, i, e, r, 6], [D, e, s, s, u, s], [170.18, 88.9, 270], [[[d, e, s, c, r], [B, o, r, n, i, e, r,  , d, ', a, l, i, m, e, n, t, a, t, i, o, n,  , 4,  , p, i, n, s]], [[t, a, g, s], [D, E, V]], [[p, a, t, h], [/, 3, E, B, F, 8, 3, 0, C]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module R4 (laye</try>
    <at_pos_rot>
      <try>\n    (at 142.24 72.3</try>
      <success>\n    (descr "Resitan</success>
      <attributes>[142.24, 72.39, 0]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Resitan</try>
      <quoted_string>
        <try>"Resitance 4 pas")\n </try>
        <success>)\n    (tags R)\n    (</success>
        <attributes>[R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]</attributes>
      </quoted_string>
      <success>\n    (tags R)\n    (p</success>
      <attributes>[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags R)\n    (p</try>
      <success>\n    (path /3EBF8187</success>
      <attributes>[[t, a, g, s], [R]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /3EBF8187</try>
      <success>\n    (autoplace_cost</success>
      <attributes>[[p, a, t, h], [/, 3, E, B, F, 8, 1, 8, 7]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (autoplace_cost</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at 0 0) (layer Des</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 0]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [R, 2], [0, 0, 0], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 0 0) (layer Des</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 0]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [5, ,, 1, K], [0, 0, 0], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-5.08, 0, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 0, -4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -1.016, 4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, -1.016, 4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, 1.016, -4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 1.016, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -0.508, -3.556, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 1 thru_hol</success>
      <attributes>[5.08, 0, 4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 1 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -5.08 0) (size 1</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[-5.08, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 26 VCC)\n</try>
        <success>\n    )\n    (pad 2 th</success>
        <attributes>[26, [V, C, C]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 2 thru_hol</success>
      <attributes>[1, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [-5.08, 0, 0], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [26, [V, C, C]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 2 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 5.08 0) (size 1.</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[5.08, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 25 N-000</try>
        <success>\n    )\n    (model di</success>
        <attributes>[25, [N, -, 0, 0, 0, 0, 3, 8]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model discret/</success>
      <attributes>[2, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [5.08, 0, 0], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [25, [N, -, 0, 0, 0, 0, 3, 8]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model discret/</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model discret/</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model discret/</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model discret/resist</try>
      <foo>
        <try>(at (xyz 0 0 0))\n   </try>
        <bar>
          <try>at (xyz 0 0 0))\n    </try>
          <foo>
            <try>(xyz 0 0 0))\n      (</try>
            <bar>
              <try>xyz 0 0 0))\n      (s</try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 0</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 0</try>
        <bar>
          <try>scale (xyz 0.4 0.4 0</try>
          <foo>
            <try>(xyz 0.4 0.4 0.4))\n </try>
            <bar>
              <try>xyz 0.4 0.4 0.4))\n  </try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 0 0 0))\n</try>
          <foo>
            <try>(xyz 0 0 0))\n    )\n </try>
            <bar>
              <try>xyz 0 0 0))\n    )\n  </try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module R4 (laye</success>
    <attributes>[[R, 4], [D, e, s, s, u, s], [142.24, 72.39, 0], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 3, E, B, F, 8, 1, 8, 7]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module R4 (laye</try>
    <at_pos_rot>
      <try>\n    (at 116.84 76.2</try>
      <success>\n    (descr "Resitan</success>
      <attributes>[116.84, 76.2, 180]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Resitan</try>
      <quoted_string>
        <try>"Resitance 4 pas")\n </try>
        <success>)\n    (tags R)\n    (</success>
        <attributes>[R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]</attributes>
      </quoted_string>
      <success>\n    (tags R)\n    (p</success>
      <attributes>[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags R)\n    (p</try>
      <success>\n    (path /3EBF7D16</success>
      <attributes>[[t, a, g, s], [R]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /3EBF7D16</try>
      <success>\n    (autoplace_cost</success>
      <attributes>[[p, a, t, h], [/, 3, E, B, F, 7, D, 1, 6]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (autoplace_cost</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [R, 1], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [1, 0, 0], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-5.08, 0, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 0, -4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -1.016, 4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, -1.016, 4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, 1.016, -4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 1.016, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -0.508, -3.556, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 1 thru_hol</success>
      <attributes>[5.08, 0, 4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 1 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -5.08 0 180) (si</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[-5.08, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 15 N-000</try>
        <success>\n    )\n    (pad 2 th</success>
        <attributes>[15, [N, -, 0, 0, 0, 0, 1, 4]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 2 thru_hol</success>
      <attributes>[1, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [-5.08, 0, 180], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [15, [N, -, 0, 0, 0, 0, 1, 4]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 2 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 5.08 0 180) (siz</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[5.08, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 12 /VCC_</try>
        <success>\n    )\n    (model di</success>
        <attributes>[12, [/, V, C, C, _, S, E, N, S, E, -, E, R, R, O, R, *]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model discret/</success>
      <attributes>[2, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [5.08, 0, 180], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [12, [/, V, C, C, _, S, E, N, S, E, -, E, R, R, O, R, *]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model discret/</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model discret/</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model discret/</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model discret/resist</try>
      <foo>
        <try>(at (xyz 0 0 0))\n   </try>
        <bar>
          <try>at (xyz 0 0 0))\n    </try>
          <foo>
            <try>(xyz 0 0 0))\n      (</try>
            <bar>
              <try>xyz 0 0 0))\n      (s</try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 0</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 0</try>
        <bar>
          <try>scale (xyz 0.4 0.4 0</try>
          <foo>
            <try>(xyz 0.4 0.4 0.4))\n </try>
            <bar>
              <try>xyz 0.4 0.4 0.4))\n  </try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 0 0 0))\n</try>
          <foo>
            <try>(xyz 0 0 0))\n    )\n </try>
            <bar>
              <try>xyz 0 0 0))\n    )\n  </try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module R4 (laye</success>
    <attributes>[[R, 4], [D, e, s, s, u, s], [116.84, 76.2, 180], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 3, E, B, F, 7, D, 1, 6]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module R4 (laye</try>
    <at_pos_rot>
      <try>\n    (at 157.48 88.9</try>
      <success>\n    (descr "Resitan</success>
      <attributes>[157.48, 88.9, 180]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Resitan</try>
      <quoted_string>
        <try>"Resitance 4 pas")\n </try>
        <success>)\n    (tags R)\n    (</success>
        <attributes>[R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]</attributes>
      </quoted_string>
      <success>\n    (tags R)\n    (p</success>
      <attributes>[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags R)\n    (p</try>
      <success>\n    (path /3EBF819B</success>
      <attributes>[[t, a, g, s], [R]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /3EBF819B</try>
      <success>\n    (autoplace_cost</success>
      <attributes>[[p, a, t, h], [/, 3, E, B, F, 8, 1, 9, B]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (autoplace_cost</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [R, 1, 4], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [1, 0, 0], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-5.08, 0, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 0, -4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -1.016, 4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, -1.016, 4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, 1.016, -4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 1.016, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -0.508, -3.556, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 1 thru_hol</success>
      <attributes>[5.08, 0, 4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 1 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -5.08 0 180) (si</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[-5.08, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 6 /TD0-D</try>
        <success>\n    )\n    (pad 2 th</success>
        <attributes>[6, [/, T, D, 0, -, D, O, N, E]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 2 thru_hol</success>
      <attributes>[1, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [-5.08, 0, 180], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [6, [/, T, D, 0, -, D, O, N, E]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 2 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 5.08 0 180) (siz</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[5.08, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 25 N-000</try>
        <success>\n    )\n    (model di</success>
        <attributes>[25, [N, -, 0, 0, 0, 0, 3, 8]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model discret/</success>
      <attributes>[2, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [5.08, 0, 180], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [25, [N, -, 0, 0, 0, 0, 3, 8]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model discret/</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model discret/</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model discret/</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model discret/resist</try>
      <foo>
        <try>(at (xyz 0 0 0))\n   </try>
        <bar>
          <try>at (xyz 0 0 0))\n    </try>
          <foo>
            <try>(xyz 0 0 0))\n      (</try>
            <bar>
              <try>xyz 0 0 0))\n      (s</try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 0</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 0</try>
        <bar>
          <try>scale (xyz 0.4 0.4 0</try>
          <foo>
            <try>(xyz 0.4 0.4 0.4))\n </try>
            <bar>
              <try>xyz 0.4 0.4 0.4))\n  </try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 0 0 0))\n</try>
          <foo>
            <try>(xyz 0 0 0))\n    )\n </try>
            <bar>
              <try>xyz 0 0 0))\n    )\n  </try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module R4 (laye</success>
    <attributes>[[R, 4], [D, e, s, s, u, s], [157.48, 88.9, 180], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 3, E, B, F, 8, 1, 9, B]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module R4 (laye</try>
    <at_pos_rot>
      <try>\n    (at 156.21 73.6</try>
      <success>\n    (descr "Resitan</success>
      <attributes>[156.21, 73.66, 0]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Resitan</try>
      <quoted_string>
        <try>"Resitance 4 pas")\n </try>
        <success>)\n    (tags R)\n    (</success>
        <attributes>[R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]</attributes>
      </quoted_string>
      <success>\n    (tags R)\n    (p</success>
      <attributes>[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags R)\n    (p</try>
      <success>\n    (path /3EBF818E</success>
      <attributes>[[t, a, g, s], [R]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /3EBF818E</try>
      <success>\n    (autoplace_cost</success>
      <attributes>[[p, a, t, h], [/, 3, E, B, F, 8, 1, 8, E]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (autoplace_cost</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at 0 0) (layer Des</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 0]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [R, 5], [0, 0, 0], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 0 0) (layer Des</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 0]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [1, K], [0, 0, 0], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-5.08, 0, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 0, -4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -1.016, 4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, -1.016, 4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, 1.016, -4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 1.016, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -0.508, -3.556, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 1 thru_hol</success>
      <attributes>[5.08, 0, 4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 1 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -5.08 0) (size 1</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[-5.08, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 26 VCC)\n</try>
        <success>\n    )\n    (pad 2 th</success>
        <attributes>[26, [V, C, C]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 2 thru_hol</success>
      <attributes>[1, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [-5.08, 0, 0], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [26, [V, C, C]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 2 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 5.08 0) (size 1.</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[5.08, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 13 GND)\n</try>
        <success>\n    )\n    (model di</success>
        <attributes>[13, [G, N, D]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model discret/</success>
      <attributes>[2, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [5.08, 0, 0], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [13, [G, N, D]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model discret/</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model discret/</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model discret/</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model discret/resist</try>
      <foo>
        <try>(at (xyz 0 0 0))\n   </try>
        <bar>
          <try>at (xyz 0 0 0))\n    </try>
          <foo>
            <try>(xyz 0 0 0))\n      (</try>
            <bar>
              <try>xyz 0 0 0))\n      (s</try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 0</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 0</try>
        <bar>
          <try>scale (xyz 0.4 0.4 0</try>
          <foo>
            <try>(xyz 0.4 0.4 0.4))\n </try>
            <bar>
              <try>xyz 0.4 0.4 0.4))\n  </try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 0 0 0))\n</try>
          <foo>
            <try>(xyz 0 0 0))\n    )\n </try>
            <bar>
              <try>xyz 0 0 0))\n    )\n  </try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module R4 (laye</success>
    <attributes>[[R, 4], [D, e, s, s, u, s], [156.21, 73.66, 0], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 3, E, B, F, 8, 1, 8, E]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module R4 (laye</try>
    <at_pos_rot>
      <try>\n    (at 116.84 83.8</try>
      <success>\n    (descr "Resitan</success>
      <attributes>[116.84, 83.82, 180]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Resitan</try>
      <quoted_string>
        <try>"Resitance 4 pas")\n </try>
        <success>)\n    (tags R)\n    (</success>
        <attributes>[R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]</attributes>
      </quoted_string>
      <success>\n    (tags R)\n    (p</success>
      <attributes>[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags R)\n    (p</try>
      <success>\n    (path /3EBF7D26</success>
      <attributes>[[t, a, g, s], [R]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /3EBF7D26</try>
      <success>\n    (autoplace_cost</success>
      <attributes>[[p, a, t, h], [/, 3, E, B, F, 7, D, 2, 6]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (autoplace_cost</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [R, 6], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [1, 0, 0], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-5.08, 0, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 0, -4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -1.016, 4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, -1.016, 4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, 1.016, -4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 1.016, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -0.508, -3.556, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 1 thru_hol</success>
      <attributes>[5.08, 0, 4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 1 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -5.08 0 180) (si</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[-5.08, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 19 N-000</try>
        <success>\n    )\n    (pad 2 th</success>
        <attributes>[19, [N, -, 0, 0, 0, 0, 3, 1]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 2 thru_hol</success>
      <attributes>[1, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [-5.08, 0, 180], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [19, [N, -, 0, 0, 0, 0, 3, 1]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 2 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 5.08 0 180) (siz</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[5.08, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 7 /TD0-P</try>
        <success>\n    )\n    (model di</success>
        <attributes>[7, [/, T, D, 0, -, P, R, O, G, -, D, 4]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model discret/</success>
      <attributes>[2, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [5.08, 0, 180], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [7, [/, T, D, 0, -, P, R, O, G, -, D, 4]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model discret/</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model discret/</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model discret/</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model discret/resist</try>
      <foo>
        <try>(at (xyz 0 0 0))\n   </try>
        <bar>
          <try>at (xyz 0 0 0))\n    </try>
          <foo>
            <try>(xyz 0 0 0))\n      (</try>
            <bar>
              <try>xyz 0 0 0))\n      (s</try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 0</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 0</try>
        <bar>
          <try>scale (xyz 0.4 0.4 0</try>
          <foo>
            <try>(xyz 0.4 0.4 0.4))\n </try>
            <bar>
              <try>xyz 0.4 0.4 0.4))\n  </try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 0 0 0))\n</try>
          <foo>
            <try>(xyz 0 0 0))\n    )\n </try>
            <bar>
              <try>xyz 0 0 0))\n    )\n  </try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module R4 (laye</success>
    <attributes>[[R, 4], [D, e, s, s, u, s], [116.84, 83.82, 180], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 3, E, B, F, 7, D, 2, 6]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module R4 (laye</try>
    <at_pos_rot>
      <try>\n    (at 116.84 92.7</try>
      <success>\n    (descr "Resitan</success>
      <attributes>[116.84, 92.71, 180]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Resitan</try>
      <quoted_string>
        <try>"Resitance 4 pas")\n </try>
        <success>)\n    (tags R)\n    (</success>
        <attributes>[R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]</attributes>
      </quoted_string>
      <success>\n    (tags R)\n    (p</success>
      <attributes>[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags R)\n    (p</try>
      <success>\n    (path /4D52807F</success>
      <attributes>[[t, a, g, s], [R]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /4D52807F</try>
      <success>\n    (autoplace_cost</success>
      <attributes>[[p, a, t, h], [/, 4, D, 5, 2, 8, 0, 7, F]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (autoplace_cost</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [R, 7], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [1, 0, 0], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-5.08, 0, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 0, -4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -1.016, 4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, -1.016, 4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, 1.016, -4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 1.016, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -0.508, -3.556, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 1 thru_hol</success>
      <attributes>[5.08, 0, 4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 1 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -5.08 0 180) (si</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[-5.08, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 17 N-000</try>
        <success>\n    )\n    (pad 2 th</success>
        <attributes>[17, [N, -, 0, 0, 0, 0, 1, 6]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 2 thru_hol</success>
      <attributes>[1, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [-5.08, 0, 180], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [17, [N, -, 0, 0, 0, 0, 1, 6]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 2 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 5.08 0 180) (siz</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[5.08, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 9 /TDI-D</try>
        <success>\n    )\n    (model di</success>
        <attributes>[9, [/, T, D, I, -, D, I, N, -, D, 0]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model discret/</success>
      <attributes>[2, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [5.08, 0, 180], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [9, [/, T, D, I, -, D, I, N, -, D, 0]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model discret/</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model discret/</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model discret/</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model discret/resist</try>
      <foo>
        <try>(at (xyz 0 0 0))\n   </try>
        <bar>
          <try>at (xyz 0 0 0))\n    </try>
          <foo>
            <try>(xyz 0 0 0))\n      (</try>
            <bar>
              <try>xyz 0 0 0))\n      (s</try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 0</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 0</try>
        <bar>
          <try>scale (xyz 0.4 0.4 0</try>
          <foo>
            <try>(xyz 0.4 0.4 0.4))\n </try>
            <bar>
              <try>xyz 0.4 0.4 0.4))\n  </try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 0 0 0))\n</try>
          <foo>
            <try>(xyz 0 0 0))\n    )\n </try>
            <bar>
              <try>xyz 0 0 0))\n    )\n  </try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module R4 (laye</success>
    <attributes>[[R, 4], [D, e, s, s, u, s], [116.84, 92.71, 180], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 4, D, 5, 2, 8, 0, 7, F]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module R4 (laye</try>
    <at_pos_rot>
      <try>\n    (at 116.84 86.3</try>
      <success>\n    (descr "Resitan</success>
      <attributes>[116.84, 86.36, 180]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Resitan</try>
      <quoted_string>
        <try>"Resitance 4 pas")\n </try>
        <success>)\n    (tags R)\n    (</success>
        <attributes>[R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]</attributes>
      </quoted_string>
      <success>\n    (tags R)\n    (p</success>
      <attributes>[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags R)\n    (p</try>
      <success>\n    (path /4D528080</success>
      <attributes>[[t, a, g, s], [R]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /4D528080</try>
      <success>\n    (autoplace_cost</success>
      <attributes>[[p, a, t, h], [/, 4, D, 5, 2, 8, 0, 8, 0]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (autoplace_cost</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [R, 8], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [1, 0, 0], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-5.08, 0, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 0, -4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -1.016, 4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, -1.016, 4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, 1.016, -4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 1.016, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -0.508, -3.556, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 1 thru_hol</success>
      <attributes>[5.08, 0, 4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 1 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -5.08 0 180) (si</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[-5.08, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 21 N-000</try>
        <success>\n    )\n    (pad 2 th</success>
        <attributes>[21, [N, -, 0, 0, 0, 0, 3, 3]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 2 thru_hol</success>
      <attributes>[1, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [-5.08, 0, 180], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [21, [N, -, 0, 0, 0, 0, 3, 3]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 2 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 5.08 0 180) (siz</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[5.08, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 2 /CTRL-</try>
        <success>\n    )\n    (model di</success>
        <attributes>[2, [/, C, T, R, L, -, D, 3]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model discret/</success>
      <attributes>[2, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [5.08, 0, 180], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [2, [/, C, T, R, L, -, D, 3]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model discret/</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model discret/</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model discret/</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model discret/resist</try>
      <foo>
        <try>(at (xyz 0 0 0))\n   </try>
        <bar>
          <try>at (xyz 0 0 0))\n    </try>
          <foo>
            <try>(xyz 0 0 0))\n      (</try>
            <bar>
              <try>xyz 0 0 0))\n      (s</try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 0</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 0</try>
        <bar>
          <try>scale (xyz 0.4 0.4 0</try>
          <foo>
            <try>(xyz 0.4 0.4 0.4))\n </try>
            <bar>
              <try>xyz 0.4 0.4 0.4))\n  </try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 0 0 0))\n</try>
          <foo>
            <try>(xyz 0 0 0))\n    )\n </try>
            <bar>
              <try>xyz 0 0 0))\n    )\n  </try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module R4 (laye</success>
    <attributes>[[R, 4], [D, e, s, s, u, s], [116.84, 86.36, 180], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 4, D, 5, 2, 8, 0, 8, 0]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module R4 (laye</try>
    <at_pos_rot>
      <try>\n    (at 116.84 81.2</try>
      <success>\n    (descr "Resitan</success>
      <attributes>[116.84, 81.28, 180]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Resitan</try>
      <quoted_string>
        <try>"Resitance 4 pas")\n </try>
        <success>)\n    (tags R)\n    (</success>
        <attributes>[R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]</attributes>
      </quoted_string>
      <success>\n    (tags R)\n    (p</success>
      <attributes>[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags R)\n    (p</try>
      <success>\n    (path /3EBF7D33</success>
      <attributes>[[t, a, g, s], [R]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /3EBF7D33</try>
      <success>\n    (autoplace_cost</success>
      <attributes>[[p, a, t, h], [/, 3, E, B, F, 7, D, 3, 3]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (autoplace_cost</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [R, 9], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [1, 0, 0], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-5.08, 0, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 0, -4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -1.016, 4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, -1.016, 4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, 1.016, -4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 1.016, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -0.508, -3.556, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 1 thru_hol</success>
      <attributes>[5.08, 0, 4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 1 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -5.08 0 180) (si</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[-5.08, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 20 N-000</try>
        <success>\n    )\n    (pad 2 th</success>
        <attributes>[20, [N, -, 0, 0, 0, 0, 3, 2]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 2 thru_hol</success>
      <attributes>[1, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [-5.08, 0, 180], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [20, [N, -, 0, 0, 0, 0, 3, 2]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 2 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 5.08 0 180) (siz</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[5.08, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 11 /TMS-</try>
        <success>\n    )\n    (model di</success>
        <attributes>[11, [/, T, M, S, -, P, R, O, G, -, D, 2]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model discret/</success>
      <attributes>[2, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [5.08, 0, 180], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [11, [/, T, M, S, -, P, R, O, G, -, D, 2]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model discret/</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model discret/</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model discret/</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model discret/resist</try>
      <foo>
        <try>(at (xyz 0 0 0))\n   </try>
        <bar>
          <try>at (xyz 0 0 0))\n    </try>
          <foo>
            <try>(xyz 0 0 0))\n      (</try>
            <bar>
              <try>xyz 0 0 0))\n      (s</try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 0</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 0</try>
        <bar>
          <try>scale (xyz 0.4 0.4 0</try>
          <foo>
            <try>(xyz 0.4 0.4 0.4))\n </try>
            <bar>
              <try>xyz 0.4 0.4 0.4))\n  </try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 0 0 0))\n</try>
          <foo>
            <try>(xyz 0 0 0))\n    )\n </try>
            <bar>
              <try>xyz 0 0 0))\n    )\n  </try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module R4 (laye</success>
    <attributes>[[R, 4], [D, e, s, s, u, s], [116.84, 81.28, 180], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 3, E, B, F, 7, D, 3, 3]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module R4 (laye</try>
    <at_pos_rot>
      <try>\n    (at 116.84 78.7</try>
      <success>\n    (descr "Resitan</success>
      <attributes>[116.84, 78.74, 180]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Resitan</try>
      <quoted_string>
        <try>"Resitance 4 pas")\n </try>
        <success>)\n    (tags R)\n    (</success>
        <attributes>[R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]</attributes>
      </quoted_string>
      <success>\n    (tags R)\n    (p</success>
      <attributes>[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags R)\n    (p</try>
      <success>\n    (path /3EBF7D31</success>
      <attributes>[[t, a, g, s], [R]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /3EBF7D31</try>
      <success>\n    (autoplace_cost</success>
      <attributes>[[p, a, t, h], [/, 3, E, B, F, 7, D, 3, 1]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (autoplace_cost</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [R, 1, 0], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [1, 0, 0], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-5.08, 0, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 0, -4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -1.016, 4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, -1.016, 4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, 1.016, -4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 1.016, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -0.508, -3.556, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 1 thru_hol</success>
      <attributes>[5.08, 0, 4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 1 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -5.08 0 180) (si</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[-5.08, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 18 N-000</try>
        <success>\n    )\n    (pad 2 th</success>
        <attributes>[18, [N, -, 0, 0, 0, 0, 3, 0]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 2 thru_hol</success>
      <attributes>[1, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [-5.08, 0, 180], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [18, [N, -, 0, 0, 0, 0, 3, 0]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 2 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 5.08 0 180) (siz</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[5.08, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 1 /CLK-D</try>
        <success>\n    )\n    (model di</success>
        <attributes>[1, [/, C, L, K, -, D, 1]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model discret/</success>
      <attributes>[2, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [5.08, 0, 180], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [1, [/, C, L, K, -, D, 1]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model discret/</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model discret/</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model discret/</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model discret/resist</try>
      <foo>
        <try>(at (xyz 0 0 0))\n   </try>
        <bar>
          <try>at (xyz 0 0 0))\n    </try>
          <foo>
            <try>(xyz 0 0 0))\n      (</try>
            <bar>
              <try>xyz 0 0 0))\n      (s</try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 0</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 0</try>
        <bar>
          <try>scale (xyz 0.4 0.4 0</try>
          <foo>
            <try>(xyz 0.4 0.4 0.4))\n </try>
            <bar>
              <try>xyz 0.4 0.4 0.4))\n  </try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 0 0 0))\n</try>
          <foo>
            <try>(xyz 0 0 0))\n    )\n </try>
            <bar>
              <try>xyz 0 0 0))\n    )\n  </try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module R4 (laye</success>
    <attributes>[[R, 4], [D, e, s, s, u, s], [116.84, 78.74, 180], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 3, E, B, F, 7, D, 3, 1]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module R4 (laye</try>
    <at_pos_rot>
      <try>\n    (at 157.48 93.9</try>
      <success>\n    (descr "Resitan</success>
      <attributes>[157.48, 93.98, 180]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Resitan</try>
      <quoted_string>
        <try>"Resitance 4 pas")\n </try>
        <success>)\n    (tags R)\n    (</success>
        <attributes>[R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]</attributes>
      </quoted_string>
      <success>\n    (tags R)\n    (p</success>
      <attributes>[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags R)\n    (p</try>
      <success>\n    (path /4D527316</success>
      <attributes>[[t, a, g, s], [R]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /4D527316</try>
      <success>\n    (autoplace_cost</success>
      <attributes>[[p, a, t, h], [/, 4, D, 5, 2, 7, 3, 1, 6]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (autoplace_cost</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [R, 1, 1], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [1, 0, 0], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-5.08, 0, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 0, -4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -1.016, 4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, -1.016, 4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, 1.016, -4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 1.016, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -0.508, -3.556, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 1 thru_hol</success>
      <attributes>[5.08, 0, 4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 1 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -5.08 0 180) (si</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[-5.08, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 8 /TDI-D</try>
        <success>\n    )\n    (pad 2 th</success>
        <attributes>[8, [/, T, D, I, -, D, I, N]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 2 thru_hol</success>
      <attributes>[1, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [-5.08, 0, 180], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [8, [/, T, D, I, -, D, I, N]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 2 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 5.08 0 180) (siz</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[5.08, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 23 N-000</try>
        <success>\n    )\n    (model di</success>
        <attributes>[23, [N, -, 0, 0, 0, 0, 3, 5]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model discret/</success>
      <attributes>[2, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [5.08, 0, 180], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [23, [N, -, 0, 0, 0, 0, 3, 5]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model discret/</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model discret/</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model discret/</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model discret/resist</try>
      <foo>
        <try>(at (xyz 0 0 0))\n   </try>
        <bar>
          <try>at (xyz 0 0 0))\n    </try>
          <foo>
            <try>(xyz 0 0 0))\n      (</try>
            <bar>
              <try>xyz 0 0 0))\n      (s</try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 0</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 0</try>
        <bar>
          <try>scale (xyz 0.4 0.4 0</try>
          <foo>
            <try>(xyz 0.4 0.4 0.4))\n </try>
            <bar>
              <try>xyz 0.4 0.4 0.4))\n  </try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 0 0 0))\n</try>
          <foo>
            <try>(xyz 0 0 0))\n    )\n </try>
            <bar>
              <try>xyz 0 0 0))\n    )\n  </try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module R4 (laye</success>
    <attributes>[[R, 4], [D, e, s, s, u, s], [157.48, 93.98, 180], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 4, D, 5, 2, 7, 3, 1, 6]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module R4 (laye</try>
    <at_pos_rot>
      <try>\n    (at 157.48 99.0</try>
      <success>\n    (descr "Resitan</success>
      <attributes>[157.48, 99.06, 180]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Resitan</try>
      <quoted_string>
        <try>"Resitance 4 pas")\n </try>
        <success>)\n    (tags R)\n    (</success>
        <attributes>[R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]</attributes>
      </quoted_string>
      <success>\n    (tags R)\n    (p</success>
      <attributes>[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags R)\n    (p</try>
      <success>\n    (path /4D528083</success>
      <attributes>[[t, a, g, s], [R]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /4D528083</try>
      <success>\n    (autoplace_cost</success>
      <attributes>[[p, a, t, h], [/, 4, D, 5, 2, 8, 0, 8, 3]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (autoplace_cost</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [R, 1, 2], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [1, 0, 0], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-5.08, 0, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 0, -4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -1.016, 4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, -1.016, 4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, 1.016, -4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 1.016, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -0.508, -3.556, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 1 thru_hol</success>
      <attributes>[5.08, 0, 4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 1 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -5.08 0 180) (si</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[-5.08, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 5 /TCK-C</try>
        <success>\n    )\n    (pad 2 th</success>
        <attributes>[5, [/, T, C, K, -, C, C, L, K]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 2 thru_hol</success>
      <attributes>[1, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [-5.08, 0, 180], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [5, [/, T, C, K, -, C, C, L, K]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 2 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 5.08 0 180) (siz</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[5.08, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 24 N-000</try>
        <success>\n    )\n    (model di</success>
        <attributes>[24, [N, -, 0, 0, 0, 0, 3, 6]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model discret/</success>
      <attributes>[2, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [5.08, 0, 180], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [24, [N, -, 0, 0, 0, 0, 3, 6]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model discret/</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model discret/</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model discret/</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model discret/resist</try>
      <foo>
        <try>(at (xyz 0 0 0))\n   </try>
        <bar>
          <try>at (xyz 0 0 0))\n    </try>
          <foo>
            <try>(xyz 0 0 0))\n      (</try>
            <bar>
              <try>xyz 0 0 0))\n      (s</try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 0</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 0</try>
        <bar>
          <try>scale (xyz 0.4 0.4 0</try>
          <foo>
            <try>(xyz 0.4 0.4 0.4))\n </try>
            <bar>
              <try>xyz 0.4 0.4 0.4))\n  </try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 0 0 0))\n</try>
          <foo>
            <try>(xyz 0 0 0))\n    )\n </try>
            <bar>
              <try>xyz 0 0 0))\n    )\n  </try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module R4 (laye</success>
    <attributes>[[R, 4], [D, e, s, s, u, s], [157.48, 99.06, 180], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 4, D, 5, 2, 8, 0, 8, 3]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module R4 (laye</try>
    <at_pos_rot>
      <try>\n    (at 157.48 105.</try>
      <success>\n    (descr "Resitan</success>
      <attributes>[157.48, 105.41, 180]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Resitan</try>
      <quoted_string>
        <try>"Resitance 4 pas")\n </try>
        <success>)\n    (tags R)\n    (</success>
        <attributes>[R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]</attributes>
      </quoted_string>
      <success>\n    (tags R)\n    (p</success>
      <attributes>[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags R)\n    (p</try>
      <success>\n    (path /4D528082</success>
      <attributes>[[t, a, g, s], [R]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /4D528082</try>
      <success>\n    (autoplace_cost</success>
      <attributes>[[p, a, t, h], [/, 4, D, 5, 2, 8, 0, 8, 2]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (autoplace_cost</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [R, 1, 3], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [1, 0, 0], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-5.08, 0, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 0, -4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -1.016, 4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, -1.016, 4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, 1.016, -4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 1.016, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -0.508, -3.556, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 1 thru_hol</success>
      <attributes>[5.08, 0, 4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 1 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -5.08 0 180) (si</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[-5.08, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 10 /TMS-</try>
        <success>\n    )\n    (pad 2 th</success>
        <attributes>[10, [/, T, M, S, -, P, R, O, G]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 2 thru_hol</success>
      <attributes>[1, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [-5.08, 0, 180], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [10, [/, T, M, S, -, P, R, O, G]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 2 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 5.08 0 180) (siz</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[5.08, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 22 N-000</try>
        <success>\n    )\n    (model di</success>
        <attributes>[22, [N, -, 0, 0, 0, 0, 3, 4]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model discret/</success>
      <attributes>[2, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [5.08, 0, 180], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [22, [N, -, 0, 0, 0, 0, 3, 4]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model discret/</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model discret/</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model discret/</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model discret/resist</try>
      <foo>
        <try>(at (xyz 0 0 0))\n   </try>
        <bar>
          <try>at (xyz 0 0 0))\n    </try>
          <foo>
            <try>(xyz 0 0 0))\n      (</try>
            <bar>
              <try>xyz 0 0 0))\n      (s</try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 0</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 0</try>
        <bar>
          <try>scale (xyz 0.4 0.4 0</try>
          <foo>
            <try>(xyz 0.4 0.4 0.4))\n </try>
            <bar>
              <try>xyz 0.4 0.4 0.4))\n  </try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 0 0 0))\n</try>
          <foo>
            <try>(xyz 0 0 0))\n    )\n </try>
            <bar>
              <try>xyz 0 0 0))\n    )\n  </try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module R4 (laye</success>
    <attributes>[[R, 4], [D, e, s, s, u, s], [157.48, 105.41, 180], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 4, D, 5, 2, 8, 0, 8, 2]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module R4 (laye</try>
    <at_pos_rot>
      <try>\n    (at 116.84 104.</try>
      <success>\n    (descr "Resitan</success>
      <attributes>[116.84, 104.14, 180]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Resitan</try>
      <quoted_string>
        <try>"Resitance 4 pas")\n </try>
        <success>)\n    (tags R)\n    (</success>
        <attributes>[R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]</attributes>
      </quoted_string>
      <success>\n    (tags R)\n    (p</success>
      <attributes>[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags R)\n    (p</try>
      <success>\n    (path /3EBF7D22</success>
      <attributes>[[t, a, g, s], [R]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /3EBF7D22</try>
      <success>\n    (autoplace_cost</success>
      <attributes>[[p, a, t, h], [/, 3, E, B, F, 7, D, 2, 2]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (autoplace_cost</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [R, 4], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.397 1.</try>
          <bar>
            <try>font (size 1.397 1.2</try>
            <foo>
              <try>(size 1.397 1.27) (t</try>
              <bar>
                <try>size 1.397 1.27) (th</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [4, 7], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-5.08, 0, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 0, -4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -1.016, 4.064, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, -1.016, 4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[4.064, 1.016, -4.064, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, 1.016, -4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.064, -0.508, -3.556, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 1 thru_hol</success>
      <attributes>[5.08, 0, 4.064, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 1 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -5.08 0 180) (si</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[-5.08, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 16 N-000</try>
        <success>\n    )\n    (pad 2 th</success>
        <attributes>[16, [N, -, 0, 0, 0, 0, 1, 5]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 2 thru_hol</success>
      <attributes>[1, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [-5.08, 0, 180], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [16, [N, -, 0, 0, 0, 0, 1, 5]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 2 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 5.08 0 180) (siz</try>
        <success> (size 1.524 1.524) </success>
        <attributes>[5.08, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.524 1.524) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.524, 1.524]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 3 /DONE-</try>
        <success>\n    )\n    (model di</success>
        <attributes>[3, [/, D, O, N, E, -, S, E, L, E, C, T, *]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model discret/</success>
      <attributes>[2, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [5.08, 0, 180], [1.524, 1.524], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [3, [/, D, O, N, E, -, S, E, L, E, C, T, *]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model discret/</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model discret/</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model discret/</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model discret/resist</try>
      <foo>
        <try>(at (xyz 0 0 0))\n   </try>
        <bar>
          <try>at (xyz 0 0 0))\n    </try>
          <foo>
            <try>(xyz 0 0 0))\n      (</try>
            <bar>
              <try>xyz 0 0 0))\n      (s</try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 0</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 0</try>
        <bar>
          <try>scale (xyz 0.4 0.4 0</try>
          <foo>
            <try>(xyz 0.4 0.4 0.4))\n </try>
            <bar>
              <try>xyz 0.4 0.4 0.4))\n  </try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 0 0 0))\n</try>
          <foo>
            <try>(xyz 0 0 0))\n    )\n </try>
            <bar>
              <try>xyz 0 0 0))\n    )\n  </try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module CP5 (lay</success>
    <attributes>[[R, 4], [D, e, s, s, u, s], [116.84, 104.14, 180], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 3, E, B, F, 7, D, 2, 2]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module CP5 (lay</try>
    <at_pos_rot>
      <try>\n    (at 140.97 76.2</try>
      <success>\n    (descr "Condens</success>
      <attributes>[140.97, 76.2, 0]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Condens</try>
      <quoted_string>
        <try>"Condensateur polari</try>
        <success>)\n    (tags CP)\n    </success>
        <attributes>[C, o, n, d, e, n, s, a, t, e, u, r,  , p, o, l, a, r, i, s, e]</attributes>
      </quoted_string>
      <success>\n    (tags CP)\n    (</success>
      <attributes>[[d, e, s, c, r], [C, o, n, d, e, n, s, a, t, e, u, r,  , p, o, l, a, r, i, s, e]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags CP)\n    (</try>
      <success>\n    (path /3EBF82C6</success>
      <attributes>[[t, a, g, s], [C, P]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /3EBF82C6</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[p, a, t, h], [/, 3, E, B, F, 8, 2, C, 6]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at 0 0) (layer Des</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 0]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.524 1.</try>
          <bar>
            <try>font (size 1.524 1.5</try>
            <foo>
              <try>(size 1.524 1.524) (</try>
              <bar>
                <try>size 1.524 1.524) (t</try>
                <foo>
                  <try>) (thickness 0.3048)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.3048)</success>
              </bar>
              <success> (thickness 0.3048))</success>
            </foo>
            <foo>
              <try> (thickness 0.3048))</try>
              <bar>
                <try>thickness 0.3048)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [C, 1], [0, 0, 0], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 0 0) (layer Des</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 0]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.524 1.</try>
          <bar>
            <try>font (size 1.524 1.3</try>
            <foo>
              <try>(size 1.524 1.3335) </try>
              <bar>
                <try>size 1.524 1.3335) (</try>
                <foo>
                  <try>) (thickness 0.3048)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.3048)</success>
              </bar>
              <success> (thickness 0.3048))</success>
            </foo>
            <foo>
              <try> (thickness 0.3048))</try>
              <bar>
                <try>thickness 0.3048)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [1, u, F], [0, 0, 0], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.445, -1.27, -4.445, -1.27, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.445, -1.27, -4.445, -1.27, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.445, -1.27, -4.445, -1.27, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.445, -1.27, 5.08, -1.27, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[5.08, -1.27, 5.08, 1.27, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[5.08, 1.27, -4.445, 1.27, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.445, 1.27, -4.445, -1.27, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.445, -0.635, -4.445, -0.635, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-4.445, -0.635, -5.08, -0.635, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-5.08, -0.635, -5.08, 0.635, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-5.08, 0.635, -4.445, 0.635, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-6.35, 0, -6.35, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-6.35, 0, -5.08, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-5.08, 0, -5.08, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-5.08, 0, -5.08, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[5.08, 0, 5.08, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[5.08, 0, 5.08, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[5.08, 0, 6.35, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[6.35, 0, 6.35, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[6.35, 0, 6.35, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 1 thru_hol</success>
      <attributes>[6.35, 0, 6.35, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 1 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 thru_hole rect (a</try>
        <success> thru_hole rect (at </success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -6.35 0) (size 1</try>
        <success> (size 1.397 1.397) </success>
        <attributes>[-6.35, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.397 1.397) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.397, 1.397]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 26 VCC)\n</try>
        <success>\n    )\n    (pad 2 th</success>
        <attributes>[26, [V, C, C]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 2 thru_hol</success>
      <attributes>[1, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [-6.35, 0, 0], [1.397, 1.397], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [26, [V, C, C]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 2 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 6.35 0) (size 1.</try>
        <success> (size 1.397 1.397) </success>
        <attributes>[6.35, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.397 1.397) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.397, 1.397]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 13 GND)\n</try>
        <success>\n    )\n    (model di</success>
        <attributes>[13, [G, N, D]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model discret/</success>
      <attributes>[2, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [6.35, 0, 0], [1.397, 1.397], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [13, [G, N, D]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model discret/</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model discret/</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model discret/</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model discret/c_pol.</try>
      <foo>
        <try>(at (xyz 0 0 0))\n   </try>
        <bar>
          <try>at (xyz 0 0 0))\n    </try>
          <foo>
            <try>(xyz 0 0 0))\n      (</try>
            <bar>
              <try>xyz 0 0 0))\n      (s</try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 0</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 0</try>
        <bar>
          <try>scale (xyz 0.5 0.5 0</try>
          <foo>
            <try>(xyz 0.5 0.5 0.5))\n </try>
            <bar>
              <try>xyz 0.5 0.5 0.5))\n  </try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 0 0 0))\n</try>
          <foo>
            <try>(xyz 0 0 0))\n    )\n </try>
            <bar>
              <try>xyz 0 0 0))\n    )\n  </try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module D3 (laye</success>
    <attributes>[[C, P, 5], [D, e, s, s, u, s], [140.97, 76.2, 0], [[[d, e, s, c, r], [C, o, n, d, e, n, s, a, t, e, u, r,  , p, o, l, a, r, i, s, e]], [[t, a, g, s], [C, P]], [[p, a, t, h], [/, 3, E, B, F, 8, 2, C, 6]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module D3 (laye</try>
    <at_pos_rot>
      <try>\n    (at 156.21 78.7</try>
      <success>\n    (descr "Diode 3</success>
      <attributes>[156.21, 78.74, 180]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Diode 3</try>
      <quoted_string>
        <try>"Diode 3 pas")\n    (</try>
        <success>)\n    (tags "DIODE D</success>
        <attributes>[D, i, o, d, e,  , 3,  , p, a, s]</attributes>
      </quoted_string>
      <success>\n    (tags "DIODE DE</success>
      <attributes>[[d, e, s, c, r], [D, i, o, d, e,  , 3,  , p, a, s]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags "DIODE DE</try>
      <quoted_string>
        <try>"DIODE DEV")\n    (pa</try>
        <success>)\n    (path /3EBF817</success>
        <attributes>[D, I, O, D, E,  , D, E, V]</attributes>
      </quoted_string>
      <success>\n    (path /3EBF8176</success>
      <attributes>[[t, a, g, s], [D, I, O, D, E,  , D, E, V]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /3EBF8176</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[p, a, t, h], [/, 3, E, B, F, 8, 1, 7, 6]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.016 1.</try>
          <bar>
            <try>font (size 1.016 1.0</try>
            <foo>
              <try>(size 1.016 1.016) (</try>
              <bar>
                <try>size 1.016 1.016) (t</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [D, 2], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.016 1.</try>
          <bar>
            <try>font (size 1.016 1.0</try>
            <foo>
              <try>(size 1.016 1.016) (</try>
              <bar>
                <try>size 1.016 1.016) (t</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [B, A, T, 4, 6], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[3.81, 0, 3.048, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[3.048, 0, 3.048, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[3.048, -1.016, -3.048, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-3.048, -1.016, -3.048, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-3.048, 0, -3.81, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-3.048, 0, -3.048, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-3.048, 1.016, 3.048, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[3.048, 1.016, 3.048, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[2.54, -1.016, 2.54, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 2 thru_hol</success>
      <attributes>[2.286, 1.016, 2.286, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 2 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 thru_hole rect (a</try>
        <success> thru_hole rect (at </success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 3.81 0 180) (siz</try>
        <success> (size 1.397 1.397) </success>
        <attributes>[3.81, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.397 1.397) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.397, 1.397]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 26 VCC)\n</try>
        <success>\n    )\n    (pad 1 th</success>
        <attributes>[26, [V, C, C]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 1 thru_hol</success>
      <attributes>[2, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [3.81, 0, 180], [1.397, 1.397], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [26, [V, C, C]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 1 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -3.81 0 180) (si</try>
        <success> (size 1.397 1.397) </success>
        <attributes>[-3.81, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.397 1.397) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.397, 1.397]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 4 /PWR_3</try>
        <success>\n    )\n    (model di</success>
        <attributes>[4, [/, P, W, R, _, 3, ,, 3, -, 5, V]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model discret/</success>
      <attributes>[1, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [-3.81, 0, 180], [1.397, 1.397], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [4, [/, P, W, R, _, 3, ,, 3, -, 5, V]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model discret/</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model discret/</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model discret/</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model discret/diode.</try>
      <foo>
        <try>(at (xyz 0 0 0))\n   </try>
        <bar>
          <try>at (xyz 0 0 0))\n    </try>
          <foo>
            <try>(xyz 0 0 0))\n      (</try>
            <bar>
              <try>xyz 0 0 0))\n      (s</try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 0</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 0</try>
        <bar>
          <try>scale (xyz 0.3 0.3 0</try>
          <foo>
            <try>(xyz 0.3 0.3 0.3))\n </try>
            <bar>
              <try>xyz 0.3 0.3 0.3))\n  </try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 0 0 0))\n</try>
          <foo>
            <try>(xyz 0 0 0))\n    )\n </try>
            <bar>
              <try>xyz 0 0 0))\n    )\n  </try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module D3 (laye</success>
    <attributes>[[D, 3], [D, e, s, s, u, s], [156.21, 78.74, 180], [[[d, e, s, c, r], [D, i, o, d, e,  , 3,  , p, a, s]], [[t, a, g, s], [D, I, O, D, E,  , D, E, V]], [[p, a, t, h], [/, 3, E, B, F, 8, 1, 7, 6]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module D3 (laye</try>
    <at_pos_rot>
      <try>\n    (at 130.81 72.3</try>
      <success>\n    (descr "Diode 3</success>
      <attributes>[130.81, 72.39, 180]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Diode 3</try>
      <quoted_string>
        <try>"Diode 3 pas")\n    (</try>
        <success>)\n    (tags "DIODE D</success>
        <attributes>[D, i, o, d, e,  , 3,  , p, a, s]</attributes>
      </quoted_string>
      <success>\n    (tags "DIODE DE</success>
      <attributes>[[d, e, s, c, r], [D, i, o, d, e,  , 3,  , p, a, s]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags "DIODE DE</try>
      <quoted_string>
        <try>"DIODE DEV")\n    (pa</try>
        <success>)\n    (path /3EBF815</success>
        <attributes>[D, I, O, D, E,  , D, E, V]</attributes>
      </quoted_string>
      <success>\n    (path /3EBF815E</success>
      <attributes>[[t, a, g, s], [D, I, O, D, E,  , D, E, V]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /3EBF815E</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[p, a, t, h], [/, 3, E, B, F, 8, 1, 5, E]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.016 1.</try>
          <bar>
            <try>font (size 1.016 1.0</try>
            <foo>
              <try>(size 1.016 1.016) (</try>
              <bar>
                <try>size 1.016 1.016) (t</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [D, 1], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 0 0 180) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 180]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.016 1.</try>
          <bar>
            <try>font (size 1.016 1.0</try>
            <foo>
              <try>(size 1.016 1.016) (</try>
              <bar>
                <try>size 1.016 1.016) (t</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [B, A, T, 4, 6], [0, 0, 180], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[3.81, 0, 3.048, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[3.048, 0, 3.048, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[3.048, -1.016, -3.048, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-3.048, -1.016, -3.048, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-3.048, 0, -3.81, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-3.048, 0, -3.048, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-3.048, 1.016, 3.048, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[3.048, 1.016, 3.048, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[2.54, -1.016, 2.54, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 2 thru_hol</success>
      <attributes>[2.286, 1.016, 2.286, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 2 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 thru_hole rect (a</try>
        <success> thru_hole rect (at </success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 3.81 0 180) (siz</try>
        <success> (size 1.397 1.397) </success>
        <attributes>[3.81, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.397 1.397) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.397, 1.397]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 15 N-000</try>
        <success>\n    )\n    (pad 1 th</success>
        <attributes>[15, [N, -, 0, 0, 0, 0, 1, 4]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 1 thru_hol</success>
      <attributes>[2, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [3.81, 0, 180], [1.397, 1.397], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [15, [N, -, 0, 0, 0, 0, 1, 4]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 1 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -3.81 0 180) (si</try>
        <success> (size 1.397 1.397) </success>
        <attributes>[-3.81, 0, 180]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.397 1.397) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.397, 1.397]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 26 VCC)\n</try>
        <success>\n    )\n    (model di</success>
        <attributes>[26, [V, C, C]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model discret/</success>
      <attributes>[1, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [-3.81, 0, 180], [1.397, 1.397], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [26, [V, C, C]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model discret/</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model discret/</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model discret/</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model discret/diode.</try>
      <foo>
        <try>(at (xyz 0 0 0))\n   </try>
        <bar>
          <try>at (xyz 0 0 0))\n    </try>
          <foo>
            <try>(xyz 0 0 0))\n      (</try>
            <bar>
              <try>xyz 0 0 0))\n      (s</try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 0</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 0</try>
        <bar>
          <try>scale (xyz 0.3 0.3 0</try>
          <foo>
            <try>(xyz 0.3 0.3 0.3))\n </try>
            <bar>
              <try>xyz 0.3 0.3 0.3))\n  </try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 0 0 0))\n</try>
          <foo>
            <try>(xyz 0 0 0))\n    )\n </try>
            <bar>
              <try>xyz 0 0 0))\n    )\n  </try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module 14DIP-EL</success>
    <attributes>[[D, 3], [D, e, s, s, u, s], [130.81, 72.39, 180], [[[d, e, s, c, r], [D, i, o, d, e,  , 3,  , p, a, s]], [[t, a, g, s], [D, I, O, D, E,  , D, E, V]], [[p, a, t, h], [/, 3, E, B, F, 8, 1, 5, E]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module 14DIP-EL</try>
    <at_pos_rot>
      <try>\n    (at 144.78 90.1</try>
      <success>\n    (descr "Module </success>
      <attributes>[144.78, 90.17, 270]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Module </try>
      <quoted_string>
        <try>"Module Dil 14 pins,</try>
        <success>)\n    (tags DIL)\n   </success>
        <attributes>[M, o, d, u, l, e,  , D, i, l,  , 1, 4,  , p, i, n, s, ,,  , p, a, d, s,  , e, l, l, i, p, t, i, q, u, e, s]</attributes>
      </quoted_string>
      <success>\n    (tags DIL)\n    </success>
      <attributes>[[d, e, s, c, r], [M, o, d, u, l, e,  , D, i, l,  , 1, 4,  , p, i, n, s, ,,  , p, a, d, s,  , e, l, l, i, p, t, i, q, u, e, s]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags DIL)\n    </try>
      <success>\n    (path /3EBF7EEC</success>
      <attributes>[[t, a, g, s], [D, I, L]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /3EBF7EEC</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[p, a, t, h], [/, 3, E, B, F, 7, E, E, C]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at -5.08 -1.27 270</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[-5.08, -1.27, 270]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.524 1.</try>
          <bar>
            <try>font (size 1.524 1.1</try>
            <foo>
              <try>(size 1.524 1.143) (</try>
              <bar>
                <try>size 1.524 1.143) (t</try>
                <foo>
                  <try>) (thickness 0.28702</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.28702</success>
              </bar>
              <success> (thickness 0.28702)</success>
            </foo>
            <foo>
              <try> (thickness 0.28702)</try>
              <bar>
                <try>thickness 0.28702)))</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [U, 2], [-5.08, -1.27, 270], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 1.27 1.27 270) </try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[1.27, 1.27, 270]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.524 1.</try>
          <bar>
            <try>font (size 1.524 1.1</try>
            <foo>
              <try>(size 1.524 1.143) (</try>
              <bar>
                <try>size 1.524 1.143) (t</try>
                <foo>
                  <try>) (thickness 0.28702</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.28702</success>
              </bar>
              <success> (thickness 0.28702)</success>
            </foo>
            <foo>
              <try> (thickness 0.28702)</try>
              <bar>
                <try>thickness 0.28702)))</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [7, 4, L, S, 1, 2, 5], [1.27, 1.27, 270], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-10.16, -2.54, 10.16, -2.54, [D, e, s, s, u, s, ., S, i, l, k, S], 0.381]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[10.16, 2.54, -10.16, 2.54, [D, e, s, s, u, s, ., S, i, l, k, S], 0.381]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-10.16, 2.54, -10.16, -2.54, [D, e, s, s, u, s, ., S, i, l, k, S], 0.381]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-10.16, -1.27, -8.89, -1.27, [D, e, s, s, u, s, ., S, i, l, k, S], 0.381]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-8.89, -1.27, -8.89, 1.27, [D, e, s, s, u, s, ., S, i, l, k, S], 0.381]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-8.89, 1.27, -10.16, 1.27, [D, e, s, s, u, s, ., S, i, l, k, S], 0.381]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 1 thru_hol</success>
      <attributes>[10.16, -2.54, 10.16, 2.54, [D, e, s, s, u, s, ., S, i, l, k, S], 0.381]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 1 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 thru_hole rect (a</try>
        <success> thru_hole rect (at </success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -7.62 3.81 270) </try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[-7.62, 3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 13 GND)\n</try>
        <success>\n    )\n    (pad 2 th</success>
        <attributes>[13, [G, N, D]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 2 thru_hol</success>
      <attributes>[1, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [-7.62, 3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [13, [G, N, D]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 2 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 thru_hole oval (a</try>
        <success> thru_hole oval (at </success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -5.08 3.81 270) </try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[-5.08, 3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 25 N-000</try>
        <success>\n    )\n    (pad 3 th</success>
        <attributes>[25, [N, -, 0, 0, 0, 0, 3, 8]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 3 thru_hol</success>
      <attributes>[2, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [-5.08, 3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [25, [N, -, 0, 0, 0, 0, 3, 8]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 3 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 3 thru_hole oval (a</try>
        <success> thru_hole oval (at </success>
        <attributes>3</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -2.54 3.81 270) </try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[-2.54, 3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 16 N-000</try>
        <success>\n    )\n    (pad 4 th</success>
        <attributes>[16, [N, -, 0, 0, 0, 0, 1, 5]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 4 thru_hol</success>
      <attributes>[3, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [-2.54, 3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [16, [N, -, 0, 0, 0, 0, 1, 5]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 4 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 4 thru_hole oval (a</try>
        <success> thru_hole oval (at </success>
        <attributes>4</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 0 3.81 270) (siz</try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[0, 3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 13 GND)\n</try>
        <success>\n    )\n    (pad 5 th</success>
        <attributes>[13, [G, N, D]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 5 thru_hol</success>
      <attributes>[4, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [0, 3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [13, [G, N, D]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 5 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 5 thru_hole oval (a</try>
        <success> thru_hole oval (at </success>
        <attributes>5</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 2.54 3.81 270) (</try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[2.54, 3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 13 GND)\n</try>
        <success>\n    )\n    (pad 6 th</success>
        <attributes>[13, [G, N, D]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 6 thru_hol</success>
      <attributes>[5, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [2.54, 3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [13, [G, N, D]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 6 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 6 thru_hole oval (a</try>
        <success> thru_hole oval (at </success>
        <attributes>6</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 5.08 3.81 270) (</try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[5.08, 3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad 7 th</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 7 thru_hol</success>
      <attributes>[6, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [5.08, 3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 7 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 7 thru_hole oval (a</try>
        <success> thru_hole oval (at </success>
        <attributes>7</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 7.62 3.81 270) (</try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[7.62, 3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 13 GND)\n</try>
        <success>\n    )\n    (pad 8 th</success>
        <attributes>[13, [G, N, D]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 8 thru_hol</success>
      <attributes>[7, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [7.62, 3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [13, [G, N, D]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 8 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 8 thru_hole oval (a</try>
        <success> thru_hole oval (at </success>
        <attributes>8</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 7.62 -3.81 270) </try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[7.62, -3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad 9 th</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 9 thru_hol</success>
      <attributes>[8, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [7.62, -3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 9 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 9 thru_hole oval (a</try>
        <success> thru_hole oval (at </success>
        <attributes>9</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 5.08 -3.81 270) </try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[5.08, -3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 13 GND)\n</try>
        <success>\n    )\n    (pad 10 t</success>
        <attributes>[13, [G, N, D]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 10 thru_ho</success>
      <attributes>[9, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [5.08, -3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [13, [G, N, D]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 10 thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 10 thru_hole oval (</try>
        <success> thru_hole oval (at </success>
        <attributes>10</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 2.54 -3.81 270) </try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[2.54, -3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 13 GND)\n</try>
        <success>\n    )\n    (pad 11 t</success>
        <attributes>[13, [G, N, D]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 11 thru_ho</success>
      <attributes>[10, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [2.54, -3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [13, [G, N, D]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 11 thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 11 thru_hole oval (</try>
        <success> thru_hole oval (at </success>
        <attributes>11</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 0 -3.81 270) (si</try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[0, -3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n    )\n    (pad 12 t</try>
        <fail/>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 12 thru_ho</success>
      <attributes>[11, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [0, -3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [0, []]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 12 thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 12 thru_hole oval (</try>
        <success> thru_hole oval (at </success>
        <attributes>12</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -2.54 -3.81 270)</try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[-2.54, -3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 13 GND)\n</try>
        <success>\n    )\n    (pad 13 t</success>
        <attributes>[13, [G, N, D]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 13 thru_ho</success>
      <attributes>[12, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [-2.54, -3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [13, [G, N, D]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 13 thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 13 thru_hole oval (</try>
        <success> thru_hole oval (at </success>
        <attributes>13</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -5.08 -3.81 270)</try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[-5.08, -3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 13 GND)\n</try>
        <success>\n    )\n    (pad 14 t</success>
        <attributes>[13, [G, N, D]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 14 thru_ho</success>
      <attributes>[13, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [-5.08, -3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [13, [G, N, D]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 14 thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 14 thru_hole oval (</try>
        <success> thru_hole oval (at </success>
        <attributes>14</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -7.62 -3.81 270)</try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[-7.62, -3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 26 VCC)\n</try>
        <success>\n    )\n    (model di</success>
        <attributes>[26, [V, C, C]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model dil/dil_</success>
      <attributes>[14, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [-7.62, -3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [26, [V, C, C]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model dil/dil_</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model dil/dil_</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model dil/dil_</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model dil/dil_14.wrl</try>
      <foo>
        <try>(at (xyz 0 0 0))\n   </try>
        <bar>
          <try>at (xyz 0 0 0))\n    </try>
          <foo>
            <try>(xyz 0 0 0))\n      (</try>
            <bar>
              <try>xyz 0 0 0))\n      (s</try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 1</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 1</try>
        <bar>
          <try>scale (xyz 1 1 1))\n </try>
          <foo>
            <try>(xyz 1 1 1))\n      (</try>
            <bar>
              <try>xyz 1 1 1))\n      (r</try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 0 0 0))\n</try>
          <foo>
            <try>(xyz 0 0 0))\n    )\n </try>
            <bar>
              <try>xyz 0 0 0))\n    )\n  </try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module 14DIP-EL</success>
    <attributes>[[1, 4, D, I, P, -, E, L, L, 3, 0, 0], [D, e, s, s, u, s], [144.78, 90.17, 270], [[[d, e, s, c, r], [M, o, d, u, l, e,  , D, i, l,  , 1, 4,  , p, i, n, s, ,,  , p, a, d, s,  , e, l, l, i, p, t, i, q, u, e, s]], [[t, a, g, s], [D, I, L]], [[p, a, t, h], [/, 3, E, B, F, 7, E, E, C]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module 14DIP-EL</try>
    <at_pos_rot>
      <try>\n    (at 130.81 90.1</try>
      <success>\n    (descr "Module </success>
      <attributes>[130.81, 90.17, 270]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Module </try>
      <quoted_string>
        <try>"Module Dil 14 pins,</try>
        <success>)\n    (tags DIL)\n   </success>
        <attributes>[M, o, d, u, l, e,  , D, i, l,  , 1, 4,  , p, i, n, s, ,,  , p, a, d, s,  , e, l, l, i, p, t, i, q, u, e, s]</attributes>
      </quoted_string>
      <success>\n    (tags DIL)\n    </success>
      <attributes>[[d, e, s, c, r], [M, o, d, u, l, e,  , D, i, l,  , 1, 4,  , p, i, n, s, ,,  , p, a, d, s,  , e, l, l, i, p, t, i, q, u, e, s]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags DIL)\n    </try>
      <success>\n    (path /3EBF7DBD</success>
      <attributes>[[t, a, g, s], [D, I, L]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /3EBF7DBD</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[p, a, t, h], [/, 3, E, B, F, 7, D, B, D]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at -5.08 -1.27 270</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[-5.08, -1.27, 270]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.524 1.</try>
          <bar>
            <try>font (size 1.524 1.1</try>
            <foo>
              <try>(size 1.524 1.143) (</try>
              <bar>
                <try>size 1.524 1.143) (t</try>
                <foo>
                  <try>) (thickness 0.28702</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.28702</success>
              </bar>
              <success> (thickness 0.28702)</success>
            </foo>
            <foo>
              <try> (thickness 0.28702)</try>
              <bar>
                <try>thickness 0.28702)))</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [U, 1], [-5.08, -1.27, 270], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 1.27 1.27 270) </try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[1.27, 1.27, 270]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.524 1.</try>
          <bar>
            <try>font (size 1.524 1.1</try>
            <foo>
              <try>(size 1.524 1.143) (</try>
              <bar>
                <try>size 1.524 1.143) (t</try>
                <foo>
                  <try>) (thickness 0.28702</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.28702</success>
              </bar>
              <success> (thickness 0.28702)</success>
            </foo>
            <foo>
              <try> (thickness 0.28702)</try>
              <bar>
                <try>thickness 0.28702)))</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [7, 4, L, S, 1, 2, 5], [1.27, 1.27, 270], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-10.16, -2.54, 10.16, -2.54, [D, e, s, s, u, s, ., S, i, l, k, S], 0.381]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[10.16, 2.54, -10.16, 2.54, [D, e, s, s, u, s, ., S, i, l, k, S], 0.381]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-10.16, 2.54, -10.16, -2.54, [D, e, s, s, u, s, ., S, i, l, k, S], 0.381]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-10.16, -1.27, -8.89, -1.27, [D, e, s, s, u, s, ., S, i, l, k, S], 0.381]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-8.89, -1.27, -8.89, 1.27, [D, e, s, s, u, s, ., S, i, l, k, S], 0.381]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-8.89, 1.27, -10.16, 1.27, [D, e, s, s, u, s, ., S, i, l, k, S], 0.381]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 1 thru_hol</success>
      <attributes>[10.16, -2.54, 10.16, 2.54, [D, e, s, s, u, s, ., S, i, l, k, S], 0.381]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 1 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 thru_hole rect (a</try>
        <success> thru_hole rect (at </success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -7.62 3.81 270) </try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[-7.62, 3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 19 N-000</try>
        <success>\n    )\n    (pad 2 th</success>
        <attributes>[19, [N, -, 0, 0, 0, 0, 3, 1]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 2 thru_hol</success>
      <attributes>[1, [[t, h, r, u, _, h, o, l, e], [r, e, c, t]], [-7.62, 3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [19, [N, -, 0, 0, 0, 0, 3, 1]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 2 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 thru_hole oval (a</try>
        <success> thru_hole oval (at </success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -5.08 3.81 270) </try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[-5.08, 3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 13 GND)\n</try>
        <success>\n    )\n    (pad 3 th</success>
        <attributes>[13, [G, N, D]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 3 thru_hol</success>
      <attributes>[2, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [-5.08, 3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [13, [G, N, D]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 3 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 3 thru_hole oval (a</try>
        <success> thru_hole oval (at </success>
        <attributes>3</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -2.54 3.81 270) </try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[-2.54, 3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 25 N-000</try>
        <success>\n    )\n    (pad 4 th</success>
        <attributes>[25, [N, -, 0, 0, 0, 0, 3, 8]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 4 thru_hol</success>
      <attributes>[3, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [-2.54, 3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [25, [N, -, 0, 0, 0, 0, 3, 8]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 4 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 4 thru_hole oval (a</try>
        <success> thru_hole oval (at </success>
        <attributes>4</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 0 3.81 270) (siz</try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[0, 3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 21 N-000</try>
        <success>\n    )\n    (pad 5 th</success>
        <attributes>[21, [N, -, 0, 0, 0, 0, 3, 3]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 5 thru_hol</success>
      <attributes>[4, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [0, 3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [21, [N, -, 0, 0, 0, 0, 3, 3]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 5 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 5 thru_hole oval (a</try>
        <success> thru_hole oval (at </success>
        <attributes>5</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 2.54 3.81 270) (</try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[2.54, 3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 17 N-000</try>
        <success>\n    )\n    (pad 6 th</success>
        <attributes>[17, [N, -, 0, 0, 0, 0, 1, 6]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 6 thru_hol</success>
      <attributes>[5, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [2.54, 3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [17, [N, -, 0, 0, 0, 0, 1, 6]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 6 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 6 thru_hole oval (a</try>
        <success> thru_hole oval (at </success>
        <attributes>6</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 5.08 3.81 270) (</try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[5.08, 3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 23 N-000</try>
        <success>\n    )\n    (pad 7 th</success>
        <attributes>[23, [N, -, 0, 0, 0, 0, 3, 5]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 7 thru_hol</success>
      <attributes>[6, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [5.08, 3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [23, [N, -, 0, 0, 0, 0, 3, 5]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 7 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 7 thru_hole oval (a</try>
        <success> thru_hole oval (at </success>
        <attributes>7</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 7.62 3.81 270) (</try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[7.62, 3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 13 GND)\n</try>
        <success>\n    )\n    (pad 8 th</success>
        <attributes>[13, [G, N, D]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 8 thru_hol</success>
      <attributes>[7, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [7.62, 3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [13, [G, N, D]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 8 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 8 thru_hole oval (a</try>
        <success> thru_hole oval (at </success>
        <attributes>8</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 7.62 -3.81 270) </try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[7.62, -3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 24 N-000</try>
        <success>\n    )\n    (pad 9 th</success>
        <attributes>[24, [N, -, 0, 0, 0, 0, 3, 6]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 9 thru_hol</success>
      <attributes>[8, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [7.62, -3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [24, [N, -, 0, 0, 0, 0, 3, 6]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 9 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 9 thru_hole oval (a</try>
        <success> thru_hole oval (at </success>
        <attributes>9</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 5.08 -3.81 270) </try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[5.08, -3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 18 N-000</try>
        <success>\n    )\n    (pad 10 t</success>
        <attributes>[18, [N, -, 0, 0, 0, 0, 3, 0]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 10 thru_ho</success>
      <attributes>[9, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [5.08, -3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [18, [N, -, 0, 0, 0, 0, 3, 0]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 10 thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 10 thru_hole oval (</try>
        <success> thru_hole oval (at </success>
        <attributes>10</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 2.54 -3.81 270) </try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[2.54, -3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 21 N-000</try>
        <success>\n    )\n    (pad 11 t</success>
        <attributes>[21, [N, -, 0, 0, 0, 0, 3, 3]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 11 thru_ho</success>
      <attributes>[10, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [2.54, -3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [21, [N, -, 0, 0, 0, 0, 3, 3]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 11 thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 11 thru_hole oval (</try>
        <success> thru_hole oval (at </success>
        <attributes>11</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 0 -3.81 270) (si</try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[0, -3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 22 N-000</try>
        <success>\n    )\n    (pad 12 t</success>
        <attributes>[22, [N, -, 0, 0, 0, 0, 3, 4]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 12 thru_ho</success>
      <attributes>[11, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [0, -3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [22, [N, -, 0, 0, 0, 0, 3, 4]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 12 thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 12 thru_hole oval (</try>
        <success> thru_hole oval (at </success>
        <attributes>12</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -2.54 -3.81 270)</try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[-2.54, -3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 20 N-000</try>
        <success>\n    )\n    (pad 13 t</success>
        <attributes>[20, [N, -, 0, 0, 0, 0, 3, 2]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 13 thru_ho</success>
      <attributes>[12, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [-2.54, -3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [20, [N, -, 0, 0, 0, 0, 3, 2]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 13 thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 13 thru_hole oval (</try>
        <success> thru_hole oval (at </success>
        <attributes>13</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -5.08 -3.81 270)</try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[-5.08, -3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 21 N-000</try>
        <success>\n    )\n    (pad 14 t</success>
        <attributes>[21, [N, -, 0, 0, 0, 0, 3, 3]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 14 thru_ho</success>
      <attributes>[13, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [-5.08, -3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [21, [N, -, 0, 0, 0, 0, 3, 3]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 14 thru_ho</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 14 thru_hole oval (</try>
        <success> thru_hole oval (at </success>
        <attributes>14</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -7.62 -3.81 270)</try>
        <success> (size 1.5748 2.286)</success>
        <attributes>[-7.62, -3.81, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.5748 2.286)</try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.5748, 2.286]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 26 VCC)\n</try>
        <success>\n    )\n    (model di</success>
        <attributes>[26, [V, C, C]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model dil/dil_</success>
      <attributes>[14, [[t, h, r, u, _, h, o, l, e], [o, v, a, l]], [-7.62, -3.81, 270], [1.5748, 2.286], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [26, [V, C, C]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model dil/dil_</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model dil/dil_</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model dil/dil_</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model dil/dil_14.wrl</try>
      <foo>
        <try>(at (xyz 0 0 0))\n   </try>
        <bar>
          <try>at (xyz 0 0 0))\n    </try>
          <foo>
            <try>(xyz 0 0 0))\n      (</try>
            <bar>
              <try>xyz 0 0 0))\n      (s</try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 1</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 1</try>
        <bar>
          <try>scale (xyz 1 1 1))\n </try>
          <foo>
            <try>(xyz 1 1 1))\n      (</try>
            <bar>
              <try>xyz 1 1 1))\n      (r</try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 0 0 0))\n</try>
          <foo>
            <try>(xyz 0 0 0))\n    )\n </try>
            <bar>
              <try>xyz 0 0 0))\n    )\n  </try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module C2 (laye</success>
    <attributes>[[1, 4, D, I, P, -, E, L, L, 3, 0, 0], [D, e, s, s, u, s], [130.81, 90.17, 270], [[[d, e, s, c, r], [M, o, d, u, l, e,  , D, i, l,  , 1, 4,  , p, i, n, s, ,,  , p, a, d, s,  , e, l, l, i, p, t, i, q, u, e, s]], [[t, a, g, s], [D, I, L]], [[p, a, t, h], [/, 3, E, B, F, 7, D, B, D]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module C2 (laye</try>
    <at_pos_rot>
      <try>\n    (at 140.97 105.</try>
      <success>\n    (descr "Condens</success>
      <attributes>[140.97, 105.41, 270]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Condens</try>
      <quoted_string>
        <try>"Condensateur = 2 pa</try>
        <success>)\n    (tags C)\n    (</success>
        <attributes>[C, o, n, d, e, n, s, a, t, e, u, r,  , =,  , 2,  , p, a, s]</attributes>
      </quoted_string>
      <success>\n    (tags C)\n    (p</success>
      <attributes>[[d, e, s, c, r], [C, o, n, d, e, n, s, a, t, e, u, r,  , =,  , 2,  , p, a, s]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags C)\n    (p</try>
      <success>\n    (path /4D528085</success>
      <attributes>[[t, a, g, s], [C]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /4D528085</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[p, a, t, h], [/, 4, D, 5, 2, 8, 0, 8, 5]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at 0 0 270) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 270]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.016 1.</try>
          <bar>
            <try>font (size 1.016 1.0</try>
            <foo>
              <try>(size 1.016 1.016) (</try>
              <bar>
                <try>size 1.016 1.016) (t</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [C, 2], [0, 0, 270], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 0 0 270) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 270]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.016 1.</try>
          <bar>
            <try>font (size 1.016 1.0</try>
            <foo>
              <try>(size 1.016 1.016) (</try>
              <bar>
                <try>size 1.016 1.016) (t</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [1, 0, 0, p, F], [0, 0, 270], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-3.556, -1.016, 3.556, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[3.556, -1.016, 3.556, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[3.556, 1.016, -3.556, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-3.556, 1.016, -3.556, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 1 thru_hol</success>
      <attributes>[-3.556, -0.508, -3.048, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 1 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -2.54 0 270) (si</try>
        <success> (size 1.397 1.397) </success>
        <attributes>[-2.54, 0, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.397 1.397) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.397, 1.397]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 23 N-000</try>
        <success>\n    )\n    (pad 2 th</success>
        <attributes>[23, [N, -, 0, 0, 0, 0, 3, 5]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 2 thru_hol</success>
      <attributes>[1, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [-2.54, 0, 270], [1.397, 1.397], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [23, [N, -, 0, 0, 0, 0, 3, 5]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 2 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 2.54 0 270) (siz</try>
        <success> (size 1.397 1.397) </success>
        <attributes>[2.54, 0, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.397 1.397) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.397, 1.397]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 13 GND)\n</try>
        <success>\n    )\n    (model di</success>
        <attributes>[13, [G, N, D]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model discret/</success>
      <attributes>[2, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [2.54, 0, 270], [1.397, 1.397], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [13, [G, N, D]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model discret/</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model discret/</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model discret/</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model discret/capa_2</try>
      <foo>
        <try>(at (xyz 0 0 0))\n   </try>
        <bar>
          <try>at (xyz 0 0 0))\n    </try>
          <foo>
            <try>(xyz 0 0 0))\n      (</try>
            <bar>
              <try>xyz 0 0 0))\n      (s</try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 1</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 1</try>
        <bar>
          <try>scale (xyz 1 1 1))\n </try>
          <foo>
            <try>(xyz 1 1 1))\n      (</try>
            <bar>
              <try>xyz 1 1 1))\n      (r</try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 0 0 0))\n</try>
          <foo>
            <try>(xyz 0 0 0))\n    )\n </try>
            <bar>
              <try>xyz 0 0 0))\n    )\n  </try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module C2 (laye</success>
    <attributes>[[C, 2], [D, e, s, s, u, s], [140.97, 105.41, 270], [[[d, e, s, c, r], [C, o, n, d, e, n, s, a, t, e, u, r,  , =,  , 2,  , p, a, s]], [[t, a, g, s], [C]], [[p, a, t, h], [/, 4, D, 5, 2, 8, 0, 8, 5]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module C2 (laye</try>
    <at_pos_rot>
      <try>\n    (at 153.67 69.8</try>
      <success>\n    (descr "Condens</success>
      <attributes>[153.67, 69.85, 0]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Condens</try>
      <quoted_string>
        <try>"Condensateur = 2 pa</try>
        <success>)\n    (tags C)\n    (</success>
        <attributes>[C, o, n, d, e, n, s, a, t, e, u, r,  , =,  , 2,  , p, a, s]</attributes>
      </quoted_string>
      <success>\n    (tags C)\n    (p</success>
      <attributes>[[d, e, s, c, r], [C, o, n, d, e, n, s, a, t, e, u, r,  , =,  , 2,  , p, a, s]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags C)\n    (p</try>
      <success>\n    (path /4D528084</success>
      <attributes>[[t, a, g, s], [C]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /4D528084</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[p, a, t, h], [/, 4, D, 5, 2, 8, 0, 8, 4]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at 0 0) (layer Des</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 0]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.016 1.</try>
          <bar>
            <try>font (size 1.016 1.0</try>
            <foo>
              <try>(size 1.016 1.016) (</try>
              <bar>
                <try>size 1.016 1.016) (t</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [C, 3], [0, 0, 0], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 0 0) (layer Des</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 0]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.016 1.</try>
          <bar>
            <try>font (size 1.016 1.0</try>
            <foo>
              <try>(size 1.016 1.016) (</try>
              <bar>
                <try>size 1.016 1.016) (t</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [1, 0, 0, p, F], [0, 0, 0], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-3.556, -1.016, 3.556, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[3.556, -1.016, 3.556, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[3.556, 1.016, -3.556, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-3.556, 1.016, -3.556, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 1 thru_hol</success>
      <attributes>[-3.556, -0.508, -3.048, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 1 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -2.54 0) (size 1</try>
        <success> (size 1.397 1.397) </success>
        <attributes>[-2.54, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.397 1.397) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.397, 1.397]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 25 N-000</try>
        <success>\n    )\n    (pad 2 th</success>
        <attributes>[25, [N, -, 0, 0, 0, 0, 3, 8]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 2 thru_hol</success>
      <attributes>[1, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [-2.54, 0, 0], [1.397, 1.397], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [25, [N, -, 0, 0, 0, 0, 3, 8]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 2 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 2.54 0) (size 1.</try>
        <success> (size 1.397 1.397) </success>
        <attributes>[2.54, 0, 0]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.397 1.397) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.397, 1.397]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 13 GND)\n</try>
        <success>\n    )\n    (model di</success>
        <attributes>[13, [G, N, D]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model discret/</success>
      <attributes>[2, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [2.54, 0, 0], [1.397, 1.397], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [13, [G, N, D]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model discret/</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model discret/</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model discret/</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model discret/capa_2</try>
      <foo>
        <try>(at (xyz 0 0 0))\n   </try>
        <bar>
          <try>at (xyz 0 0 0))\n    </try>
          <foo>
            <try>(xyz 0 0 0))\n      (</try>
            <bar>
              <try>xyz 0 0 0))\n      (s</try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 1</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 1</try>
        <bar>
          <try>scale (xyz 1 1 1))\n </try>
          <foo>
            <try>(xyz 1 1 1))\n      (</try>
            <bar>
              <try>xyz 1 1 1))\n      (r</try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 0 0 0))\n</try>
          <foo>
            <try>(xyz 0 0 0))\n    )\n </try>
            <bar>
              <try>xyz 0 0 0))\n    )\n  </try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module C2 (laye</success>
    <attributes>[[C, 2], [D, e, s, s, u, s], [153.67, 69.85, 0], [[[d, e, s, c, r], [C, o, n, d, e, n, s, a, t, e, u, r,  , =,  , 2,  , p, a, s]], [[t, a, g, s], [C]], [[p, a, t, h], [/, 4, D, 5, 2, 8, 0, 8, 4]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module C2 (laye</try>
    <at_pos_rot>
      <try>\n    (at 144.78 105.</try>
      <success>\n    (descr "Condens</success>
      <attributes>[144.78, 105.41, 270]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Condens</try>
      <quoted_string>
        <try>"Condensateur = 2 pa</try>
        <success>)\n    (tags C)\n    (</success>
        <attributes>[C, o, n, d, e, n, s, a, t, e, u, r,  , =,  , 2,  , p, a, s]</attributes>
      </quoted_string>
      <success>\n    (tags C)\n    (p</success>
      <attributes>[[d, e, s, c, r], [C, o, n, d, e, n, s, a, t, e, u, r,  , =,  , 2,  , p, a, s]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags C)\n    (p</try>
      <success>\n    (path /4D528086</success>
      <attributes>[[t, a, g, s], [C]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /4D528086</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[p, a, t, h], [/, 4, D, 5, 2, 8, 0, 8, 6]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at 0 0 270) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 270]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.016 1.</try>
          <bar>
            <try>font (size 1.016 1.0</try>
            <foo>
              <try>(size 1.016 1.016) (</try>
              <bar>
                <try>size 1.016 1.016) (t</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [C, 5], [0, 0, 270], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 0 0 270) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 270]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.016 1.</try>
          <bar>
            <try>font (size 1.016 1.0</try>
            <foo>
              <try>(size 1.016 1.016) (</try>
              <bar>
                <try>size 1.016 1.016) (t</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [1, 0, 0, p, F], [0, 0, 270], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-3.556, -1.016, 3.556, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[3.556, -1.016, 3.556, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[3.556, 1.016, -3.556, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-3.556, 1.016, -3.556, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 1 thru_hol</success>
      <attributes>[-3.556, -0.508, -3.048, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 1 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -2.54 0 270) (si</try>
        <success> (size 1.397 1.397) </success>
        <attributes>[-2.54, 0, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.397 1.397) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.397, 1.397]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 24 N-000</try>
        <success>\n    )\n    (pad 2 th</success>
        <attributes>[24, [N, -, 0, 0, 0, 0, 3, 6]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 2 thru_hol</success>
      <attributes>[1, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [-2.54, 0, 270], [1.397, 1.397], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [24, [N, -, 0, 0, 0, 0, 3, 6]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 2 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 2.54 0 270) (siz</try>
        <success> (size 1.397 1.397) </success>
        <attributes>[2.54, 0, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.397 1.397) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.397, 1.397]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 13 GND)\n</try>
        <success>\n    )\n    (model di</success>
        <attributes>[13, [G, N, D]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model discret/</success>
      <attributes>[2, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [2.54, 0, 270], [1.397, 1.397], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [13, [G, N, D]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model discret/</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model discret/</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model discret/</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model discret/capa_2</try>
      <foo>
        <try>(at (xyz 0 0 0))\n   </try>
        <bar>
          <try>at (xyz 0 0 0))\n    </try>
          <foo>
            <try>(xyz 0 0 0))\n      (</try>
            <bar>
              <try>xyz 0 0 0))\n      (s</try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 1</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 1</try>
        <bar>
          <try>scale (xyz 1 1 1))\n </try>
          <foo>
            <try>(xyz 1 1 1))\n      (</try>
            <bar>
              <try>xyz 1 1 1))\n      (r</try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 0 0 0))\n</try>
          <foo>
            <try>(xyz 0 0 0))\n    )\n </try>
            <bar>
              <try>xyz 0 0 0))\n    )\n  </try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module C2 (laye</success>
    <attributes>[[C, 2], [D, e, s, s, u, s], [144.78, 105.41, 270], [[[d, e, s, c, r], [C, o, n, d, e, n, s, a, t, e, u, r,  , =,  , 2,  , p, a, s]], [[t, a, g, s], [C]], [[p, a, t, h], [/, 4, D, 5, 2, 8, 0, 8, 6]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module C2 (laye</try>
    <at_pos_rot>
      <try>\n    (at 148.59 105.</try>
      <success>\n    (descr "Condens</success>
      <attributes>[148.59, 105.41, 270]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Condens</try>
      <quoted_string>
        <try>"Condensateur = 2 pa</try>
        <success>)\n    (tags C)\n    (</success>
        <attributes>[C, o, n, d, e, n, s, a, t, e, u, r,  , =,  , 2,  , p, a, s]</attributes>
      </quoted_string>
      <success>\n    (tags C)\n    (p</success>
      <attributes>[[d, e, s, c, r], [C, o, n, d, e, n, s, a, t, e, u, r,  , =,  , 2,  , p, a, s]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags C)\n    (p</try>
      <success>\n    (path /3EBF81A7</success>
      <attributes>[[t, a, g, s], [C]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /3EBF81A7</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[p, a, t, h], [/, 3, E, B, F, 8, 1, A, 7]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at 0 0 270) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 270]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.016 1.</try>
          <bar>
            <try>font (size 1.016 1.0</try>
            <foo>
              <try>(size 1.016 1.016) (</try>
              <bar>
                <try>size 1.016 1.016) (t</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [C, 4], [0, 0, 270], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 0 0 270) (layer</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, 0, 270]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.016 1.</try>
          <bar>
            <try>font (size 1.016 1.0</try>
            <foo>
              <try>(size 1.016 1.016) (</try>
              <bar>
                <try>size 1.016 1.016) (t</try>
                <foo>
                  <try>) (thickness 0.2032)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.2032)</success>
              </bar>
              <success> (thickness 0.2032))</success>
            </foo>
            <foo>
              <try> (thickness 0.2032))</try>
              <bar>
                <try>thickness 0.2032)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [1, 0, 0, p, F], [0, 0, 270], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-3.556, -1.016, 3.556, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[3.556, -1.016, 3.556, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[3.556, 1.016, -3.556, 1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-3.556, 1.016, -3.556, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 1 thru_hol</success>
      <attributes>[-3.556, -0.508, -3.048, -1.016, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 1 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -2.54 0 270) (si</try>
        <success> (size 1.397 1.397) </success>
        <attributes>[-2.54, 0, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.397 1.397) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.397, 1.397]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 22 N-000</try>
        <success>\n    )\n    (pad 2 th</success>
        <attributes>[22, [N, -, 0, 0, 0, 0, 3, 4]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 2 thru_hol</success>
      <attributes>[1, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [-2.54, 0, 270], [1.397, 1.397], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [22, [N, -, 0, 0, 0, 0, 3, 4]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 2 thru_hol</try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 thru_hole circle </try>
        <success> thru_hole circle (a</success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 2.54 0 270) (siz</try>
        <success> (size 1.397 1.397) </success>
        <attributes>[2.54, 0, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.397 1.397) </try>
        <success> (drill 0.8128)\n    </success>
        <attributes>[1.397, 1.397]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 13 GND)\n</try>
        <success>\n    )\n    (model di</success>
        <attributes>[13, [G, N, D]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model discret/</success>
      <attributes>[2, [[t, h, r, u, _, h, o, l, e], [c, i, r, c, l, e]], [2.54, 0, 270], [1.397, 1.397], 0.8128, [[*, ., C, u], [*, ., M, a, s, k], [D, e, s, s, u, s, ., S, i, l, k, S]], [13, [G, N, D]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model discret/</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model discret/</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model discret/</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model discret/capa_2</try>
      <foo>
        <try>(at (xyz 0 0 0))\n   </try>
        <bar>
          <try>at (xyz 0 0 0))\n    </try>
          <foo>
            <try>(xyz 0 0 0))\n      (</try>
            <bar>
              <try>xyz 0 0 0))\n      (s</try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 1</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 1</try>
        <bar>
          <try>scale (xyz 1 1 1))\n </try>
          <foo>
            <try>(xyz 1 1 1))\n      (</try>
            <bar>
              <try>xyz 1 1 1))\n      (r</try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 0 0 0))\n</try>
          <foo>
            <try>(xyz 0 0 0))\n    )\n </try>
            <bar>
              <try>xyz 0 0 0))\n    )\n  </try>
              <foo>
                <try>))\n    )\n  )\n\n  (mod</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (mod</success>
            </bar>
            <success>)\n    )\n  )\n\n  (modu</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (modu</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (modu</success>
        </bar>
        <success>\n    )\n  )\n\n  (modul</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (modul</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (modul</success>
    </bar>
    <success>\n\n  (module DB9M_CI_</success>
    <attributes>[[C, 2], [D, e, s, s, u, s], [148.59, 105.41, 270], [[[d, e, s, c, r], [C, o, n, d, e, n, s, a, t, e, u, r,  , =,  , 2,  , p, a, s]], [[t, a, g, s], [C]], [[p, a, t, h], [/, 3, E, B, F, 8, 1, A, 7]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (module DB9M_CI_</try>
    <at_pos_rot>
      <try>\n    (at 184.15 90.1</try>
      <success>\n    (descr "Connect</success>
      <attributes>[184.15, 90.17, 270]</attributes>
    </at_pos_rot>
    <comp_attrs>
      <try>\n    (descr "Connect</try>
      <quoted_string>
        <try>"Connecteur DB9 feme</try>
        <success>)\n    (tags "CONN DB</success>
        <attributes>[C, o, n, n, e, c, t, e, u, r,  , D, B, 9,  , f, e, m, e, l, l, e,  , e, n, c, a, r, t, e]</attributes>
      </quoted_string>
      <success>\n    (tags "CONN DB9</success>
      <attributes>[[d, e, s, c, r], [C, o, n, n, e, c, t, e, u, r,  , D, B, 9,  , f, e, m, e, l, l, e,  , e, n, c, a, r, t, e]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (tags "CONN DB9</try>
      <quoted_string>
        <try>"CONN DB9")\n    (pat</try>
        <success>)\n    (path /3ECDE5C</success>
        <attributes>[C, O, N, N,  , D, B, 9]</attributes>
      </quoted_string>
      <success>\n    (path /3ECDE5C8</success>
      <attributes>[[t, a, g, s], [C, O, N, N,  , D, B, 9]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (path /3ECDE5C8</try>
      <success>\n    (fp_text refere</success>
      <attributes>[[p, a, t, h], [/, 3, E, C, D, E, 5, C, 8]]</attributes>
    </comp_attrs>
    <comp_attrs>
      <try>\n    (fp_text refere</try>
      <fail/>
    </comp_attrs>
    <KiPad>
      <try>\n    (fp_text refere</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text refere</try>
      <at_pos_rot>
        <try> (at 0 -9.144 270) (</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, -9.144, 270]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.524 1.</try>
          <bar>
            <try>font (size 1.524 1.5</try>
            <foo>
              <try>(size 1.524 1.524) (</try>
              <bar>
                <try>size 1.524 1.524) (t</try>
                <foo>
                  <try>) (thickness 0.3048)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.3048)</success>
              </bar>
              <success> (thickness 0.3048))</success>
            </foo>
            <foo>
              <try> (thickness 0.3048))</try>
              <bar>
                <try>thickness 0.3048)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_te</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_te</success>
              </bar>
              <success>))\n    )\n    (fp_tex</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_tex</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_tex</success>
          </bar>
          <success>)\n    )\n    (fp_text</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_text</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_text</success>
      </bar>
      <success>\n    (fp_text value </success>
      <attributes>[[r, e, f, e, r, e, n, c, e], [J, 2], [0, -9.144, 270], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_text value </try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_text value </try>
      <at_pos_rot>
        <try> (at 0 -3.048 270) (</try>
        <success> (layer Dessus.SilkS</success>
        <attributes>[0, -3.048, 270]</attributes>
      </at_pos_rot>
      <bar>
        <try>effects (font (size </try>
        <foo>
          <try>(font (size 1.524 1.</try>
          <bar>
            <try>font (size 1.524 1.5</try>
            <foo>
              <try>(size 1.524 1.524) (</try>
              <bar>
                <try>size 1.524 1.524) (t</try>
                <foo>
                  <try>) (thickness 0.3048)</try>
                  <fail/>
                </foo>
                <success>) (thickness 0.3048)</success>
              </bar>
              <success> (thickness 0.3048))</success>
            </foo>
            <foo>
              <try> (thickness 0.3048))</try>
              <bar>
                <try>thickness 0.3048)))\n</try>
                <foo>
                  <try>)))\n    )\n    (fp_li</try>
                  <fail/>
                </foo>
                <success>)))\n    )\n    (fp_li</success>
              </bar>
              <success>))\n    )\n    (fp_lin</success>
            </foo>
            <foo>
              <try>))\n    )\n    (fp_lin</try>
              <fail/>
            </foo>
            <success>))\n    )\n    (fp_lin</success>
          </bar>
          <success>)\n    )\n    (fp_line</success>
        </foo>
        <foo>
          <try>)\n    )\n    (fp_line</try>
          <fail/>
        </foo>
        <success>)\n    )\n    (fp_line</success>
      </bar>
      <success>\n    (fp_line (start</success>
      <attributes>[[v, a, l, u, e], [D, B, 9, M, A, L, E], [0, -3.048, 270], [D, e, s, s, u, s, ., S, i, l, k, S]]</attributes>
    </comp_text>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-8.509, -12.065, 8.636, -12.065, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[9.271, -1.27, -9.144, -1.27, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[9.906, -1.27, 9.271, -1.27, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[9.906, -4.445, -9.779, -4.445, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[15.621, -4.445, 9.906, -4.445, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-15.494, -5.715, 15.621, -5.715, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[8.636, -5.715, 8.636, -12.065, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[15.621, -4.445, 15.621, -5.715, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[9.906, -1.27, 9.906, -4.445, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[7.366, 0, 9.271, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[9.271, 0, 9.271, -1.27, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-8.509, -5.715, -8.509, -12.065, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-9.779, -4.445, -15.494, -4.445, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-15.494, -4.445, -15.494, -5.715, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-9.144, -1.27, -9.779, -1.27, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-9.779, -1.27, -9.779, -4.445, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (fp_line (start</success>
      <attributes>[-7.239, 0, -9.144, 0, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (fp_line (start</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (fp_line (start</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (fp_line (start</try>
      <success>\n    (pad 4 connect </success>
      <attributes>[-9.144, 0, -9.144, -1.27, [D, e, s, s, u, s, ., S, i, l, k, S], 0.3048]</attributes>
    </fp_line>
    <KiPad>
      <try>\n    (pad 4 connect </try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 4 connect rect (at </try>
        <success> connect rect (at 2.</success>
        <attributes>4</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 2.794 2.54 270) </try>
        <success> (size 1.778 5.08)\n </success>
        <attributes>[2.794, 2.54, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.778 5.08)\n </try>
        <success>\n      (layers Desso</success>
        <attributes>[1.778, 5.08]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 5 /TCK-C</try>
        <success>\n    )\n    (pad 3 co</success>
        <attributes>[5, [/, T, C, K, -, C, C, L, K]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 3 connect </success>
      <attributes>[4, [[c, o, n, n, e, c, t], [r, e, c, t]], [2.794, 2.54, 270], [1.778, 5.08], 0, [[D, e, s, s, o, u, s], [D, e, s, s, o, u, s, ., M, a, s, q, u, e]], [5, [/, T, C, K, -, C, C, L, K]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 3 connect </try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 3 connect rect (at </try>
        <success> connect rect (at 0 </success>
        <attributes>3</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 0 2.54 270) (siz</try>
        <success> (size 1.778 5.08)\n </success>
        <attributes>[0, 2.54, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.778 5.08)\n </try>
        <success>\n      (layers Desso</success>
        <attributes>[1.778, 5.08]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 8 /TDI-D</try>
        <success>\n    )\n    (pad 2 co</success>
        <attributes>[8, [/, T, D, I, -, D, I, N]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 2 connect </success>
      <attributes>[3, [[c, o, n, n, e, c, t], [r, e, c, t]], [0, 2.54, 270], [1.778, 5.08], 0, [[D, e, s, s, o, u, s], [D, e, s, s, o, u, s, ., S, i, l, k, S]], [8, [/, T, D, I, -, D, I, N]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 2 connect </try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 2 connect rect (at </try>
        <success> connect rect (at -2</success>
        <attributes>2</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -2.794 2.54 270)</try>
        <success> (size 1.778 5.08)\n </success>
        <attributes>[-2.794, 2.54, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.778 5.08)\n </try>
        <success>\n      (layers Desso</success>
        <attributes>[1.778, 5.08]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 6 /TD0-D</try>
        <success>\n    )\n    (pad 1 co</success>
        <attributes>[6, [/, T, D, 0, -, D, O, N, E]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 1 connect </success>
      <attributes>[2, [[c, o, n, n, e, c, t], [r, e, c, t]], [-2.794, 2.54, 270], [1.778, 5.08], 0, [[D, e, s, s, o, u, s], [D, e, s, s, o, u, s, ., M, a, s, q, u, e]], [6, [/, T, D, 0, -, D, O, N, E]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 1 connect </try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 1 connect rect (at </try>
        <success> connect rect (at -5</success>
        <attributes>1</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -5.588 2.54 270)</try>
        <success> (size 1.778 5.08)\n </success>
        <attributes>[-5.588, 2.54, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.778 5.08)\n </try>
        <success>\n      (layers Desso</success>
        <attributes>[1.778, 5.08]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 4 /PWR_3</try>
        <success>\n    )\n    (pad 5 co</success>
        <attributes>[4, [/, P, W, R, _, 3, ,, 3, -, 5, V]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 5 connect </success>
      <attributes>[1, [[c, o, n, n, e, c, t], [r, e, c, t]], [-5.588, 2.54, 270], [1.778, 5.08], 0, [[D, e, s, s, o, u, s], [D, e, s, s, u, s, ., M, a, s, q, u, e]], [4, [/, P, W, R, _, 3, ,, 3, -, 5, V]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 5 connect </try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 5 connect rect (at </try>
        <success> connect rect (at 5.</success>
        <attributes>5</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 5.588 2.54 270) </try>
        <success> (size 1.778 5.08)\n </success>
        <attributes>[5.588, 2.54, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.778 5.08)\n </try>
        <success>\n      (layers Desso</success>
        <attributes>[1.778, 5.08]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 10 /TMS-</try>
        <success>\n    )\n    (pad 6 co</success>
        <attributes>[10, [/, T, M, S, -, P, R, O, G]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 6 connect </success>
      <attributes>[5, [[c, o, n, n, e, c, t], [r, e, c, t]], [5.588, 2.54, 270], [1.778, 5.08], 0, [[D, e, s, s, o, u, s], [D, e, s, s, o, u, s, ., M, a, s, q, u, e]], [10, [/, T, M, S, -, P, R, O, G]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 6 connect </try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 6 connect rect (at </try>
        <success> connect rect (at -4</success>
        <attributes>6</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -4.191 2.54 270)</try>
        <success> (size 1.778 5.08)\n </success>
        <attributes>[-4.191, 2.54, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.778 5.08)\n </try>
        <success>\n      (layers Dessu</success>
        <attributes>[1.778, 5.08]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 13 GND)\n</try>
        <success>\n    )\n    (pad 7 co</success>
        <attributes>[13, [G, N, D]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 7 connect </success>
      <attributes>[6, [[c, o, n, n, e, c, t], [r, e, c, t]], [-4.191, 2.54, 270], [1.778, 5.08], 0, [[D, e, s, s, u, s], [D, e, s, s, u, s, ., M, a, s, q, u, e]], [13, [G, N, D]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 7 connect </try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 7 connect rect (at </try>
        <success> connect rect (at -1</success>
        <attributes>7</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at -1.397 2.54 270)</try>
        <success> (size 1.778 5.08)\n </success>
        <attributes>[-1.397, 2.54, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.778 5.08)\n </try>
        <success>\n      (layers Dessu</success>
        <attributes>[1.778, 5.08]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 13 GND)\n</try>
        <success>\n    )\n    (pad 8 co</success>
        <attributes>[13, [G, N, D]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 8 connect </success>
      <attributes>[7, [[c, o, n, n, e, c, t], [r, e, c, t]], [-1.397, 2.54, 270], [1.778, 5.08], 0, [[D, e, s, s, u, s], [D, e, s, s, u, s, ., M, a, s, q, u, e]], [13, [G, N, D]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 8 connect </try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 8 connect rect (at </try>
        <success> connect rect (at 1.</success>
        <attributes>8</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 1.397 2.54 270) </try>
        <success> (size 1.778 5.08)\n </success>
        <attributes>[1.397, 2.54, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.778 5.08)\n </try>
        <success>\n      (layers Dessu</success>
        <attributes>[1.778, 5.08]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 13 GND)\n</try>
        <success>\n    )\n    (pad 9 co</success>
        <attributes>[13, [G, N, D]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (pad 9 connect </success>
      <attributes>[8, [[c, o, n, n, e, c, t], [r, e, c, t]], [1.397, 2.54, 270], [1.778, 5.08], 0, [[D, e, s, s, u, s], [D, e, s, s, u, s, ., M, a, s, q, u, e]], [13, [G, N, D]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (pad 9 connect </try>
      <struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
        <try> 9 connect rect (at </try>
        <success> connect rect (at 4.</success>
        <attributes>9</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::_,int,0>>
      <at_pos_rot>
        <try>(at 4.191 2.54 270) </try>
        <success> (size 1.778 5.08)\n </success>
        <attributes>[4.191, 2.54, 270]</attributes>
      </at_pos_rot>
      <size>
        <try> (size 1.778 5.08)\n </try>
        <success>\n      (layers Dessu</success>
        <attributes>[1.778, 5.08]</attributes>
      </size>
      <struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
        <try>\n      (net 13 GND)\n</try>
        <success>\n    )\n    (model co</success>
        <attributes>[13, [G, N, D]]</attributes>
      </struct boost::spirit::x3::rule<struct Bridge::net_def,struct std::pair<int,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >,0>>
      <success>\n    (model conn_DBx</success>
      <attributes>[9, [[c, o, n, n, e, c, t], [r, e, c, t]], [4.191, 2.54, 270], [1.778, 5.08], 0, [[D, e, s, s, u, s], [D, e, s, s, u, s, ., M, a, s, q, u, e]], [13, [G, N, D]]]</attributes>
    </KiPad>
    <KiPad>
      <try>\n    (model conn_DBx</try>
      <fail/>
    </KiPad>
    <comp_text>
      <try>\n    (model conn_DBx</try>
      <fail/>
    </comp_text>
    <fp_line>
      <try>\n    (model conn_DBx</try>
      <fail/>
    </fp_line>
    <bar>
      <try>model conn_DBxx/db9_</try>
      <foo>
        <try>(at (xyz 0 0 -0.033)</try>
        <bar>
          <try>at (xyz 0 0 -0.033))</try>
          <foo>
            <try>(xyz 0 0 -0.033))\n  </try>
            <bar>
              <try>xyz 0 0 -0.033))\n   </try>
              <foo>
                <try>))\n      (scale (xyz</try>
                <fail/>
              </foo>
              <success>))\n      (scale (xyz</success>
            </bar>
            <success>)\n      (scale (xyz </success>
          </foo>
          <foo>
            <try>)\n      (scale (xyz </try>
            <fail/>
          </foo>
          <success>)\n      (scale (xyz </success>
        </bar>
        <success>\n      (scale (xyz 1</success>
      </foo>
      <foo>
        <try>\n      (scale (xyz 1</try>
        <bar>
          <try>scale (xyz 1 1 1))\n </try>
          <foo>
            <try>(xyz 1 1 1))\n      (</try>
            <bar>
              <try>xyz 1 1 1))\n      (r</try>
              <foo>
                <try>))\n      (rotate (xy</try>
                <fail/>
              </foo>
              <success>))\n      (rotate (xy</success>
            </bar>
            <success>)\n      (rotate (xyz</success>
          </foo>
          <foo>
            <try>)\n      (rotate (xyz</try>
            <fail/>
          </foo>
          <success>)\n      (rotate (xyz</success>
        </bar>
        <success>\n      (rotate (xyz </success>
      </foo>
      <foo>
        <try>\n      (rotate (xyz </try>
        <bar>
          <try>rotate (xyz 90 0 0))</try>
          <foo>
            <try>(xyz 90 0 0))\n    )\n</try>
            <bar>
              <try>xyz 90 0 0))\n    )\n </try>
              <foo>
                <try>))\n    )\n  )\n\n  (dim</try>
                <fail/>
              </foo>
              <success>))\n    )\n  )\n\n  (dim</success>
            </bar>
            <success>)\n    )\n  )\n\n  (dime</success>
          </foo>
          <foo>
            <try>)\n    )\n  )\n\n  (dime</try>
            <fail/>
          </foo>
          <success>)\n    )\n  )\n\n  (dime</success>
        </bar>
        <success>\n    )\n  )\n\n  (dimen</success>
      </foo>
      <foo>
        <try>\n    )\n  )\n\n  (dimen</try>
        <fail/>
      </foo>
      <success>\n    )\n  )\n\n  (dimen</success>
    </bar>
    <success>\n\n  (dimension 81.28</success>
    <attributes>[[D, B, 9, M, _, C, I, _, I, N, V, E, R, T], [D, e, s, s, u, s], [184.15, 90.17, 270], [[[d, e, s, c, r], [C, o, n, n, e, c, t, e, u, r,  , D, B, 9,  , f, e, m, e, l, l, e,  , e, n, c, a, r, t, e]], [[t, a, g, s], [C, O, N, N,  , D, B, 9]], [[p, a, t, h], [/, 3, E, C, D, E, 5, C, 8]]], ]</attributes>
  </component>
  <component>
    <try>\n\n  (dimension 81.28</try>
    <fail/>
  </component>
  <segment>
    <try>\n\n  (dimension 81.28</try>
    <fail/>
  </segment>
  <gr_text>
    <try>\n\n  (dimension 81.28</try>
    <fail/>
  </gr_text>
  <gr_line>
    <try>\n\n  (dimension 81.28</try>
    <fail/>
  </gr_line>
  <zone>
    <try>\n\n  (dimension 81.28</try>
    <fail/>
  </zone>
  <unused>
    <try>\n\n  (dimension 81.28</try>
    <bar>
      <try> (width 0.3048) (lay</try>
      <foo>
        <try>(width 0.3048) (laye</try>
        <bar>
          <try>width 0.3048) (layer</try>
          <foo>
            <try>) (layer Dessin.User</try>
            <fail/>
          </foo>
          <success>) (layer Dessin.User</success>
        </bar>
        <success> (layer Dessin.User)</success>
      </foo>
      <foo>
        <try> (layer Dessin.User)</try>
        <bar>
          <try>layer Dessin.User)\n </try>
          <foo>
            <try>)\n    (gr_text "3.20</try>
            <fail/>
          </foo>
          <success>)\n    (gr_text "3.20</success>
        </bar>
        <success>\n    (gr_text "3.200</success>
      </foo>
      <foo>
        <try>\n    (gr_text "3.200</try>
        <bar>
          <try>gr_text "3.2000 " (a</try>
          <foo>
            <try>(at 143.256 114.173)</try>
            <bar>
              <try>at 143.256 114.173) </try>
              <foo>
                <try>) (layer Dessin.User</try>
                <fail/>
              </foo>
              <success>) (layer Dessin.User</success>
            </bar>
            <success> (layer Dessin.User)</success>
          </foo>
          <foo>
            <try> (layer Dessin.User)</try>
            <bar>
              <try>layer Dessin.User)\n </try>
              <foo>
                <try>)\n      (effects (fo</try>
                <fail/>
              </foo>
              <success>)\n      (effects (fo</success>
            </bar>
            <success>\n      (effects (fon</success>
          </foo>
          <foo>
            <try>\n      (effects (fon</try>
            <bar>
              <try>effects (font (size </try>
              <foo>
                <try>(font (size 1.524 1.</try>
                <bar>
                  <try>font (size 1.524 1.5</try>
                  <foo>
                    <try>(size 1.524 1.524) (</try>
                    <bar>
                      <try>size 1.524 1.524) (t</try>
                      <foo>
                        <try>) (thickness 0.3048)</try>
                        <fail/>
                      </foo>
                      <success>) (thickness 0.3048)</success>
                    </bar>
                    <success> (thickness 0.3048))</success>
                  </foo>
                  <foo>
                    <try> (thickness 0.3048))</try>
                    <bar>
                      <try>thickness 0.3048)))\n</try>
                      <foo>
                        <try>)))\n    )\n    (featu</try>
                        <fail/>
                      </foo>
                      <success>)))\n    )\n    (featu</success>
                    </bar>
                    <success>))\n    )\n    (featur</success>
                  </foo>
                  <foo>
                    <try>))\n    )\n    (featur</try>
                    <fail/>
                  </foo>
                  <success>))\n    )\n    (featur</success>
                </bar>
                <success>)\n    )\n    (feature</success>
              </foo>
              <foo>
                <try>)\n    )\n    (feature</try>
                <fail/>
              </foo>
              <success>)\n    )\n    (feature</success>
            </bar>
            <success>\n    )\n    (feature1</success>
          </foo>
          <foo>
            <try>\n    )\n    (feature1</try>
            <fail/>
          </foo>
          <success>\n    )\n    (feature1</success>
        </bar>
        <success>\n    (feature1 (pts </success>
      </foo>
      <foo>
        <try>\n    (feature1 (pts </try>
        <bar>
          <try>feature1 (pts (xy 18</try>
          <foo>
            <try>(pts (xy 184.15 110.</try>
            <bar>
              <try>pts (xy 184.15 110.4</try>
              <foo>
                <try>(xy 184.15 110.49) (</try>
                <bar>
                  <try>xy 184.15 110.49) (x</try>
                  <foo>
                    <try>) (xy 184.15 118.313</try>
                    <fail/>
                  </foo>
                  <success>) (xy 184.15 118.313</success>
                </bar>
                <success> (xy 184.15 118.3132</success>
              </foo>
              <foo>
                <try> (xy 184.15 118.3132</try>
                <bar>
                  <try>xy 184.15 118.3132))</try>
                  <foo>
                    <try>)))\n    (feature2 (p</try>
                    <fail/>
                  </foo>
                  <success>)))\n    (feature2 (p</success>
                </bar>
                <success>))\n    (feature2 (pt</success>
              </foo>
              <foo>
                <try>))\n    (feature2 (pt</try>
                <fail/>
              </foo>
              <success>))\n    (feature2 (pt</success>
            </bar>
            <success>)\n    (feature2 (pts</success>
          </foo>
          <foo>
            <try>)\n    (feature2 (pts</try>
            <fail/>
          </foo>
          <success>)\n    (feature2 (pts</success>
        </bar>
        <success>\n    (feature2 (pts </success>
      </foo>
      <foo>
        <try>\n    (feature2 (pts </try>
        <bar>
          <try>feature2 (pts (xy 10</try>
          <foo>
            <try>(pts (xy 102.87 110.</try>
            <bar>
              <try>pts (xy 102.87 110.4</try>
              <foo>
                <try>(xy 102.87 110.49) (</try>
                <bar>
                  <try>xy 102.87 110.49) (x</try>
                  <foo>
                    <try>) (xy 102.87 118.313</try>
                    <fail/>
                  </foo>
                  <success>) (xy 102.87 118.313</success>
                </bar>
                <success> (xy 102.87 118.3132</success>
              </foo>
              <foo>
                <try> (xy 102.87 118.3132</try>
                <bar>
                  <try>xy 102.87 118.3132))</try>
                  <foo>
                    <try>)))\n    (crossbar (p</try>
                    <fail/>
                  </foo>
                  <success>)))\n    (crossbar (p</success>
                </bar>
                <success>))\n    (crossbar (pt</success>
              </foo>
              <foo>
                <try>))\n    (crossbar (pt</try>
                <fail/>
              </foo>
              <success>))\n    (crossbar (pt</success>
            </bar>
            <success>)\n    (crossbar (pts</success>
          </foo>
          <foo>
            <try>)\n    (crossbar (pts</try>
            <fail/>
          </foo>
          <success>)\n    (crossbar (pts</success>
        </bar>
        <success>\n    (crossbar (pts </success>
      </foo>
      <foo>
        <try>\n    (crossbar (pts </try>
        <bar>
          <try>crossbar (pts (xy 10</try>
          <foo>
            <try>(pts (xy 102.87 115.</try>
            <bar>
              <try>pts (xy 102.87 115.5</try>
              <foo>
                <try>(xy 102.87 115.57) (</try>
                <bar>
                  <try>xy 102.87 115.57) (x</try>
                  <foo>
                    <try>) (xy 184.15 115.57)</try>
                    <fail/>
                  </foo>
                  <success>) (xy 184.15 115.57)</success>
                </bar>
                <success> (xy 184.15 115.57))</success>
              </foo>
              <foo>
                <try> (xy 184.15 115.57))</try>
                <bar>
                  <try>xy 184.15 115.57)))\n</try>
                  <foo>
                    <try>)))\n    (arrow1a (pt</try>
                    <fail/>
                  </foo>
                  <success>)))\n    (arrow1a (pt</success>
                </bar>
                <success>))\n    (arrow1a (pts</success>
              </foo>
              <foo>
                <try>))\n    (arrow1a (pts</try>
                <fail/>
              </foo>
              <success>))\n    (arrow1a (pts</success>
            </bar>
            <success>)\n    (arrow1a (pts </success>
          </foo>
          <foo>
            <try>)\n    (arrow1a (pts </try>
            <fail/>
          </foo>
          <success>)\n    (arrow1a (pts </success>
        </bar>
        <success>\n    (arrow1a (pts (</success>
      </foo>
      <foo>
        <try>\n    (arrow1a (pts (</try>
        <bar>
          <try>arrow1a (pts (xy 184</try>
          <foo>
            <try>(pts (xy 184.15 115.</try>
            <bar>
              <try>pts (xy 184.15 115.5</try>
              <foo>
                <try>(xy 184.15 115.57) (</try>
                <bar>
                  <try>xy 184.15 115.57) (x</try>
                  <foo>
                    <try>) (xy 183.02478 116.</try>
                    <fail/>
                  </foo>
                  <success>) (xy 183.02478 116.</success>
                </bar>
                <success> (xy 183.02478 116.1</success>
              </foo>
              <foo>
                <try> (xy 183.02478 116.1</try>
                <bar>
                  <try>xy 183.02478 116.154</try>
                  <foo>
                    <try>)))\n    (arrow1b (pt</try>
                    <fail/>
                  </foo>
                  <success>)))\n    (arrow1b (pt</success>
                </bar>
                <success>))\n    (arrow1b (pts</success>
              </foo>
              <foo>
                <try>))\n    (arrow1b (pts</try>
                <fail/>
              </foo>
              <success>))\n    (arrow1b (pts</success>
            </bar>
            <success>)\n    (arrow1b (pts </success>
          </foo>
          <foo>
            <try>)\n    (arrow1b (pts </try>
            <fail/>
          </foo>
          <success>)\n    (arrow1b (pts </success>
        </bar>
        <success>\n    (arrow1b (pts (</success>
      </foo>
      <foo>
        <try>\n    (arrow1b (pts (</try>
        <bar>
          <try>arrow1b (pts (xy 184</try>
          <foo>
            <try>(pts (xy 184.15 115.</try>
            <bar>
              <try>pts (xy 184.15 115.5</try>
              <foo>
                <try>(xy 184.15 115.57) (</try>
                <bar>
                  <try>xy 184.15 115.57) (x</try>
                  <foo>
                    <try>) (xy 183.02478 114.</try>
                    <fail/>
                  </foo>
                  <success>) (xy 183.02478 114.</success>
                </bar>
                <success> (xy 183.02478 114.9</success>
              </foo>
              <foo>
                <try> (xy 183.02478 114.9</try>
                <bar>
                  <try>xy 183.02478 114.985</try>
                  <foo>
                    <try>)))\n    (arrow2a (pt</try>
                    <fail/>
                  </foo>
                  <success>)))\n    (arrow2a (pt</success>
                </bar>
                <success>))\n    (arrow2a (pts</success>
              </foo>
              <foo>
                <try>))\n    (arrow2a (pts</try>
                <fail/>
              </foo>
              <success>))\n    (arrow2a (pts</success>
            </bar>
            <success>)\n    (arrow2a (pts </success>
          </foo>
          <foo>
            <try>)\n    (arrow2a (pts </try>
            <fail/>
          </foo>
          <success>)\n    (arrow2a (pts </success>
        </bar>
        <success>\n    (arrow2a (pts (</success>
      </foo>
      <foo>
        <try>\n    (arrow2a (pts (</try>
        <bar>
          <try>arrow2a (pts (xy 102</try>
          <foo>
            <try>(pts (xy 102.87 115.</try>
            <bar>
              <try>pts (xy 102.87 115.5</try>
              <foo>
                <try>(xy 102.87 115.57) (</try>
                <bar>
                  <try>xy 102.87 115.57) (x</try>
                  <foo>
                    <try>) (xy 103.99522 116.</try>
                    <fail/>
                  </foo>
                  <success>) (xy 103.99522 116.</success>
                </bar>
                <success> (xy 103.99522 116.1</success>
              </foo>
              <foo>
                <try> (xy 103.99522 116.1</try>
                <bar>
                  <try>xy 103.99522 116.154</try>
                  <foo>
                    <try>)))\n    (arrow2b (pt</try>
                    <fail/>
                  </foo>
                  <success>)))\n    (arrow2b (pt</success>
                </bar>
                <success>))\n    (arrow2b (pts</success>
              </foo>
              <foo>
                <try>))\n    (arrow2b (pts</try>
                <fail/>
              </foo>
              <success>))\n    (arrow2b (pts</success>
            </bar>
            <success>)\n    (arrow2b (pts </success>
          </foo>
          <foo>
            <try>)\n    (arrow2b (pts </try>
            <fail/>
          </foo>
          <success>)\n    (arrow2b (pts </success>
        </bar>
        <success>\n    (arrow2b (pts (</success>
      </foo>
      <foo>
        <try>\n    (arrow2b (pts (</try>
        <bar>
          <try>arrow2b (pts (xy 102</try>
          <foo>
            <try>(pts (xy 102.87 115.</try>
            <bar>
              <try>pts (xy 102.87 115.5</try>
              <foo>
                <try>(xy 102.87 115.57) (</try>
                <bar>
                  <try>xy 102.87 115.57) (x</try>
                  <foo>
                    <try>) (xy 103.99522 114.</try>
                    <fail/>
                  </foo>
                  <success>) (xy 103.99522 114.</success>
                </bar>
                <success> (xy 103.99522 114.9</success>
              </foo>
              <foo>
                <try> (xy 103.99522 114.9</try>
                <bar>
                  <try>xy 103.99522 114.985</try>
                  <foo>
                    <try>)))\n  )\n  (gr_line (</try>
                    <fail/>
                  </foo>
                  <success>)))\n  )\n  (gr_line (</success>
                </bar>
                <success>))\n  )\n  (gr_line (s</success>
              </foo>
              <foo>
                <try>))\n  )\n  (gr_line (s</try>
                <fail/>
              </foo>
              <success>))\n  )\n  (gr_line (s</success>
            </bar>
            <success>)\n  )\n  (gr_line (st</success>
          </foo>
          <foo>
            <try>)\n  )\n  (gr_line (st</try>
            <fail/>
          </foo>
          <success>)\n  )\n  (gr_line (st</success>
        </bar>
        <success>\n  )\n  (gr_line (sta</success>
      </foo>
      <foo>
        <try>\n  )\n  (gr_line (sta</try>
        <fail/>
      </foo>
      <success>\n  )\n  (gr_line (sta</success>
    </bar>
    <success>\n  (gr_line (start 1</success>
  </unused>
  <segment>
    <try>\n  (gr_line (start 1</try>
    <fail/>
  </segment>
  <gr_text>
    <try>\n  (gr_line (start 1</try>
    <fail/>
  </gr_text>
  <gr_line>
    <try>\n  (gr_line (start 1</try>
    <success>\n  (gr_line (start 1</success>
    <attributes>[184.15, 110.49, 179.07, 110.49, 90, [C, o, n, t, o, u, r, s, ., C, i], 0.3048]</attributes>
  </gr_line>
  <segment>
    <try>\n  (gr_line (start 1</try>
    <fail/>
  </segment>
  <gr_text>
    <try>\n  (gr_line (start 1</try>
    <fail/>
  </gr_text>
  <gr_line>
    <try>\n  (gr_line (start 1</try>
    <success>\n  (gr_line (start 1</success>
    <attributes>[184.15, 97.79, 184.15, 110.49, 90, [C, o, n, t, o, u, r, s, ., C, i], 0.3048]</attributes>
  </gr_line>
  <segment>
    <try>\n  (gr_line (start 1</try>
    <fail/>
  </segment>
  <gr_text>
    <try>\n  (gr_line (start 1</try>
    <fail/>
  </gr_text>
  <gr_line>
    <try>\n  (gr_line (start 1</try>
    <success>\n  (gr_line (start 1</success>
    <attributes>[184.15, 67.31, 184.15, 83.185, 90, [C, o, n, t, o, u, r, s, ., C, i], 0.3048]</attributes>
  </gr_line>
  <segment>
    <try>\n  (gr_line (start 1</try>
    <fail/>
  </segment>
  <gr_text>
    <try>\n  (gr_line (start 1</try>
    <fail/>
  </gr_text>
  <gr_line>
    <try>\n  (gr_line (start 1</try>
    <success>\n  (gr_text TMS-PROG</success>
    <attributes>[179.07, 67.31, 184.15, 67.31, 90, [C, o, n, t, o, u, r, s, ., C, i], 0.3048]</attributes>
  </gr_line>
  <segment>
    <try>\n  (gr_text TMS-PROG</try>
    <fail/>
  </segment>
  <gr_text>
    <try>\n  (gr_text TMS-PROG</try>
    <at_pos_rot>
      <try> (at 158.115 102.235</try>
      <success> (layer Dessus)\n    </success>
      <attributes>[158.115, 102.235, 0]</attributes>
    </at_pos_rot>
    <size>
      <try> (size 1.524 1.524) </try>
      <success> (thickness 0.381)))</success>
      <attributes>[1.524, 1.524]</attributes>
    </size>
    <success>\n  (gr_text TCK-CCL </success>
    <attributes>[[T, M, S, -, P, R, O, G], [158.115, 102.235, 0], [D, e, s, s, u, s], [1.524, 1.524], 0.381, 0]</attributes>
  </gr_text>
  <segment>
    <try>\n  (gr_text TCK-CCL </try>
    <fail/>
  </segment>
  <gr_text>
    <try>\n  (gr_text TCK-CCL </try>
    <at_pos_rot>
      <try> (at 158.115 96.52) </try>
      <success> (layer Dessus)\n    </success>
      <attributes>[158.115, 96.52, 0]</attributes>
    </at_pos_rot>
    <size>
      <try> (size 1.524 1.524) </try>
      <success> (thickness 0.381)))</success>
      <attributes>[1.524, 1.524]</attributes>
    </size>
    <success>\n  (gr_text TDI-TIN </success>
    <attributes>[[T, C, K, -, C, C, L], [158.115, 96.52, 0], [D, e, s, s, u, s], [1.524, 1.524], 0.381, 0]</attributes>
  </gr_text>
  <segment>
    <try>\n  (gr_text TDI-TIN </try>
    <fail/>
  </segment>
  <gr_text>
    <try>\n  (gr_text TDI-TIN </try>
    <at_pos_rot>
      <try> (at 158.115 91.44) </try>
      <success> (layer Dessus)\n    </success>
      <attributes>[158.115, 91.44, 0]</attributes>
    </at_pos_rot>
    <size>
      <try> (size 1.524 1.524) </try>
      <success> (thickness 0.381)))</success>
      <attributes>[1.524, 1.524]</attributes>
    </size>
    <success>\n  (gr_text TDO-DONE</success>
    <attributes>[[T, D, I, -, T, I, N], [158.115, 91.44, 0], [D, e, s, s, u, s], [1.524, 1.524], 0.381, 0]</attributes>
  </gr_text>
  <segment>
    <try>\n  (gr_text TDO-DONE</try>
    <fail/>
  </segment>
  <gr_text>
    <try>\n  (gr_text TDO-DONE</try>
    <at_pos_rot>
      <try> (at 158.115 86.36) </try>
      <success> (layer Dessus)\n    </success>
      <attributes>[158.115, 86.36, 0]</attributes>
    </at_pos_rot>
    <size>
      <try> (size 1.524 1.524) </try>
      <success> (thickness 0.381)))</success>
      <attributes>[1.524, 1.524]</attributes>
    </size>
    <success>\n  (gr_text VCC (at </success>
    <attributes>[[T, D, O, -, D, O, N, E], [158.115, 86.36, 0], [D, e, s, s, u, s], [1.524, 1.524], 0.381, 0]</attributes>
  </gr_text>
  <segment>
    <try>\n  (gr_text VCC (at </try>
    <fail/>
  </segment>
  <gr_text>
    <try>\n  (gr_text VCC (at </try>
    <at_pos_rot>
      <try> (at 162.56 76.2) (l</try>
      <success> (layer Dessus)\n    </success>
      <attributes>[162.56, 76.2, 0]</attributes>
    </at_pos_rot>
    <size>
      <try> (size 1.524 1.524) </try>
      <success> (thickness 0.381)))</success>
      <attributes>[1.524, 1.524]</attributes>
    </size>
    <success>\n  (gr_text GND (at </success>
    <attributes>[[V, C, C], [162.56, 76.2, 0], [D, e, s, s, u, s], [1.524, 1.524], 0.381, 0]</attributes>
  </gr_text>
  <segment>
    <try>\n  (gr_text GND (at </try>
    <fail/>
  </segment>
  <gr_text>
    <try>\n  (gr_text GND (at </try>
    <at_pos_rot>
      <try> (at 162.56 81.28) (</try>
      <success> (layer Dessus)\n    </success>
      <attributes>[162.56, 81.28, 0]</attributes>
    </at_pos_rot>
    <size>
      <try> (size 1.524 1.524) </try>
      <success> (thickness 0.381)))</success>
      <attributes>[1.524, 1.524]</attributes>
    </size>
    <success>\n  (gr_text "Compone</success>
    <attributes>[[G, N, D], [162.56, 81.28, 0], [D, e, s, s, u, s], [1.524, 1.524], 0.381, 0]</attributes>
  </gr_text>
  <segment>
    <try>\n  (gr_text "Compone</try>
    <fail/>
  </segment>
  <gr_text>
    <try>\n  (gr_text "Compone</try>
    <quoted_string>
      <try>"Component Side" (at</try>
      <success> (at 121.92 69.85) (</success>
      <attributes>[C, o, m, p, o, n, e, n, t,  , S, i, d, e]</attributes>
    </quoted_string>
    <at_pos_rot>
      <try> (at 121.92 69.85) (</try>
      <success> (layer Dessus)\n    </success>
      <attributes>[121.92, 69.85, 0]</attributes>
    </at_pos_rot>
    <size>
      <try> (size 1.524 1.524) </try>
      <success> (thickness 0.3048))</success>
      <attributes>[1.524, 1.524]</attributes>
    </size>
    <success>\n  (gr_text "Copper </success>
    <attributes>[[C, o, m, p, o, n, e, n, t,  , S, i, d, e], [121.92, 69.85, 0], [D, e, s, s, u, s], [1.524, 1.524], 0.3048, 0]</attributes>
  </gr_text>
  <segment>
    <try>\n  (gr_text "Copper </try>
    <fail/>
  </segment>
  <gr_text>
    <try>\n  (gr_text "Copper </try>
    <quoted_string>
      <try>"Copper layer" (at 1</try>
      <success> (at 119.38 68.58) (</success>
      <attributes>[C, o, p, p, e, r,  , l, a, y, e, r]</attributes>
    </quoted_string>
    <at_pos_rot>
      <try> (at 119.38 68.58) (</try>
      <success> (layer Dessous)\n   </success>
      <attributes>[119.38, 68.58, 0]</attributes>
    </at_pos_rot>
    <size>
      <try> (size 1.524 1.524) </try>
      <success> (thickness 0.3048))</success>
      <attributes>[1.524, 1.524]</attributes>
    </size>
    <success>\n  (gr_line (start 1</success>
    <attributes>[[C, o, p, p, e, r,  , l, a, y, e, r], [119.38, 68.58, 0], [D, e, s, s, o, u, s], [1.524, 1.524], 0.3048, 0]</attributes>
  </gr_text>
  <segment>
    <try>\n  (gr_line (start 1</try>
    <fail/>
  </segment>
  <gr_text>
    <try>\n  (gr_line (start 1</try>
    <fail/>
  </gr_text>
  <gr_line>
    <try>\n  (gr_line (start 1</try>
    <success>\n  (gr_line (start 1</success>
    <attributes>[102.87, 110.49, 102.87, 106.68, 90, [C, o, n, t, o, u, r, s, ., C, i], 0.3048]</attributes>
  </gr_line>
  <segment>
    <try>\n  (gr_line (start 1</try>
    <fail/>
  </segment>
  <gr_text>
    <try>\n  (gr_line (start 1</try>
    <fail/>
  </gr_text>
  <gr_line>
    <try>\n  (gr_line (start 1</try>
    <success>\n  (gr_line (start 1</success>
    <attributes>[179.07, 110.49, 102.87, 110.49, 90, [C, o, n, t, o, u, r, s, ., C, i], 0.3048]</attributes>
  </gr_line>
  <segment>
    <try>\n  (gr_line (start 1</try>
    <fail/>
  </segment>
  <gr_text>
    <try>\n  (gr_line (start 1</try>
    <fail/>
  </gr_text>
  <gr_line>
    <try>\n  (gr_line (start 1</try>
    <success>\n  (gr_line (start 1</success>
    <attributes>[102.87, 67.31, 179.07, 67.31, 90, [C, o, n, t, o, u, r, s, ., C, i], 0.3048]</attributes>
  </gr_line>
  <segment>
    <try>\n  (gr_line (start 1</try>
    <fail/>
  </segment>
  <gr_text>
    <try>\n  (gr_line (start 1</try>
    <fail/>
  </gr_text>
  <gr_line>
    <try>\n  (gr_line (start 1</try>
    <success>\n\n  (segment (start </success>
    <attributes>[102.87, 71.12, 102.87, 67.31, 90, [C, o, n, t, o, u, r, s, ., C, i], 0.3048]</attributes>
  </gr_line>
  <segment>
    <try>\n\n  (segment (start </try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[106.045, 78.105, 105.537, 77.978, 0.635, [D, e, s, s, u, s], 1]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[111.76, 78.74, 110.49, 78.74, 0.635, [D, e, s, s, u, s], 1]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[109.855, 78.105, 106.045, 78.105, 0.635, [D, e, s, s, u, s], 1]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[110.49, 78.74, 109.855, 78.105, 0.635, [D, e, s, s, u, s], 1]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[109.855, 84.455, 109.22, 83.82, 0.635, [D, e, s, s, u, s], 2]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[111.76, 86.36, 110.49, 86.36, 0.635, [D, e, s, s, u, s], 2]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[105.41, 83.82, 105.537, 83.439, 0.635, [D, e, s, s, u, s], 2]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[110.49, 86.36, 109.855, 85.725, 0.635, [D, e, s, s, u, s], 2]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[109.855, 85.725, 109.855, 84.455, 0.635, [D, e, s, s, u, s], 2]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[109.22, 83.82, 105.41, 83.82, 0.635, [D, e, s, s, u, s], 2]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[111.76, 104.14, 111.76, 104.775, 0.635, [D, e, s, s, u, s], 3]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[111.76, 104.775, 111.125, 105.41, 0.635, [D, e, s, s, u, s], 3]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[111.125, 105.41, 105.537, 105.41, 0.635, [D, e, s, s, u, s], 3]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[165.1, 76.2, 170.18, 76.2, 1.016, [D, e, s, s, o, u, s], 4]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[181.61, 76.835, 180.975, 76.2, 1.016, [D, e, s, s, o, u, s], 4]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[170.18, 76.2, 180.975, 76.2, 1.016, [D, e, s, s, o, u, s], 4]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[160.02, 78.74, 162.56, 78.74, 1.016, [D, e, s, s, o, u, s], 4]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[162.56, 78.74, 165.1, 76.2, 1.016, [D, e, s, s, o, u, s], 4]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[181.61, 76.835, 181.61, 84.582, 1.016, [D, e, s, s, o, u, s], 4]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[174.625, 92.71, 181.61, 92.71, 0.635, [D, e, s, s, o, u, s], 5]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[173.99, 95.25, 173.99, 93.345, 0.635, [D, e, s, s, o, u, s], 5]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[172.72, 96.52, 173.99, 95.25, 0.635, [D, e, s, s, o, u, s], 5]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[162.56, 99.06, 165.1, 96.52, 0.635, [D, e, s, s, o, u, s], 5]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[181.61, 92.71, 181.61, 92.964, 0.635, [D, e, s, s, o, u, s], 5]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[170.18, 96.52, 172.72, 96.52, 0.635, [D, e, s, s, o, u, s], 5]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[173.99, 93.345, 174.625, 92.71, 0.635, [D, e, s, s, o, u, s], 5]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[165.1, 96.52, 170.18, 96.52, 0.635, [D, e, s, s, o, u, s], 5]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[177.8, 86.36, 178.435, 86.995, 0.635, [D, e, s, s, o, u, s], 6]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[162.56, 88.9, 162.56, 86.995, 0.635, [D, e, s, s, o, u, s], 6]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[178.435, 86.995, 180.975, 86.995, 0.635, [D, e, s, s, o, u, s], 6]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[162.56, 86.995, 163.195, 86.36, 0.635, [D, e, s, s, o, u, s], 6]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[170.18, 86.36, 177.8, 86.36, 0.635, [D, e, s, s, o, u, s], 6]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[163.195, 86.36, 170.18, 86.36, 0.635, [D, e, s, s, o, u, s], 6]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[180.975, 86.995, 181.61, 87.376, 0.635, [D, e, s, s, o, u, s], 6]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[114.3, 84.455, 113.665, 83.82, 0.635, [D, e, s, s, u, s], 7]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[113.665, 83.82, 111.76, 83.82, 0.635, [D, e, s, s, u, s], 7]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[105.537, 86.233, 107.95, 86.233, 0.635, [D, e, s, s, u, s], 7]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[114.3, 87.63, 114.3, 84.455, 0.635, [D, e, s, s, u, s], 7]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[113.665, 88.265, 114.3, 87.63, 0.635, [D, e, s, s, u, s], 7]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[109.982, 88.265, 113.665, 88.265, 0.635, [D, e, s, s, u, s], 7]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[107.95, 86.233, 109.982, 88.265, 0.635, [D, e, s, s, u, s], 7]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[175.26, 90.17, 181.61, 90.17, 0.635, [D, e, s, s, o, u, s], 8]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[173.99, 91.44, 175.26, 90.17, 0.635, [D, e, s, s, o, u, s], 8]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[162.56, 93.98, 165.1, 91.44, 0.635, [D, e, s, s, o, u, s], 8]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[165.1, 91.44, 170.18, 91.44, 0.635, [D, e, s, s, o, u, s], 8]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[170.18, 91.44, 173.99, 91.44, 0.635, [D, e, s, s, o, u, s], 8]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[116.205, 91.44, 116.205, 74.93, 0.635, [D, e, s, s, u, s], 9]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[109.22, 74.295, 108.585, 74.93, 0.635, [D, e, s, s, u, s], 9]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[108.585, 74.93, 106.045, 74.93, 0.635, [D, e, s, s, u, s], 9]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[115.57, 74.295, 109.22, 74.295, 0.635, [D, e, s, s, u, s], 9]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[106.045, 74.93, 106.045, 75.565, 0.635, [D, e, s, s, u, s], 9]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[116.205, 74.93, 115.57, 74.295, 0.635, [D, e, s, s, u, s], 9]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[111.76, 92.71, 114.935, 92.71, 0.635, [D, e, s, s, u, s], 9]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[106.045, 75.565, 105.537, 75.184, 0.635, [D, e, s, s, u, s], 9]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[114.935, 92.71, 116.205, 91.44, 0.635, [D, e, s, s, u, s], 9]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[169.545, 105.41, 170.18, 104.775, 0.635, [D, e, s, s, o, u, s], 10]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[181.61, 95.885, 181.61, 95.758, 0.635, [D, e, s, s, o, u, s], 10]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[162.56, 105.41, 169.545, 105.41, 0.635, [D, e, s, s, o, u, s], 10]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[170.18, 101.6, 172.72, 101.6, 0.635, [D, e, s, s, o, u, s], 10]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[172.72, 101.6, 178.435, 95.885, 0.635, [D, e, s, s, o, u, s], 10]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[170.18, 104.775, 170.18, 101.6, 0.635, [D, e, s, s, o, u, s], 10]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[178.435, 95.885, 181.61, 95.885, 0.635, [D, e, s, s, o, u, s], 10]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[110.49, 81.28, 109.855, 80.645, 0.635, [D, e, s, s, u, s], 11]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[106.045, 80.645, 105.537, 80.772, 0.635, [D, e, s, s, u, s], 11]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[111.76, 81.28, 110.49, 81.28, 0.635, [D, e, s, s, u, s], 11]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[109.855, 80.645, 106.045, 80.645, 0.635, [D, e, s, s, u, s], 11]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[106.045, 76.2, 105.537, 76.581, 0.635, [D, e, s, s, o, u, s], 12]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[111.76, 76.2, 106.045, 76.2, 0.635, [D, e, s, s, o, u, s], 12]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[116.84, 89.535, 116.205, 90.17, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[116.205, 90.17, 109.855, 90.17, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[109.855, 90.17, 109.22, 90.805, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[144.78, 97.155, 144.78, 92.71, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[127, 85.09, 117.475, 85.09, 0.4318, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[127, 97.79, 127, 107.95, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[109.22, 107.315, 109.855, 107.95, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[127, 107.95, 140.97, 107.95, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[109.22, 90.805, 109.22, 104.14, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[148.59, 85.09, 146.05, 85.09, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[105.537, 104.013, 109.22, 104.013, 0.635, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[109.22, 104.013, 109.22, 104.14, 0.635, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[105.537, 90.297, 109.855, 90.297, 0.635, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[109.855, 90.297, 109.855, 90.17, 0.635, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[109.855, 107.95, 127, 107.95, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[109.22, 104.14, 109.22, 107.315, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[116.84, 85.725, 116.84, 89.535, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[117.475, 85.09, 116.84, 85.725, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[148.59, 107.95, 156.845, 107.95, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[157.48, 107.315, 157.48, 80.645, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[156.845, 107.95, 157.48, 107.315, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[149.86, 71.755, 155.575, 71.755, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status C00))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[144.78, 107.95, 148.59, 107.95, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status C00))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[140.97, 107.95, 144.78, 107.95, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[157.48, 74.295, 158.115, 73.66, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[157.48, 80.645, 157.48, 74.295, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[158.115, 73.66, 161.29, 73.66, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[158.115, 81.28, 157.48, 80.645, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[170.18, 81.28, 158.115, 81.28, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[160.655, 69.85, 161.29, 70.485, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[156.21, 69.85, 160.655, 69.85, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[161.29, 70.485, 161.29, 73.66, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[154.94, 91.44, 154.305, 92.075, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status C00))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[181.61, 94.361, 181.61, 91.567, 1.016, [D, e, s, s, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status C00))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[181.61, 91.567, 181.61, 88.773, 1.016, [D, e, s, s, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status C00))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[181.61, 88.773, 181.61, 85.979, 1.016, [D, e, s, s, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[181.61, 85.979, 181.61, 81.915, 1.016, [D, e, s, s, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[170.18, 81.28, 177.8, 81.28, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[180.975, 81.28, 181.61, 81.915, 1.016, [D, e, s, s, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (via (at 177.8 81</success>
    <attributes>[177.8, 81.28, 180.975, 81.28, 1.016, [D, e, s, s, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (via (at 177.8 81</try>
    <fail/>
  </segment>
  <gr_text>
    <try>\n  (via (at 177.8 81</try>
    <fail/>
  </gr_text>
  <gr_line>
    <try>\n  (via (at 177.8 81</try>
    <fail/>
  </gr_line>
  <zone>
    <try>\n  (via (at 177.8 81</try>
    <fail/>
  </zone>
  <unused>
    <try>\n  (via (at 177.8 81</try>
    <fail/>
  </unused>
  <via>
    <try>\n  (via (at 177.8 81</try>
    <at_pos_rot>
      <try> (at 177.8 81.28) (s</try>
      <success> (size 1.778) (layer</success>
      <attributes>[177.8, 81.28, 0]</attributes>
    </at_pos_rot>
    <success>\n  (segment (start 1</success>
    <attributes>[[177.8, 81.28, 0], 1.778, [[D, e, s, s, u, s], [D, e, s, s, o, u, s]], 13]</attributes>
  </via>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[143.51, 82.55, 140.97, 82.55, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[146.05, 85.09, 143.51, 82.55, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[149.225, 74.295, 149.225, 72.39, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[149.225, 72.39, 149.86, 71.755, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[144.145, 97.79, 144.78, 97.155, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status C00))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[140.97, 92.71, 140.97, 90.17, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[144.78, 92.71, 148.59, 92.71, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[140.97, 97.79, 144.145, 97.79, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[140.97, 92.71, 144.78, 92.71, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[141.605, 76.2, 147.32, 76.2, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[140.97, 82.55, 140.97, 76.835, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[154.305, 85.09, 154.94, 85.725, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[154.94, 85.725, 154.94, 91.44, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[154.305, 92.075, 150.495, 92.075, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[150.495, 92.075, 149.86, 92.71, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[140.97, 76.835, 141.605, 76.2, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[147.32, 76.2, 149.225, 74.295, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[156.21, 71.12, 156.21, 69.85, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[155.575, 71.755, 156.21, 71.12, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status C00))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[148.59, 87.63, 148.59, 85.09, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status C00))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[148.59, 95.25, 148.59, 92.71, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[149.86, 92.71, 148.59, 92.71, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[148.59, 85.09, 154.305, 85.09, 1.016, [D, e, s, s, o, u, s], 13]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[109.22, 91.694, 109.855, 92.329, 0.635, [D, e, s, s, u, s], 14]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[105.537, 91.694, 109.22, 91.694, 0.635, [D, e, s, s, u, s], 14]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[109.855, 92.329, 109.855, 100.33, 0.635, [D, e, s, s, u, s], 14]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[109.855, 102.235, 109.22, 102.87, 0.635, [D, e, s, s, u, s], 14]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[109.855, 100.33, 109.855, 102.235, 0.635, [D, e, s, s, u, s], 14]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[109.855, 99.949, 109.855, 100.33, 0.635, [D, e, s, s, u, s], 14]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[105.537, 99.949, 109.855, 99.949, 0.635, [D, e, s, s, u, s], 14]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[109.22, 102.87, 105.41, 102.87, 0.635, [D, e, s, s, u, s], 14]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[105.41, 102.87, 105.537, 102.616, 0.635, [D, e, s, s, u, s], 14]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[122.555, 72.39, 127, 72.39, 0.635, [D, e, s, s, o, u, s], 15]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[121.92, 76.2, 121.92, 73.025, 0.635, [D, e, s, s, o, u, s], 15]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (via (at 139.065 </success>
    <attributes>[121.92, 73.025, 122.555, 72.39, 0.635, [D, e, s, s, o, u, s], 15]</attributes>
  </segment>
  <segment>
    <try>\n  (via (at 139.065 </try>
    <fail/>
  </segment>
  <gr_text>
    <try>\n  (via (at 139.065 </try>
    <fail/>
  </gr_text>
  <gr_line>
    <try>\n  (via (at 139.065 </try>
    <fail/>
  </gr_line>
  <zone>
    <try>\n  (via (at 139.065 </try>
    <fail/>
  </zone>
  <unused>
    <try>\n  (via (at 139.065 </try>
    <fail/>
  </unused>
  <via>
    <try>\n  (via (at 139.065 </try>
    <at_pos_rot>
      <try> (at 139.065 100.33)</try>
      <success> (size 1.778) (layer</success>
      <attributes>[139.065, 100.33, 0]</attributes>
    </at_pos_rot>
    <success>\n  (segment (start 1</success>
    <attributes>[[139.065, 100.33, 0], 1.778, [[D, e, s, s, u, s], [D, e, s, s, o, u, s]], 16]</attributes>
  </via>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[139.065, 100.33, 135.255, 104.14, 0.635, [D, e, s, s, u, s], 16]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[139.065, 89.535, 139.065, 100.33, 0.635, [D, e, s, s, o, u, s], 16]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[135.255, 104.14, 121.92, 104.14, 0.635, [D, e, s, s, u, s], 16]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[140.97, 87.63, 139.065, 89.535, 0.635, [D, e, s, s, o, u, s], 16]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status C00))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[121.92, 92.71, 127, 92.71, 0.635, [D, e, s, s, o, u, s], 17]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[132.715, 83.82, 136.525, 83.82, 0.4318, [D, e, s, s, o, u, s], 18]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[121.92, 78.74, 131.445, 78.74, 0.635, [D, e, s, s, o, u, s], 18]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[137.16, 95.25, 134.62, 95.25, 0.635, [D, e, s, s, o, u, s], 18]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[137.795, 94.615, 137.16, 95.25, 0.635, [D, e, s, s, o, u, s], 18]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[132.08, 79.375, 132.08, 83.185, 0.635, [D, e, s, s, o, u, s], 18]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[131.445, 78.74, 132.08, 79.375, 0.635, [D, e, s, s, o, u, s], 18]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[137.795, 94.615, 137.795, 85.09, 0.635, [D, e, s, s, o, u, s], 18]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[136.525, 83.82, 137.795, 85.09, 0.635, [D, e, s, s, o, u, s], 18]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[132.08, 83.185, 132.715, 83.82, 0.635, [D, e, s, s, o, u, s], 18]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[124.46, 83.82, 125.73, 82.55, 0.635, [D, e, s, s, o, u, s], 19]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[121.92, 83.82, 124.46, 83.82, 0.635, [D, e, s, s, o, u, s], 19]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[125.73, 82.55, 127, 82.55, 0.635, [D, e, s, s, o, u, s], 19]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[123.825, 81.28, 124.46, 80.645, 0.635, [D, e, s, s, o, u, s], 20]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[121.92, 81.28, 123.825, 81.28, 0.635, [D, e, s, s, o, u, s], 20]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[131.445, 87.63, 130.81, 86.995, 0.635, [D, e, s, s, o, u, s], 20]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[130.81, 86.995, 130.81, 81.915, 0.635, [D, e, s, s, o, u, s], 20]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[131.445, 87.63, 134.62, 87.63, 0.635, [D, e, s, s, o, u, s], 20]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[129.54, 80.645, 124.46, 80.645, 0.635, [D, e, s, s, o, u, s], 20]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[130.81, 81.915, 129.54, 80.645, 0.635, [D, e, s, s, o, u, s], 20]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[127, 90.17, 130.175, 90.17, 0.635, [D, e, s, s, o, u, s], 21]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[135.89, 88.9, 136.525, 88.265, 0.635, [D, e, s, s, o, u, s], 21]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[135.89, 85.09, 134.62, 85.09, 0.635, [D, e, s, s, o, u, s], 21]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[122.555, 90.17, 127, 90.17, 0.635, [D, e, s, s, o, u, s], 21]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[132.715, 92.71, 134.62, 92.71, 0.635, [D, e, s, s, o, u, s], 21]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[130.175, 90.17, 131.445, 88.9, 0.635, [D, e, s, s, o, u, s], 21]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[121.92, 86.36, 121.92, 89.535, 0.635, [D, e, s, s, o, u, s], 21]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[135.89, 85.09, 136.525, 85.725, 0.635, [D, e, s, s, o, u, s], 21]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[136.525, 88.265, 136.525, 85.725, 0.635, [D, e, s, s, o, u, s], 21]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[130.175, 90.17, 132.715, 92.71, 0.635, [D, e, s, s, o, u, s], 21]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[131.445, 88.9, 135.89, 88.9, 0.4318, [D, e, s, s, o, u, s], 21]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[121.92, 89.535, 122.555, 90.17, 0.635, [D, e, s, s, o, u, s], 21]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[146.685, 104.775, 146.685, 103.505, 0.635, [D, e, s, s, o, u, s], 22]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[146.685, 103.505, 147.32, 102.87, 0.635, [D, e, s, s, o, u, s], 22]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[147.32, 102.87, 148.59, 102.87, 0.635, [D, e, s, s, o, u, s], 22]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[134.62, 90.17, 135.89, 90.17, 0.635, [D, e, s, s, o, u, s], 22]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[125.73, 93.98, 125.095, 94.615, 0.635, [D, e, s, s, o, u, s], 22]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[135.89, 93.98, 125.73, 93.98, 0.4318, [D, e, s, s, o, u, s], 22]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[145.415, 106.045, 146.685, 104.775, 0.635, [D, e, s, s, o, u, s], 22]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[135.89, 90.17, 136.525, 90.805, 0.635, [D, e, s, s, o, u, s], 22]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[132.08, 106.045, 145.415, 106.045, 0.635, [D, e, s, s, o, u, s], 22]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[136.525, 90.805, 136.525, 93.345, 0.635, [D, e, s, s, o, u, s], 22]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[136.525, 93.345, 135.89, 93.98, 0.635, [D, e, s, s, o, u, s], 22]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[148.59, 102.87, 151.765, 102.87, 0.635, [D, e, s, s, o, u, s], 22]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[152.4, 103.505, 152.4, 105.41, 0.635, [D, e, s, s, o, u, s], 22]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[125.73, 96.52, 125.095, 95.885, 0.4318, [D, e, s, s, o, u, s], 22]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[129.54, 96.52, 130.81, 97.79, 0.635, [D, e, s, s, o, u, s], 22]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[130.81, 97.79, 130.81, 104.775, 0.635, [D, e, s, s, o, u, s], 22]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[130.81, 104.775, 132.08, 106.045, 0.635, [D, e, s, s, o, u, s], 22]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[128.905, 96.52, 129.54, 96.52, 0.635, [D, e, s, s, o, u, s], 22]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[151.765, 102.87, 152.4, 103.505, 0.635, [D, e, s, s, o, u, s], 22]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[125.095, 94.615, 125.095, 95.885, 0.635, [D, e, s, s, o, u, s], 22]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[125.73, 96.52, 128.905, 96.52, 0.4318, [D, e, s, s, o, u, s], 22]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[137.16, 99.695, 137.16, 102.235, 0.635, [D, e, s, s, o, u, s], 23]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[150.495, 99.06, 150.495, 98.425, 0.635, [D, e, s, s, o, u, s], 23]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[149.86, 99.695, 150.495, 99.06, 0.635, [D, e, s, s, o, u, s], 23]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[137.16, 102.235, 137.795, 102.87, 0.635, [D, e, s, s, o, u, s], 23]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[144.145, 99.695, 149.86, 99.695, 0.635, [D, e, s, s, o, u, s], 23]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[137.795, 99.06, 137.16, 99.695, 0.635, [D, e, s, s, o, u, s], 23]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[150.495, 98.425, 152.4, 96.52, 0.635, [D, e, s, s, o, u, s], 23]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[152.4, 96.52, 152.4, 93.98, 0.635, [D, e, s, s, o, u, s], 23]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[137.795, 102.87, 140.97, 102.87, 0.635, [D, e, s, s, o, u, s], 23]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[130.81, 95.25, 132.08, 96.52, 0.635, [D, e, s, s, o, u, s], 23]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[127, 95.25, 130.81, 95.25, 0.635, [D, e, s, s, o, u, s], 23]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[140.97, 102.87, 144.145, 99.695, 0.635, [D, e, s, s, o, u, s], 23]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[132.08, 96.52, 137.16, 96.52, 0.4318, [D, e, s, s, o, u, s], 23]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[137.16, 96.52, 137.795, 97.155, 0.635, [D, e, s, s, o, u, s], 23]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[137.795, 97.155, 137.795, 99.06, 0.635, [D, e, s, s, o, u, s], 23]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[134.62, 97.79, 134.62, 104.14, 0.635, [D, e, s, s, o, u, s], 24]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[144.78, 104.14, 144.78, 102.87, 0.635, [D, e, s, s, o, u, s], 24]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[144.78, 102.87, 146.685, 100.965, 0.635, [D, e, s, s, o, u, s], 24]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[146.685, 100.965, 151.765, 100.965, 0.635, [D, e, s, s, o, u, s], 24]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[135.255, 104.775, 144.145, 104.775, 0.635, [D, e, s, s, o, u, s], 24]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[134.62, 104.14, 135.255, 104.775, 0.635, [D, e, s, s, o, u, s], 24]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[144.145, 104.775, 144.78, 104.14, 0.635, [D, e, s, s, o, u, s], 24]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[151.765, 100.965, 152.4, 100.33, 0.635, [D, e, s, s, o, u, s], 24]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[152.4, 100.33, 152.4, 99.06, 0.635, [D, e, s, s, o, u, s], 24]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[124.46, 80.01, 126.365, 78.105, 0.635, [D, e, s, s, u, s], 25]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[126.365, 78.105, 143.51, 78.105, 0.635, [D, e, s, s, u, s], 25]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[138.43, 76.2, 142.24, 72.39, 0.635, [D, e, s, s, o, u, s], 25]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[144.78, 74.295, 146.685, 74.295, 0.635, [D, e, s, s, u, s], 25]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[140.97, 85.09, 139.7, 85.09, 0.635, [D, e, s, s, o, u, s], 25]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[139.7, 85.09, 138.43, 83.82, 0.635, [D, e, s, s, o, u, s], 25]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[147.955, 69.85, 151.13, 69.85, 0.635, [D, e, s, s, o, u, s], 25]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[147.32, 73.66, 147.32, 72.39, 0.635, [D, e, s, s, u, s], 25]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[124.46, 87.63, 124.46, 80.01, 0.635, [D, e, s, s, u, s], 25]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[143.51, 85.09, 140.97, 85.09, 0.635, [D, e, s, s, o, u, s], 25]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[146.685, 74.295, 147.32, 73.66, 0.635, [D, e, s, s, u, s], 25]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[144.78, 88.265, 144.78, 86.36, 0.635, [D, e, s, s, o, u, s], 25]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[147.32, 70.485, 147.955, 69.85, 0.635, [D, e, s, s, o, u, s], 25]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[144.145, 74.93, 144.78, 74.295, 0.635, [D, e, s, s, u, s], 25]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[144.78, 86.36, 143.51, 85.09, 0.635, [D, e, s, s, o, u, s], 25]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (via (at 124.46 8</success>
    <attributes>[145.415, 88.9, 144.78, 88.265, 0.635, [D, e, s, s, o, u, s], 25]</attributes>
  </segment>
  <segment>
    <try>\n  (via (at 124.46 8</try>
    <fail/>
  </segment>
  <gr_text>
    <try>\n  (via (at 124.46 8</try>
    <fail/>
  </gr_text>
  <gr_line>
    <try>\n  (via (at 124.46 8</try>
    <fail/>
  </gr_line>
  <zone>
    <try>\n  (via (at 124.46 8</try>
    <fail/>
  </zone>
  <unused>
    <try>\n  (via (at 124.46 8</try>
    <fail/>
  </unused>
  <via>
    <try>\n  (via (at 124.46 8</try>
    <at_pos_rot>
      <try> (at 124.46 87.63) (</try>
      <success> (size 1.778) (layer</success>
      <attributes>[124.46, 87.63, 0]</attributes>
    </at_pos_rot>
    <success>\n  (segment (start 1</success>
    <attributes>[[124.46, 87.63, 0], 1.778, [[D, e, s, s, u, s], [D, e, s, s, o, u, s]], 25]</attributes>
  </via>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[138.43, 83.82, 138.43, 76.2, 0.635, [D, e, s, s, o, u, s], 25]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[142.24, 72.39, 147.32, 72.39, 0.635, [D, e, s, s, o, u, s], 25]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[143.51, 78.105, 144.145, 77.47, 0.635, [D, e, s, s, u, s], 25]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[147.32, 72.39, 147.32, 70.485, 0.635, [D, e, s, s, o, u, s], 25]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[144.145, 77.47, 144.145, 74.93, 0.635, [D, e, s, s, u, s], 25]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[152.4, 88.9, 145.415, 88.9, 0.4318, [D, e, s, s, o, u, s], 25]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[127, 87.63, 124.46, 87.63, 0.635, [D, e, s, s, o, u, s], 25]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status C00))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[134.62, 82.55, 134.62, 76.2, 1.016, [D, e, s, s, o, u, s], 26]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[148.59, 79.375, 149.225, 78.74, 1.016, [D, e, s, s, o, u, s], 26]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[149.86, 71.12, 149.86, 73.025, 1.016, [D, e, s, s, u, s], 26]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[151.13, 73.66, 151.13, 78.74, 1.016, [D, e, s, s, o, u, s], 26]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status C00))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[137.16, 72.39, 134.62, 72.39, 1.016, [D, e, s, s, o, u, s], 26]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[149.225, 78.74, 151.13, 78.74, 1.016, [D, e, s, s, o, u, s], 26]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status C00))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[134.62, 76.2, 134.62, 72.39, 1.016, [D, e, s, s, o, u, s], 26]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[148.59, 82.55, 148.59, 79.375, 1.016, [D, e, s, s, o, u, s], 26]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[150.495, 73.66, 151.13, 73.66, 1.016, [D, e, s, s, u, s], 26]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[145.415, 69.85, 148.59, 69.85, 1.016, [D, e, s, s, u, s], 26]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 400))\n  (segm</try>
      <foo>
        <try>))\n  (segment (start</try>
        <fail/>
      </foo>
      <success>))\n  (segment (start</success>
    </bar>
    <success>\n  (segment (start 1</success>
    <attributes>[151.13, 78.74, 152.4, 78.74, 1.016, [D, e, s, s, o, u, s], 26]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[148.59, 69.85, 149.86, 71.12, 1.016, [D, e, s, s, u, s], 26]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[149.86, 73.025, 150.495, 73.66, 1.016, [D, e, s, s, u, s], 26]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <success>\n  (segment (start 1</success>
    <attributes>[142.875, 72.39, 145.415, 69.85, 1.016, [D, e, s, s, u, s], 26]</attributes>
  </segment>
  <segment>
    <try>\n  (segment (start 1</try>
    <bar>
      <try>status 800))\n\n  (zon</try>
      <foo>
        <try>))\n\n  (zone (net 13)</try>
        <fail/>
      </foo>
      <success>))\n\n  (zone (net 13)</success>
    </bar>
    <success>\n\n  (zone (net 13) (</success>
    <attributes>[137.16, 72.39, 142.875, 72.39, 1.016, [D, e, s, s, u, s], 26]</attributes>
  </segment>
  <segment>
    <try>\n\n  (zone (net 13) (</try>
    <fail/>
  </segment>
  <gr_text>
    <try>\n\n  (zone (net 13) (</try>
    <fail/>
  </gr_text>
  <gr_line>
    <try>\n\n  (zone (net 13) (</try>
    <fail/>
  </gr_line>
  <zone>
    <try>\n\n  (zone (net 13) (</try>
    <bar>
      <try>net_name GND) (layer</try>
      <foo>
        <try>) (layer Dessous) (t</try>
        <fail/>
      </foo>
      <success>) (layer Dessous) (t</success>
    </bar>
    <bar>
      <try>layer Dessous) (tsta</try>
      <foo>
        <try>) (tstamp 4BF0F951) </try>
        <fail/>
      </foo>
      <success>) (tstamp 4BF0F951) </success>
    </bar>
    <bar>
      <try>tstamp 4BF0F951) (ha</try>
      <foo>
        <try>) (hatch edge 0.508)</try>
        <fail/>
      </foo>
      <success>) (hatch edge 0.508)</success>
    </bar>
    <bar>
      <try>hatch edge 0.508)\n  </try>
      <foo>
        <try>)\n    (connect_pads </try>
        <fail/>
      </foo>
      <success>)\n    (connect_pads </success>
    </bar>
    <bar>
      <try>connect_pads (cleara</try>
      <foo>
        <try>(clearance 0.508))\n </try>
        <bar>
          <try>clearance 0.508))\n  </try>
          <foo>
            <try>))\n    (min_thicknes</try>
            <fail/>
          </foo>
          <success>))\n    (min_thicknes</success>
        </bar>
        <success>)\n    (min_thickness</success>
      </foo>
      <foo>
        <try>)\n    (min_thickness</try>
        <fail/>
      </foo>
      <success>)\n    (min_thickness</success>
    </bar>
    <bar>
      <try>min_thickness 0.254)</try>
      <foo>
        <try>)\n    (fill (arc_seg</try>
        <fail/>
      </foo>
      <success>)\n    (fill (arc_seg</success>
    </bar>
    <bar>
      <try>fill (arc_segments 1</try>
      <foo>
        <try>(arc_segments 16) (t</try>
        <bar>
          <try>arc_segments 16) (th</try>
          <foo>
            <try>) (thermal_gap 0.508</try>
            <fail/>
          </foo>
          <success>) (thermal_gap 0.508</success>
        </bar>
        <success> (thermal_gap 0.508)</success>
      </foo>
      <foo>
        <try> (thermal_gap 0.508)</try>
        <bar>
          <try>thermal_gap 0.508) (</try>
          <foo>
            <try>) (thermal_bridge_wi</try>
            <fail/>
          </foo>
          <success>) (thermal_bridge_wi</success>
        </bar>
        <success> (thermal_bridge_wid</success>
      </foo>
      <foo>
        <try> (thermal_bridge_wid</try>
        <bar>
          <try>thermal_bridge_width</try>
          <foo>
            <try>))\n    (polygon\n    </try>
            <fail/>
          </foo>
          <success>))\n    (polygon\n    </success>
        </bar>
        <success>)\n    (polygon\n     </success>
      </foo>
      <foo>
        <try>)\n    (polygon\n     </try>
        <fail/>
      </foo>
      <success>)\n    (polygon\n     </success>
    </bar>
    <success>\n)\n</success>
    <attributes>[13, [[182.88, 109.22], [182.88, 68.58], [105.41, 68.58], [105.41, 109.22]], [[[130.731, 88.265], [129.781, 89.2175], [128.407, 89.2175], [128.179, 88.9889], [127.963, 88.9], [128.179, 88.8111], [128.57, 88.4199], [128.783, 87.9069], [128.783, 87.3531], [128.57, 86.8401], [128.179, 86.4489], [127.975, 86.3625], [128.397, 86.0603], [128.689, 85.5878], [128.732, 85.438], [128.613, 85.217], [127.254, 85.217], [127.127, 85.217], [126.873, 85.217], [126.746, 85.217], [125.387, 85.217], [125.268, 85.438], [125.311, 85.5878], [125.603, 86.0603], [126.022, 86.3625], [125.821, 86.4489], [125.626, 86.6445], [125.321, 86.3397], [124.762, 86.1085], [124.158, 86.1085], [123.599, 86.3397], [123.314, 86.6242], [123.314, 86.0831], [123.101, 85.5701], [122.71, 85.1789], [122.494, 85.09], [122.71, 85.0011], [122.939, 84.7725], [124.46, 84.7725], [124.823, 84.6988], [124.826, 84.6988], [125.133, 84.4931], [125.677, 83.947], [125.73, 83.9699], [125.809, 83.9699], [125.603, 84.1197], [125.311, 84.5922], [125.268, 84.742], [125.387, 84.963], [126.746, 84.963], [126.873, 84.963], [127.127, 84.963], [127.254, 84.963], [128.613, 84.963], [128.732, 84.742], [128.689, 84.5922], [128.397, 84.1197], [128.189, 83.9699], [128.267, 83.9699], [128.501, 83.8733], [128.679, 83.6955], [128.775, 83.4644], [128.775, 83.2129], [128.775, 81.6381], [128.758, 81.5975], [129.146, 81.5975], [129.857, 82.3087], [129.857, 86.995], [129.931, 87.3608], [130.137, 87.6681], [130.731, 88.265]], [[182.753, 109.093], [157.528, 109.093], [157.528, 70.038], [157.5, 69.5198], [157.358, 69.1718], [157.127, 69.1134], [156.39, 69.85], [157.127, 70.5866], [157.358, 70.5282], [157.528, 70.038], [157.528, 109.093], [156.947, 109.093], [156.947, 70.7669], [156.21, 70.0303], [156.03, 70.2107], [156.03, 69.85], [155.293, 69.1134], [155.062, 69.1718], [154.892, 69.662], [154.92, 70.1802], [155.062, 70.5282], [155.293, 70.5866], [156.03, 69.85], [156.03, 70.2107], [155.473, 70.7669], [155.532, 70.9981], [156.022, 71.1683], [156.54, 71.1403], [156.888, 70.9981], [156.947, 70.7669], [156.947, 109.093], [149.908, 109.093], [149.908, 108.138], [149.88, 107.62], [149.738, 107.272], [149.507, 107.213], [149.327, 107.394], [149.327, 107.033], [149.268, 106.802], [148.778, 106.632], [148.26, 106.66], [147.912, 106.802], [147.853, 107.033], [148.59, 107.77], [149.327, 107.033], [149.327, 107.394], [148.77, 107.95], [149.507, 108.687], [149.738, 108.628], [149.908, 108.138], [149.908, 109.093], [149.268, 109.093], [149.327, 108.867], [148.59, 108.13], [148.41, 108.311], [148.41, 107.95], [147.673, 107.213], [147.442, 107.272], [147.272, 107.762], [147.3, 108.28], [147.442, 108.628], [147.673, 108.687], [148.41, 107.95], [148.41, 108.311], [147.853, 108.867], [147.909, 109.093], [146.098, 109.093], [146.098, 108.138], [146.07, 107.62], [145.928, 107.272], [145.697, 107.213], [144.96, 107.95], [145.697, 108.687], [145.928, 108.628], [146.098, 108.138], [146.098, 109.093], [145.458, 109.093], [145.517, 108.867], [144.78, 108.13], [144.6, 108.311], [144.043, 108.867], [144.099, 109.093], [142.288, 109.093], [141.648, 109.093], [141.707, 108.867], [140.97, 108.13], [140.79, 108.311], [140.233, 108.867], [140.289, 109.093], [128.732, 109.093], [128.732, 98.138], [128.613, 97.917], [127.127, 97.917], [127.127, 99.2124], [127.406, 99.2124], [127.947, 99.0854], [128.397, 98.7603], [128.689, 98.2878], [128.732, 98.138], [128.732, 109.093], [126.873, 109.093], [126.873, 99.2124], [126.873, 97.917], [125.387, 97.917], [125.268, 98.138], [125.311, 98.2878], [125.603, 98.7603], [126.053, 99.0854], [126.594, 99.2124], [126.873, 99.2124], [126.873, 109.093], [123.314, 109.093], [123.314, 104.417], [123.314, 103.863], [123.101, 103.35], [122.71, 102.959], [122.197, 102.746], [121.643, 102.746], [121.13, 102.959], [120.739, 103.35], [120.526, 103.863], [120.526, 104.417], [120.739, 104.93], [121.13, 105.321], [121.643, 105.534], [122.197, 105.534], [122.71, 105.321], [123.101, 104.93], [123.314, 104.417], [123.314, 109.093], [113.154, 109.093], [113.154, 104.417], [113.154, 103.863], [113.154, 92.9869], [113.154, 92.4331], [112.941, 91.9201], [112.55, 91.5289], [112.037, 91.3155], [111.483, 91.3155], [110.97, 91.5289], [110.579, 91.9201], [110.366, 92.4331], [110.366, 92.9869], [110.579, 93.4999], [110.97, 93.8911], [111.483, 94.1045], [112.037, 94.1045], [112.55, 93.8911], [112.941, 93.4999], [113.154, 92.9869], [113.154, 103.863], [112.941, 103.35], [112.55, 102.959], [112.037, 102.746], [111.483, 102.746], [110.97, 102.959], [110.579, 103.35], [110.366, 103.863], [110.366, 104.417], [110.579, 104.93], [110.97, 105.321], [111.483, 105.534], [112.037, 105.534], [112.55, 105.321], [112.941, 104.93], [113.154, 104.417], [113.154, 109.093], [108.712, 109.093], [108.712, 104.297], [108.555, 104.14], [105.664, 104.14], [105.664, 105.253], [105.821, 105.41], [108.201, 105.407], [108.435, 105.311], [108.613, 105.133], [108.709, 104.902], [108.709, 104.651], [108.712, 104.297], [108.712, 109.093], [105.537, 109.093], [105.537, 103.886], [105.664, 103.886], [105.791, 103.886], [108.555, 103.886], [108.712, 103.729], [108.712, 90.5815], [108.555, 90.424], [105.664, 90.424], [105.664, 91.5365], [105.821, 91.694], [108.201, 91.6915], [108.435, 91.5949], [108.613, 91.4171], [108.709, 91.186], [108.709, 90.9345], [108.712, 90.5815], [108.712, 103.729], [108.709, 103.375], [108.709, 103.124], [108.613, 102.893], [108.435, 102.715], [108.349, 102.68], [108.435, 102.644], [108.613, 102.466], [108.709, 102.235], [108.709, 101.984], [108.709, 100.46], [108.613, 100.226], [108.435, 100.048], [108.204, 99.9515], [107.953, 99.9515], [105.537, 99.9515], [105.537, 99.9465], [108.201, 99.9465], [108.435, 99.8499], [108.613, 99.6721], [108.709, 99.441], [108.709, 99.1895], [108.709, 97.6655], [108.613, 97.4319], [108.435, 97.2541], [108.204, 97.1575], [107.953, 97.1575], [105.537, 97.1575], [105.537, 97.1525], [108.201, 97.1525], [108.435, 97.0559], [108.613, 96.8781], [108.709, 96.647], [108.709, 96.3955], [108.709, 94.8715], [108.613, 94.6379], [108.435, 94.4601], [108.349, 94.422], [108.435, 94.3889], [108.613, 94.2111], [108.709, 93.98], [108.709, 93.7285], [108.709, 92.2045], [108.613, 91.9709], [108.435, 91.7931], [108.204, 91.6965], [107.953, 91.6965], [105.537, 91.6965], [105.537, 90.17], [105.664, 90.17], [105.791, 90.17], [108.555, 90.17], [108.712, 90.0125], [108.709, 89.6595], [108.709, 89.408], [108.613, 89.1769], [108.435, 88.9991], [108.349, 88.9635], [108.435, 88.9279], [108.613, 88.7501], [108.709, 88.519], [108.709, 88.2675], [108.709, 86.7435], [108.613, 86.5099], [108.435, 86.3321], [108.204, 86.2355], [107.953, 86.2355], [105.537, 86.2355], [105.537, 86.2305], [108.201, 86.2305], [108.435, 86.1339], [108.613, 85.9561], [108.709, 85.725], [108.709, 85.4735], [108.709, 83.9495], [108.613, 83.7159], [108.435, 83.5381], [108.204, 83.4415], [107.953, 83.4415], [105.537, 83.4415], [105.537, 83.4365], [108.201, 83.4365], [108.435, 83.3399], [108.613, 83.1621], [108.709, 82.931], [108.709, 82.6795], [108.709, 81.1555], [108.613, 80.9219], [108.435, 80.7441], [108.349, 80.706], [108.435, 80.6729], [108.613, 80.4951], [108.709, 80.264], [108.709, 80.0125], [108.709, 78.4885], [108.613, 78.2549], [108.435, 78.0771], [108.204, 77.9805], [107.953, 77.9805], [105.537, 77.9805], [105.537, 77.9755], [108.201, 77.9755], [108.435, 77.8789], [108.613, 77.7011], [108.709, 77.47], [108.709, 77.2185], [108.709, 77.1525], [110.741, 77.1525], [110.97, 77.3811], [111.183, 77.47], [110.97, 77.5589], [110.579, 77.9501], [110.366, 78.4631], [110.366, 79.0169], [110.579, 79.5299], [110.97, 79.9211], [111.183, 80.01], [110.97, 80.0989], [110.579, 80.4901], [110.366, 81.0031], [110.366, 81.5569], [110.579, 82.0699], [110.97, 82.4611], [111.183, 82.55], [110.97, 82.6389], [110.579, 83.0301], [110.366, 83.5431], [110.366, 84.0969], [110.579, 84.6099], [110.97, 85.0011], [111.183, 85.09], [110.97, 85.1789], [110.579, 85.5701], [110.366, 86.0831], [110.366, 86.6369], [110.579, 87.1499], [110.97, 87.5411], [111.483, 87.7545], [112.037, 87.7545], [112.55, 87.5411], [112.941, 87.1499], [113.154, 86.6369], [113.154, 86.0831], [112.941, 85.5701], [112.55, 85.1789], [112.334, 85.09], [112.55, 85.0011], [112.941, 84.6099], [113.154, 84.0969], [113.154, 83.5431], [112.941, 83.0301], [112.55, 82.6389], [112.334, 82.55], [112.55, 82.4611], [112.941, 82.0699], [113.154, 81.5569], [113.154, 81.0031], [112.941, 80.4901], [112.55, 80.0989], [112.334, 80.01], [112.55, 79.9211], [112.941, 79.5299], [113.154, 79.0169], [113.154, 78.4631], [112.941, 77.9501], [112.55, 77.5589], [112.334, 77.47], [112.55, 77.3811], [112.941, 76.9899], [113.154, 76.4769], [113.154, 75.9231], [112.941, 75.4101], [112.55, 75.0189], [112.037, 74.8055], [111.483, 74.8055], [110.97, 75.0189], [110.741, 75.2475], [108.349, 75.2475], [108.349, 75.245], [108.435, 75.2119], [108.613, 75.0341], [108.709, 74.803], [108.709, 74.5515], [108.709, 73.0275], [108.613, 72.7939], [108.435, 72.6161], [108.204, 72.5195], [107.953, 72.5195], [105.537, 72.5195], [105.537, 68.707], [110.96, 68.707], [110.96, 70.4342], [127.495, 70.4342], [127.495, 68.707], [150.406, 68.707], [150.376, 68.7197], [150.195, 68.8975], [147.955, 68.8975], [147.589, 68.9712], [147.434, 69.0728], [147.279, 69.1769], [146.647, 69.8119], [146.441, 70.1192], [146.368, 70.485], [146.368, 71.3715], [146.301, 71.4375], [142.24, 71.4375], [141.874, 71.5112], [141.567, 71.7169], [137.757, 75.5269], [137.551, 75.8342], [137.477, 76.2], [137.477, 83.4263], [137.198, 83.1469], [136.888, 82.9412], [136.525, 82.8675], [136.373, 82.898], [136.403, 82.8269], [136.403, 82.2731], [136.19, 81.7601], [135.799, 81.3689], [135.763, 81.3537], [135.763, 77.3481], [135.854, 77.2566], [135.951, 77.0255], [135.951, 76.774], [135.951, 75.377], [135.854, 75.1434], [135.763, 75.0519], [135.763, 73.533], [136.332, 73.533], [136.37, 73.5711], [136.883, 73.7845], [137.437, 73.7845], [137.95, 73.5711], [138.341, 73.1799], [138.554, 72.6669], [138.554, 72.1131], [138.341, 71.6001], [137.95, 71.2089], [137.437, 70.9955], [136.883, 70.9955], [136.37, 71.2089], [136.332, 71.247], [135.344, 71.247], [134.887, 71.0565], [134.356, 71.0565], [133.866, 71.2597], [133.49, 71.6331], [133.286, 72.1233], [133.286, 72.6542], [133.477, 73.1114], [133.477, 75.0519], [133.386, 75.1434], [133.289, 75.3745], [133.289, 75.626], [133.289, 77.023], [133.386, 77.2566], [133.477, 77.3481], [133.477, 81.3537], [133.441, 81.3689], [133.05, 81.7601], [133.032, 81.8007], [133.032, 79.375], [132.959, 79.0118], [132.959, 79.0092], [132.855, 78.8543], [132.753, 78.7019], [132.753, 78.6994], [132.118, 78.0669], [131.811, 77.8612], [131.445, 77.7875], [122.939, 77.7875], [122.71, 77.5589], [122.494, 77.47], [122.71, 77.3811], [123.101, 76.9899], [123.314, 76.4769], [123.314, 75.9231], [123.101, 75.4101], [122.873, 75.1815], [122.873, 73.4187], [122.949, 73.3425], [125.722, 73.3425], [125.766, 73.4466], [125.943, 73.6244], [126.174, 73.721], [126.426, 73.721], [127.823, 73.721], [128.057, 73.6244], [128.234, 73.4466], [128.331, 73.2155], [128.331, 72.964], [128.331, 71.567], [128.234, 71.3334], [128.057, 71.1556], [127.826, 71.059], [127.574, 71.059], [126.177, 71.059], [125.943, 71.1556], [125.766, 71.3334], [125.72, 71.4375], [122.555, 71.4375], [122.189, 71.5112], [122.034, 71.6128], [121.879, 71.7169], [121.247, 72.3519], [121.041, 72.6592], [120.968, 73.025], [120.968, 75.1815], [120.739, 75.4101], [120.526, 75.9231], [120.526, 76.4769], [120.739, 76.9899], [121.13, 77.3811], [121.343, 77.47], [121.13, 77.5589], [120.739, 77.9501], [120.526, 78.4631], [120.526, 79.0169], [120.739, 79.5299], [121.13, 79.9211], [121.343, 80.01], [121.13, 80.0989], [120.739, 80.4901], [120.526, 81.0031], [120.526, 81.5569], [120.739, 82.0699], [121.13, 82.4611], [121.343, 82.55], [121.13, 82.6389], [120.739, 83.0301], [120.526, 83.5431], [120.526, 84.0969], [120.739, 84.6099], [121.13, 85.0011], [121.343, 85.09], [121.13, 85.1789], [120.739, 85.5701], [120.526, 86.0831], [120.526, 86.6369], [120.739, 87.1499], [120.968, 87.3785], [120.968, 89.535], [121.041, 89.9008], [121.247, 90.2081], [121.879, 90.8431], [121.882, 90.8431], [122.034, 90.9447], [122.189, 91.0488], [122.192, 91.0488], [122.555, 91.1225], [125.593, 91.1225], [125.821, 91.3511], [126.035, 91.44], [125.821, 91.5289], [125.593, 91.7575], [122.939, 91.7575], [122.71, 91.5289], [122.197, 91.3155], [121.643, 91.3155], [121.13, 91.5289], [120.739, 91.9201], [120.526, 92.4331], [120.526, 92.9869], [120.739, 93.4999], [121.13, 93.8911], [121.643, 94.1045], [122.197, 94.1045], [122.71, 93.8911], [122.939, 93.6625], [124.699, 93.6625], [124.422, 93.9419], [124.216, 94.2492], [124.142, 94.615], [124.142, 95.885], [124.216, 96.2508], [124.422, 96.5581], [124.729, 96.7638], [124.78, 96.774], [125.123, 97.1144], [125.128, 97.122], [125.331, 97.2566], [125.311, 97.2922], [125.268, 97.442], [125.387, 97.663], [126.746, 97.663], [126.873, 97.663], [127.127, 97.663], [127.254, 97.663], [128.613, 97.663], [128.732, 97.442], [128.73, 97.4369], [128.905, 97.4725], [129.146, 97.4725], [129.857, 98.1837], [129.857, 104.775], [129.931, 105.141], [130.137, 105.448], [131.407, 106.718], [131.714, 106.924], [131.717, 106.924], [132.08, 106.998], [140.005, 106.998], [139.832, 107.17], [139.911, 107.249], [139.822, 107.272], [139.652, 107.762], [139.68, 108.28], [139.822, 108.628], [140.053, 108.687], [140.701, 108.039], [140.79, 107.95], [140.97, 107.77], [141.15, 107.95], [141.239, 108.039], [141.887, 108.687], [142.118, 108.628], [142.288, 108.138], [142.26, 107.62], [142.118, 107.272], [142.027, 107.249], [142.108, 107.17], [141.935, 106.998], [143.815, 106.998], [143.642, 107.17], [143.721, 107.249], [143.632, 107.272], [143.462, 107.762], [143.49, 108.28], [143.632, 108.628], [143.863, 108.687], [144.511, 108.039], [144.6, 107.95], [144.78, 107.77], [144.869, 107.681], [145.517, 107.033], [145.501, 106.98], [145.501, 106.977], [145.778, 106.924], [145.781, 106.924], [146.088, 106.718], [147.358, 105.448], [147.564, 105.141], [147.564, 105.138], [147.637, 104.775], [147.637, 103.899], [147.683, 103.85], [147.833, 104], [148.323, 104.204], [148.854, 104.204], [149.344, 104], [149.522, 103.823], [151.369, 103.823], [151.447, 103.899], [151.447, 104.391], [151.219, 104.62], [151.006, 105.133], [151.006, 105.687], [151.219, 106.2], [151.61, 106.591], [152.123, 106.804], [152.677, 106.804], [153.19, 106.591], [153.581, 106.2], [153.794, 105.687], [153.794, 105.133], [153.581, 104.62], [153.352, 104.391], [153.352, 103.505], [153.279, 103.142], [153.279, 103.139], [153.175, 102.984], [153.073, 102.832], [153.073, 102.829], [152.438, 102.197], [152.131, 101.991], [151.765, 101.918], [152.128, 101.844], [152.131, 101.844], [152.438, 101.638], [153.073, 101.006], [153.073, 101.003], [153.175, 100.848], [153.279, 100.696], [153.279, 100.693], [153.35, 100.33], [153.352, 100.33], [153.352, 100.079], [153.581, 99.8499], [153.794, 99.3369], [153.794, 98.7831], [153.581, 98.2701], [153.19, 97.8789], [152.677, 97.6655], [152.601, 97.6655], [153.073, 97.1956], [153.073, 97.1931], [153.175, 97.0382], [153.279, 96.8858], [153.279, 96.8832], [153.35, 96.52], [153.352, 96.52], [153.352, 94.9985], [153.581, 94.7699], [153.794, 94.2569], [153.794, 93.7031], [153.581, 93.1901], [153.19, 92.7989], [152.677, 92.5855], [152.123, 92.5855], [151.61, 92.7989], [151.219, 93.1901], [151.006, 93.7031], [151.006, 94.2569], [151.219, 94.7699], [151.447, 94.9985], [151.447, 96.1238], [150.279, 97.2896], [150.16, 97.0001], [149.769, 96.6089], [149.565, 96.5225], [149.987, 96.2203], [150.279, 95.7478], [150.322, 95.598], [150.322, 94.902], [150.279, 94.7522], [149.987, 94.2797], [149.57, 93.98], [149.987, 93.6803], [150.279, 93.2078], [150.322, 93.058], [150.203, 92.837], [148.717, 92.837], [148.717, 93.8276], [148.717, 94.1324], [148.717, 95.123], [150.203, 95.123], [150.322, 94.902], [150.322, 95.598], [150.203, 95.377], [148.844, 95.377], [148.717, 95.377], [148.463, 95.377], [148.463, 95.123], [148.463, 94.1324], [148.463, 93.8276], [148.463, 92.837], [146.977, 92.837], [146.858, 93.058], [146.901, 93.2078], [147.193, 93.6803], [147.607, 93.98], [147.193, 94.2797], [146.901, 94.7522], [146.858, 94.902], [146.977, 95.123], [148.463, 95.123], [148.463, 95.377], [148.336, 95.377], [146.977, 95.377], [146.858, 95.598], [146.901, 95.7478], [147.193, 96.2203], [147.612, 96.5225], [147.411, 96.6089], [147.02, 97.0001], [146.807, 97.5131], [146.807, 98.0669], [147.02, 98.5799], [147.183, 98.7425], [144.145, 98.7425], [143.779, 98.8162], [143.624, 98.9178], [143.469, 99.0219], [142.702, 99.789], [142.702, 98.138], [142.583, 97.917], [141.097, 97.917], [141.097, 99.2124], [141.376, 99.2124], [141.917, 99.0854], [142.367, 98.7603], [142.659, 98.2878], [142.702, 98.138], [142.702, 99.789], [140.955, 101.537], [140.706, 101.537], [140.216, 101.74], [140.035, 101.918], [138.189, 101.918], [138.113, 101.839], [138.113, 101.529], [138.204, 101.62], [138.763, 101.851], [139.367, 101.851], [139.926, 101.62], [140.355, 101.191], [140.586, 100.632], [140.586, 100.028], [140.355, 99.4689], [140.018, 99.1311], [140.018, 99.0803], [140.023, 99.0854], [140.564, 99.2124], [140.843, 99.2124], [140.843, 98.044], [140.843, 97.917], [140.843, 97.663], [141.097, 97.663], [141.224, 97.663], [142.583, 97.663], [142.702, 97.442], [142.659, 97.2922], [142.367, 96.8197], [141.945, 96.5149], [142.149, 96.4311], [142.54, 96.0399], [142.753, 95.5269], [142.753, 94.9731], [142.54, 94.4601], [142.149, 94.0689], [141.945, 93.9825], [142.367, 93.6803], [142.659, 93.2078], [142.702, 93.058], [142.702, 92.362], [142.659, 92.2122], [142.367, 91.7397], [141.95, 91.44], [142.367, 91.1403], [142.659, 90.6678], [142.702, 90.518], [142.583, 90.297], [141.097, 90.297], [141.097, 91.2876], [141.097, 91.5924], [141.097, 92.583], [142.583, 92.583], [142.702, 92.362], [142.702, 93.058], [142.583, 92.837], [141.224, 92.837], [141.097, 92.837], [140.843, 92.837], [140.843, 92.583], [140.843, 92.456], [140.843, 91.5924], [140.843, 91.2876], [140.843, 90.424], [140.843, 90.297], [140.843, 90.043], [141.097, 90.043], [141.224, 90.043], [142.583, 90.043], [142.702, 89.822], [142.659, 89.6722], [142.367, 89.1997], [141.945, 88.8949], [142.149, 88.8111], [142.54, 88.4199], [142.753, 87.9069], [142.753, 87.3531], [142.54, 86.8401], [142.149, 86.4489], [141.933, 86.36], [142.149, 86.2711], [142.377, 86.0425], [143.116, 86.0425], [143.827, 86.7537], [143.827, 88.265], [143.901, 88.6308], [144.107, 88.9381], [144.739, 89.5731], [145.052, 89.7788], [145.415, 89.85], [145.776, 89.7788], [145.816, 89.7509], [146.865, 89.7509], [146.807, 89.8931], [146.807, 90.4469], [147.02, 90.9599], [147.411, 91.3511], [147.612, 91.4349], [147.193, 91.7397], [146.901, 92.2122], [146.858, 92.362], [146.977, 92.583], [148.336, 92.583], [148.463, 92.583], [148.717, 92.583], [148.844, 92.583], [150.203, 92.583], [150.322, 92.362], [150.279, 92.2122], [149.987, 91.7397], [149.565, 91.4349], [149.769, 91.3511], [150.16, 90.9599], [150.373, 90.4469], [150.373, 89.8931], [150.312, 89.7509], [151.28, 89.7509], [151.61, 90.0811], [152.123, 90.2945], [152.677, 90.2945], [153.19, 90.0811], [153.581, 89.6899], [153.794, 89.1769], [153.794, 88.6231], [153.731, 88.4682], [153.731, 79.5655], [153.731, 79.314], [153.731, 77.917], [153.634, 77.6834], [153.457, 77.5056], [153.226, 77.409], [152.974, 77.409], [152.273, 77.409], [152.273, 74.488], [152.311, 74.4499], [152.524, 73.9369], [152.524, 73.3831], [152.311, 72.8701], [151.92, 72.4789], [151.407, 72.2655], [150.853, 72.2655], [150.34, 72.4789], [149.949, 72.8701], [149.736, 73.3831], [149.736, 73.9369], [149.949, 74.4499], [149.987, 74.488], [149.987, 77.597], [149.225, 77.597], [148.788, 77.6834], [148.664, 77.7646], [148.638, 77.7799], [148.638, 76.388], [148.61, 75.8698], [148.468, 75.5218], [148.237, 75.4634], [148.057, 75.6437], [148.057, 75.2831], [147.998, 75.0519], [147.508, 74.8817], [146.99, 74.9097], [146.642, 75.0519], [146.583, 75.2831], [147.32, 76.0197], [148.057, 75.2831], [148.057, 75.6437], [147.5, 76.2], [148.237, 76.9366], [148.468, 76.8782], [148.638, 76.388], [148.638, 77.7799], [148.415, 77.9323], [148.057, 78.2904], [148.057, 77.1169], [147.32, 76.3803], [147.14, 76.5607], [147.14, 76.2], [146.403, 75.4634], [146.172, 75.5218], [146.002, 76.012], [146.03, 76.5302], [146.172, 76.8782], [146.403, 76.9366], [147.14, 76.2], [147.14, 76.5607], [146.583, 77.1169], [146.642, 77.3481], [147.132, 77.5183], [147.65, 77.4903], [147.998, 77.3481], [148.057, 77.1169], [148.057, 78.2904], [147.782, 78.5673], [147.533, 78.9356], [147.447, 79.375], [147.447, 81.3537], [147.411, 81.3689], [147.02, 81.7601], [146.807, 82.2731], [146.807, 82.8269], [147.02, 83.3399], [147.411, 83.7311], [147.612, 83.8149], [147.193, 84.1197], [146.901, 84.5922], [146.858, 84.742], [146.977, 84.963], [148.336, 84.963], [148.463, 84.963], [148.717, 84.963], [148.844, 84.963], [150.203, 84.963], [150.322, 84.742], [150.279, 84.5922], [149.987, 84.1197], [149.565, 83.8149], [149.769, 83.7311], [150.16, 83.3399], [150.373, 82.8269], [150.373, 82.2731], [150.16, 81.7601], [149.769, 81.3689], [149.733, 81.3537], [149.733, 79.883], [151.13, 79.883], [151.252, 79.883], [151.343, 79.9744], [151.575, 80.071], [151.826, 80.071], [153.223, 80.071], [153.457, 79.9744], [153.634, 79.7966], [153.731, 79.5655], [153.731, 88.4682], [153.581, 88.1101], [153.19, 87.7189], [152.677, 87.5055], [152.123, 87.5055], [151.61, 87.7189], [151.28, 88.0491], [150.299, 88.0491], [150.322, 87.978], [150.322, 87.282], [150.279, 87.1322], [149.987, 86.6597], [149.57, 86.36], [149.987, 86.0603], [150.279, 85.5878], [150.322, 85.438], [150.203, 85.217], [148.717, 85.217], [148.717, 86.2076], [148.717, 86.5124], [148.717, 87.503], [150.203, 87.503], [150.322, 87.282], [150.322, 87.978], [150.203, 87.757], [148.844, 87.757], [148.717, 87.757], [148.463, 87.757], [148.463, 87.503], [148.463, 86.5124], [148.463, 86.2076], [148.463, 85.217], [146.977, 85.217], [146.858, 85.438], [146.901, 85.5878], [147.193, 86.0603], [147.607, 86.36], [147.193, 86.6597], [146.901, 87.1322], [146.858, 87.282], [146.977, 87.503], [148.463, 87.503], [148.463, 87.757], [148.336, 87.757], [146.977, 87.757], [146.858, 87.978], [146.878, 88.0491], [145.91, 88.0491], [145.732, 87.8688], [145.732, 86.36], [145.659, 85.9968], [145.659, 85.9942], [145.453, 85.6869], [144.183, 84.4169], [143.876, 84.2112], [143.51, 84.1375], [142.377, 84.1375], [142.21, 83.9699], [142.24, 83.9699], [142.471, 83.8733], [142.649, 83.6955], [142.745, 83.4619], [142.748, 82.8345], [142.748, 82.2655], [142.745, 81.6381], [142.649, 81.4045], [142.471, 81.2267], [142.24, 81.1301], [141.989, 81.1301], [141.254, 81.1276], [141.097, 81.2851], [141.097, 82.423], [142.591, 82.423], [142.748, 82.2655], [142.748, 82.8345], [142.591, 82.677], [141.224, 82.677], [141.097, 82.677], [140.843, 82.677], [140.843, 82.423], [140.843, 82.296], [140.843, 81.2851], [140.686, 81.1276], [139.951, 81.1301], [139.7, 81.1301], [139.469, 81.2267], [139.382, 81.313], [139.382, 76.5937], [142.634, 73.3425], [146.301, 73.3425], [146.53, 73.5711], [147.043, 73.7845], [147.597, 73.7845], [148.11, 73.5711], [148.501, 73.1799], [148.714, 72.6669], [148.714, 72.1131], [148.501, 71.6001], [148.273, 71.3715], [148.273, 70.8787], [148.349, 70.8025], [150.195, 70.8025], [150.373, 70.9803], [150.863, 71.1835], [151.394, 71.1835], [151.884, 70.9803], [152.26, 70.6069], [152.464, 70.1167], [152.464, 69.5858], [152.26, 69.0956], [151.887, 68.7197], [151.854, 68.707], [155.529, 68.707], [155.473, 68.9331], [156.21, 69.6697], [156.947, 68.9331], [156.888, 68.707], [182.753, 68.707], [182.753, 76.835], [182.667, 76.3981], [182.664, 76.3956], [182.583, 76.2737], [182.418, 76.0273], [182.418, 76.0247], [181.783, 75.3923], [181.414, 75.1434], [180.975, 75.057], [172.717, 75.057], [172.717, 74.1705], [172.621, 73.9369], [172.443, 73.7591], [172.212, 73.6625], [171.961, 73.6625], [168.151, 73.6625], [167.917, 73.7591], [167.739, 73.9369], [167.643, 74.168], [167.643, 74.4195], [167.643, 75.057], [165.1, 75.057], [164.661, 75.1434], [164.292, 75.3923], [162.669, 77.0153], [162.669, 73.8607], [162.641, 73.3196], [162.489, 72.9463], [162.25, 72.8777], [162.072, 73.0555], [162.072, 72.6999], [162.004, 72.4611], [161.491, 72.2808], [160.95, 72.3087], [160.576, 72.4611], [160.508, 72.6999], [161.29, 73.4797], [162.072, 72.6999], [162.072, 73.0555], [161.47, 73.66], [162.25, 74.4423], [162.489, 74.3737], [162.669, 73.8607], [162.669, 77.0153], [162.088, 77.597], [162.072, 77.597], [162.072, 74.6201], [161.29, 73.8403], [161.11, 74.0181], [161.11, 73.66], [160.33, 72.8777], [160.091, 72.9463], [159.911, 73.4593], [159.939, 74.0004], [160.091, 74.3737], [160.33, 74.4423], [161.11, 73.66], [161.11, 74.0181], [160.508, 74.6201], [160.576, 74.8589], [161.089, 75.0392], [161.63, 75.0113], [162.004, 74.8589], [162.072, 74.6201], [162.072, 77.597], [160.744, 77.597], [160.287, 77.4065], [159.756, 77.4065], [159.266, 77.6097], [158.89, 77.9831], [158.686, 78.4733], [158.686, 79.0042], [158.89, 79.4944], [159.263, 79.8703], [159.753, 80.0735], [160.284, 80.0735], [160.741, 79.883], [162.56, 79.883], [162.997, 79.7966], [162.999, 79.7966], [163.368, 79.5477], [165.572, 77.343], [167.643, 77.343], [167.643, 78.2295], [167.739, 78.4631], [167.917, 78.6409], [168.148, 78.7375], [168.399, 78.7375], [172.209, 78.7375], [172.443, 78.6409], [172.621, 78.4631], [172.717, 78.232], [172.717, 77.9805], [172.717, 77.343], [180.467, 77.343], [180.467, 83.0605], [178.946, 83.0605], [178.712, 83.1571], [178.534, 83.3349], [178.438, 83.566], [178.438, 83.8175], [178.438, 85.5955], [178.473, 85.6869], [178.166, 85.4812], [177.8, 85.4075], [172.677, 85.4075], [172.677, 81.7474], [172.667, 80.7568], [172.306, 79.8932], [171.95, 79.69], [171.77, 79.8703], [171.77, 79.5096], [171.567, 79.154], [170.647, 78.7832], [169.657, 78.7933], [168.793, 79.154], [168.59, 79.5096], [170.18, 81.0997], [171.77, 79.5096], [171.77, 79.8703], [170.36, 81.28], [171.95, 82.87], [172.306, 82.6668], [172.677, 81.7474], [172.677, 85.4075], [172.532, 85.4075], [172.334, 84.9224], [171.77, 84.3585], [171.77, 83.0504], [170.18, 81.4603], [170, 81.6407], [170, 81.28], [168.41, 79.69], [168.054, 79.8932], [167.683, 80.8126], [167.693, 81.8032], [168.054, 82.6668], [168.41, 82.87], [170, 81.28], [170, 81.6407], [168.59, 83.0504], [168.793, 83.406], [169.713, 83.7768], [170.703, 83.7667], [171.567, 83.406], [171.77, 83.0504], [171.77, 84.3585], [171.62, 84.2086], [170.688, 83.82], [169.677, 83.82], [168.742, 84.2061], [168.029, 84.9198], [167.823, 85.4075], [163.195, 85.4075], [162.829, 85.4812], [162.674, 85.5828], [162.519, 85.6869], [161.887, 86.3219], [161.681, 86.6292], [161.607, 86.995], [161.607, 87.8815], [161.379, 88.1101], [161.166, 88.6231], [161.166, 89.1769], [161.379, 89.6899], [161.77, 90.0811], [162.283, 90.2945], [162.837, 90.2945], [163.35, 90.0811], [163.741, 89.6899], [163.954, 89.1769], [163.954, 88.6231], [163.741, 88.1101], [163.512, 87.8815], [163.512, 87.3887], [163.589, 87.3125], [167.825, 87.3125], [168.026, 87.7976], [168.74, 88.5114], [169.672, 88.9], [168.742, 89.2861], [168.029, 89.9998], [167.823, 90.4875], [165.1, 90.4875], [164.734, 90.5612], [164.427, 90.7669], [162.608, 92.5855], [162.283, 92.5855], [161.77, 92.7989], [161.379, 93.1901], [161.166, 93.7031], [161.166, 94.2569], [161.379, 94.7699], [161.77, 95.1611], [162.283, 95.3745], [162.837, 95.3745], [163.35, 95.1611], [163.741, 94.7699], [163.954, 94.2569], [163.954, 93.9317], [165.494, 92.3925], [167.825, 92.3925], [168.026, 92.8776], [168.74, 93.5914], [169.672, 93.98], [168.742, 94.3661], [168.029, 95.0798], [167.823, 95.5675], [165.1, 95.5675], [164.734, 95.6412], [164.427, 95.8469], [162.608, 97.6655], [162.283, 97.6655], [161.77, 97.8789], [161.379, 98.2701], [161.166, 98.7831], [161.166, 99.3369], [161.379, 99.8499], [161.77, 100.241], [162.283, 100.454], [162.837, 100.454], [163.35, 100.241], [163.741, 99.8499], [163.954, 99.3369], [163.954, 99.0117], [165.494, 97.4725], [167.825, 97.4725], [168.026, 97.9576], [168.74, 98.6714], [169.672, 99.06], [168.742, 99.4461], [168.029, 100.16], [167.64, 101.092], [167.64, 102.103], [168.026, 103.038], [168.74, 103.751], [169.227, 103.955], [169.227, 104.379], [169.149, 104.457], [163.579, 104.457], [163.35, 104.229], [162.837, 104.016], [162.283, 104.016], [161.77, 104.229], [161.379, 104.62], [161.166, 105.133], [161.166, 105.687], [161.379, 106.2], [161.77, 106.591], [162.283, 106.804], [162.837, 106.804], [163.35, 106.591], [163.579, 106.362], [169.545, 106.362], [169.908, 106.289], [169.911, 106.289], [170.218, 106.083], [170.853, 105.451], [170.853, 105.448], [170.955, 105.293], [171.059, 105.141], [171.059, 105.138], [171.13, 104.775], [171.132, 104.775], [171.132, 103.952], [171.618, 103.754], [172.331, 103.04], [172.535, 102.552], [172.72, 102.552], [173.083, 102.479], [173.086, 102.479], [173.393, 102.273], [178.598, 97.0686], [178.712, 97.1829], [178.943, 97.2795], [179.194, 97.2795], [182.753, 97.2795], [182.753, 109.093]]]]</attributes>
  </zone>
  <segment>
    <try>\n)\n</try>
    <fail/>
  </segment>
  <gr_text>
    <try>\n)\n</try>
    <fail/>
  </gr_text>
  <gr_line>
    <try>\n)\n</try>
    <fail/>
  </gr_line>
  <zone>
    <try>\n)\n</try>
    <fail/>
  </zone>
  <unused>
    <try>\n)\n</try>
    <fail/>
  </unused>
  <via>
    <try>\n)\n</try>
    <fail/>
  </via>
  <success>\n)\n</success>
  <attributes>[3, [91.1606, 61.8236, 196.621, 118.313], [[15, [D, e, s, s, u, s], [s, i, g, n, a, l], 0], [0, [D, e, s, s, o, u, s], [s, i, g, n, a, l], 0], [16, [D, e, s, s, o, u, s, ., A, d, h, e, s], [u, s, e, r], 0], [17, [D, e, s, s, u, s, ., A, d, h, e, s], [u, s, e, r], 0], [18, [D, e, s, s, o, u, s, ., P, a, t, e], [u, s, e, r], 0], [19, [D, e, s, s, u, s, ., P, a, t, e], [u, s, e, r], 0], [20, [D, e, s, s, o, u, s, ., S, i, l, k, S], [u, s, e, r], 0], [21, [D, e, s, s, u, s, ., S, i, l, k, S], [u, s, e, r], 0], [22, [D, e, s, s, o, u, s, ., M, a, s, q, u, e], [u, s, e, r], 0], [23, [D, e, s, s, u, s, ., M, a, s, q, u, e], [u, s, e, r], 0], [24, [D, e, s, s, i, n, ., U, s, e, r], [u, s, e, r], 0], [25, [C, m, t, s, ., U, s, e, r], [u, s, e, r], 0], [26, [E, c, o, 1, ., U, s, e, r], [u, s, e, r], 0], [27, [E, c, o, 2, ., U, s, e, r], [u, s, e, r], 0], [28, [C, o, n, t, o, u, r, s, ., C, i], [u, s, e, r], 0]], [[[D, B, 2, 5, M, _, C, I], [D, e, s, s, u, s], [102.87, 88.9, 90], [[[d, e, s, c, r], [C, o, n, n, e, c, t, e, d,  , D, B, 2, 5,  , m, a, l, e,  , c, o, u, c, h, e]], [[t, a, g, s], [C, O, N, N,  , D, B, 2, 5]], [[p, a, t, h], [/, 3, E, B, F, 7, D, 0, 4]]], ], [[M, I, R, E], [D, e, s, s, u, s], [102.87, 67.31, 0], [[[p, a, t, h], [M, I, R, E]]], ], [[M, I, R, E], [D, e, s, s, u, s], [102.87, 110.49, 0], [[[p, a, t, h], [M, I, R, E]]], ], [[M, I, R, E], [D, e, s, s, u, s], [184.15, 110.49, 0], [[[p, a, t, h], [M, I, R, E]]], ], [[M, I, R, E], [D, e, s, s, u, s], [184.15, 67.31, 0], [[[p, a, t, h], [M, I, R, E]]], ], [[b, o, r, n, i, e, r, 6], [D, e, s, s, u, s], [170.18, 88.9, 270], [[[d, e, s, c, r], [B, o, r, n, i, e, r,  , d, ', a, l, i, m, e, n, t, a, t, i, o, n,  , 4,  , p, i, n, s]], [[t, a, g, s], [D, E, V]], [[p, a, t, h], [/, 3, E, B, F, 8, 3, 0, C]]], ], [[R, 4], [D, e, s, s, u, s], [142.24, 72.39, 0], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 3, E, B, F, 8, 1, 8, 7]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ], [[R, 4], [D, e, s, s, u, s], [116.84, 76.2, 180], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 3, E, B, F, 7, D, 1, 6]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ], [[R, 4], [D, e, s, s, u, s], [157.48, 88.9, 180], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 3, E, B, F, 8, 1, 9, B]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ], [[R, 4], [D, e, s, s, u, s], [156.21, 73.66, 0], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 3, E, B, F, 8, 1, 8, E]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ], [[R, 4], [D, e, s, s, u, s], [116.84, 83.82, 180], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 3, E, B, F, 7, D, 2, 6]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ], [[R, 4], [D, e, s, s, u, s], [116.84, 92.71, 180], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 4, D, 5, 2, 8, 0, 7, F]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ], [[R, 4], [D, e, s, s, u, s], [116.84, 86.36, 180], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 4, D, 5, 2, 8, 0, 8, 0]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ], [[R, 4], [D, e, s, s, u, s], [116.84, 81.28, 180], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 3, E, B, F, 7, D, 3, 3]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ], [[R, 4], [D, e, s, s, u, s], [116.84, 78.74, 180], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 3, E, B, F, 7, D, 3, 1]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ], [[R, 4], [D, e, s, s, u, s], [157.48, 93.98, 180], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 4, D, 5, 2, 7, 3, 1, 6]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ], [[R, 4], [D, e, s, s, u, s], [157.48, 99.06, 180], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 4, D, 5, 2, 8, 0, 8, 3]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ], [[R, 4], [D, e, s, s, u, s], [157.48, 105.41, 180], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 4, D, 5, 2, 8, 0, 8, 2]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ], [[R, 4], [D, e, s, s, u, s], [116.84, 104.14, 180], [[[d, e, s, c, r], [R, e, s, i, t, a, n, c, e,  , 4,  , p, a, s]], [[t, a, g, s], [R]], [[p, a, t, h], [/, 3, E, B, F, 7, D, 2, 2]], [[a, u, t, o, p, l, a, c, e, _, c, o, s, t, 1, 8, 0], [1, 0]]], ], [[C, P, 5], [D, e, s, s, u, s], [140.97, 76.2, 0], [[[d, e, s, c, r], [C, o, n, d, e, n, s, a, t, e, u, r,  , p, o, l, a, r, i, s, e]], [[t, a, g, s], [C, P]], [[p, a, t, h], [/, 3, E, B, F, 8, 2, C, 6]]], ], [[D, 3], [D, e, s, s, u, s], [156.21, 78.74, 180], [[[d, e, s, c, r], [D, i, o, d, e,  , 3,  , p, a, s]], [[t, a, g, s], [D, I, O, D, E,  , D, E, V]], [[p, a, t, h], [/, 3, E, B, F, 8, 1, 7, 6]]], ], [[D, 3], [D, e, s, s, u, s], [130.81, 72.39, 180], [[[d, e, s, c, r], [D, i, o, d, e,  , 3,  , p, a, s]], [[t, a, g, s], [D, I, O, D, E,  , D, E, V]], [[p, a, t, h], [/, 3, E, B, F, 8, 1, 5, E]]], ], [[1, 4, D, I, P, -, E, L, L, 3, 0, 0], [D, e, s, s, u, s], [144.78, 90.17, 270], [[[d, e, s, c, r], [M, o, d, u, l, e,  , D, i, l,  , 1, 4,  , p, i, n, s, ,,  , p, a, d, s,  , e, l, l, i, p, t, i, q, u, e, s]], [[t, a, g, s], [D, I, L]], [[p, a, t, h], [/, 3, E, B, F, 7, E, E, C]]], ], [[1, 4, D, I, P, -, E, L, L, 3, 0, 0], [D, e, s, s, u, s], [130.81, 90.17, 270], [[[d, e, s, c, r], [M, o, d, u, l, e,  , D, i, l,  , 1, 4,  , p, i, n, s, ,,  , p, a, d, s,  , e, l, l, i, p, t, i, q, u, e, s]], [[t, a, g, s], [D, I, L]], [[p, a, t, h], [/, 3, E, B, F, 7, D, B, D]]], ], [[C, 2], [D, e, s, s, u, s], [140.97, 105.41, 270], [[[d, e, s, c, r], [C, o, n, d, e, n, s, a, t, e, u, r,  , =,  , 2,  , p, a, s]], [[t, a, g, s], [C]], [[p, a, t, h], [/, 4, D, 5, 2, 8, 0, 8, 5]]], ], [[C, 2], [D, e, s, s, u, s], [153.67, 69.85, 0], [[[d, e, s, c, r], [C, o, n, d, e, n, s, a, t, e, u, r,  , =,  , 2,  , p, a, s]], [[t, a, g, s], [C]], [[p, a, t, h], [/, 4, D, 5, 2, 8, 0, 8, 4]]], ], [[C, 2], [D, e, s, s, u, s], [144.78, 105.41, 270], [[[d, e, s, c, r], [C, o, n, d, e, n, s, a, t, e, u, r,  , =,  , 2,  , p, a, s]], [[t, a, g, s], [C]], [[p, a, t, h], [/, 4, D, 5, 2, 8, 0, 8, 6]]], ], [[C, 2], [D, e, s, s, u, s], [148.59, 105.41, 270], [[[d, e, s, c, r], [C, o, n, d, e, n, s, a, t, e, u, r,  , =,  , 2,  , p, a, s]], [[t, a, g, s], [C]], [[p, a, t, h], [/, 3, E, B, F, 8, 1, A, 7]]], ], [[D, B, 9, M, _, C, I, _, I, N, V, E, R, T], [D, e, s, s, u, s], [184.15, 90.17, 270], [[[d, e, s, c, r], [C, o, n, n, e, c, t, e, u, r,  , D, B, 9,  , f, e, m, e, l, l, e,  , e, n, c, a, r, t, e]], [[t, a, g, s], [C, O, N, N,  , D, B, 9]], [[p, a, t, h], [/, 3, E, C, D, E, 5, C, 8]]], ]], ]</attributes>
</kicad>
